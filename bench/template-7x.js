/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-bem/__i18n/_dummy/i-bem__i18n_dummy_yes.bemhtml.js */
oninit(function(exports) {
    (function(global, bem_) {
        if (bem_.I18N) {
            return;
        }

        /** @global points to global context */
        global.BEM = bem_;

        /**
         * `BEM.I18N` API stub
         */
        var i18n = bem_.I18N = function(keyset, key) {
            return key;
        };

        i18n.keyset = function() {
            return i18n
        }
        i18n.key = function(key) {
            return key
        }
        i18n.lang = function() {
            return
        }
    })(this, typeof BEM === 'undefined' ? {} : BEM);
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-bem/__i18n/_dummy/i-bem__i18n_dummy_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-desktop/i-jquery/__core/i-jquery__core.bemhtml.js */
// autogenerated from ../../../../../libs/bem-bl/blocks-desktop/i-jquery/__core/i-jquery__core.bemhtml
block('i-jquery').elem('core').def()(function() {
    return applyCtx({
        block: 'b-page',
        elem: 'js',
        nonce: this.ctx.nonce || this._nonce,
        url: '//yastatic.net/jquery/1.8.3/jquery.min.js'
    });
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-desktop/i-jquery/__core/i-jquery__core.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/i-jquery/__core/i-jquery__core.bemhtml.js */
// autogenerated from i-jquery__core.bemhtml
block('i-jquery').elem('core').replace()(function() {
    return {
        block: 'b-page',
        elem: 'js',
        url: '//yastatic.net/jquery/2.1.4/jquery.min.js'
    };
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/i-jquery/__core/i-jquery__core.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-global/i-global.bemhtml.js */
oninit(function(exports) {
    var ctxProto = exports.BEMContext.prototype,
        // Параметры по умолчанию
        glob = exports['i-global'] = ctxProto['i-global'] = ctxProto.extend({
            'lang': 'ru',
            'tld': 'ru',
            'content-region': 'ru',
            'click-host': '//clck.yandex.ru',
            'passport-host': 'https://passport.yandex.ru',
            'pass-host': 'https://pass.yandex.ru',
            'social-host': 'https://social.yandex.ru',
            'export-host': 'https://export.yandex.ru',
            'login': '',
            'lego-static-host': '//yastatic.net/lego/2.10-142'
        }, ctxProto['i-global']);

    // Параметры доступные в JS
    glob._public = {
        id: true,
        lang: true,
        tld: true,
        'content-region': true,
        'user-region': true,
        login: true,
        displayName: true,
        index: true,
        yandexuid: true,
        'passport-host': true,
        'pass-host': true,
        'passport-msg': true,
        'static-host': true,
        'lego-static-host': true,
        'social-host': true,
        clck: true,
        'click-host': true,
        'export-host': true,
        'i-host': true,
        'social-retpath': true,
        'lego-path': true,
        sid: true,
        retpath: true,
        uid: true
    };

    /**
     * Делает один или несколько параметров доступными или недоступными в JS.
     *
     * ```
     * bh.lib.makePublic('param');
     * bh.lib.makePublic('param', false);
     * bh.lib.makePublic({first: true, second: false});
     * ```
     *
     * @param {String|Object<String,Boolean>} param Имя параметра или объект именами параметров в качестве ключей
     * и значениями `true` или `false`
     * @param {Boolean} [flag] Устанавливаемое значение доступности параметра
     */
    glob.makePublic = function(param, flag) {
        if(typeof param === 'object') {
            glob._public = ctxProto.extend(glob._public, param);
            return;
        }

        if(typeof flag === 'undefined') {
            flag = true;
        }

        glob._public[param] = flag;
    };

    /**
     * Проверяет доступен ли параметр в JS.
     *
     * @param {String} param Имя параметра
     * @returns {Boolean} Доступность параметра
     */
    glob.isPublic = function(param) {
        return Boolean(glob._public[param]);
    };

    /**
     * Изменяет локаль.
     *
     * @param {String} tld Код локали, например `ru` или `tr`
     */
    glob._setTld = function(tld) {
        var xYaDomain = tld === 'tr' ? 'yandex.com.tr' : 'yandex.' + tld,
            yaDomain = ['ua', 'by', 'kz'].indexOf(tld) !== -1 ? 'yandex.ru' : xYaDomain;

        glob.tld = tld;
        glob['content-region'] = tld;
        glob['click-host'] = '//clck.' + yaDomain;
        glob['passport-host'] = 'https://passport.' + yaDomain;
        glob['pass-host'] = 'https://pass.' + xYaDomain;
        glob['social-host'] = 'https://social.' + xYaDomain;
        glob['export-host'] = 'https://export.' + xYaDomain;
    };

    ctxProto._iGlobalBackup = {
        _backup: null,
        exists: function() {
            return Boolean(this._backup);
        },
        save: function() {
            this._backup = ctxProto.extend({}, glob);
        },
        restore: function() {
            // Нельзя просто заменить ссылку на i-global, некоторые блоки сохраняют её при инициализации шаблонов.
            // Приходится удалять и перезаписывать содержимое.
            var p;
            for(p in glob) {
                delete glob[p];
            }
            for(p in this._backup) {
                glob[p] = this._backup[p];
            }
        }
    };
});

block('i-global')(
    tag()(''),

    def()(function() {
        var params = this.ctx.params || {},
            iGlobal = this['i-global'];

        // https://st.yandex-team.ru/ISL-1844
        if(!this._iGlobalBackup.exists()) {
            this._iGlobalBackup.save();
        } else if(this.ctx.reset !== false) {
            this._iGlobalBackup.restore();
        }

        // LEGO-7925
        if(params.tld && params.tld !== iGlobal.tld) {
            iGlobal._setTld(params.tld);
        }

        for(var p in params) {
            iGlobal[p] = params[p];
        }

        return '';
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-global/i-global.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/i-global/i-global.bemhtml.js */
oninit(function(exports) {
    var glob = exports.BEMContext.prototype['i-global'];

    glob.makePublic('query', true);
    glob.makePublic('reqid', true);
    glob.makePublic('tld', true);
    glob.makePublic('nahodki', true);
    glob.makePublic('pg', true);
    glob.makePublic('shownResult', true);
    glob.makePublic('framebuster', true);
    glob.makePublic('ajaxUrl', true);
    glob.makePublic('lr', true);
    glob.makePublic('rlr', true);
    glob.makePublic('pid', true);
    glob.makePublic('serpRequestExtraParams', true);
    glob.makePublic('isCounterHeights', true);
    glob.makePublic('geoanswer', true);
    glob.makePublic('sk', true);
    glob.makePublic('removeAppParams', true);
    glob.makePublic('hasMda', true);
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/i-global/i-global.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/i-global/i-global.bemhtml.js */
oninit(function(exports) {
    var glob = exports.BEMContext.prototype['i-global'];

    glob.makePublic('isPageLoadCounter', true);
    glob.makePublic('isCounterSerpview', true);
    glob.makePublic('pref-ajax', true);
    glob.makePublic('maxAjaxUrlLength', true);
    glob.makePublic('areScriptsAsync', true);
    glob.makePublic('isCounterDirectDoubleTitles', true);
    glob.makePublic('isSinglelineAdvTitles', true);
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/i-global/i-global.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-ua/i-ua.bemhtml.js */
// autogenerated from ../../../../libs/bem-bl/blocks-common/i-ua/i-ua.bemhtml
block('i-ua')(
    tag()('script'),
    bem()(false),
    attrs()(function() {
        return {
            nonce: this.ctx.nonce || this._nonce
        };
    }),
    content()(function() {
        return [
            ';(function(d,e,c,r){',
            'e=d.documentElement;',
            'c="className";',
            'r="replace";',
            'e[c]=e[c][r]("i-ua_js_no","i-ua_js_yes");',
            'if(d.compatMode!="CSS1Compat")',
            'e[c]=e[c][r]("i-ua_css_standart","i-ua_css_quirks")',
            '})(document);'
        ].join('');
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-ua/i-ua.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/i-ua/i-ua.bemhtml.js */
block('i-ua').def()(function() {
    this.ctx.attrs = { nonce: this['i-global'].nonce };
    return applyNext();
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/i-ua/i-ua.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/pages-desktop/search/blocks/i-ua/i-ua.bemhtml.js */
// autogenerated from i-ua.bemhtml
block('i-ua').match(function() {
    return this['i-global'].nonce;
})(
    match(function() {
        return !this._nonce;
    }).def()(function() {
        return applyNext({
            _nonce: this['i-global'].nonce
        });
    }),
    attrs().match(function() {
        return this._nonce;
    })(function() {
        return this.extend(applyNext(), {
            nonce: this._nonce
        });
    })
);

/* end: /Users/miripiruni/Documents/www/web4/pages-desktop/search/blocks/i-ua/i-ua.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-ua/__svg/i-ua__svg.bemhtml.js */
// autogenerated from ../../../../../libs/islands-romochka/common.blocks/i-ua/__svg/i-ua__svg.bemhtml
block('i-ua').content()(function() {
    var c = applyNext();

    c += [
        ';(function(d,e,c,n,w,v,f){',
        'e=d.documentElement;',
        'c="className";',
        'n="createElementNS";',
        'f="firstChild";',
        'w="http://www.w3.org/2000/svg";',
        'e[c]+=" i-ua_svg_"+(!!d[n]&&!!d[n](w,"svg").createSVGRect?"yes":"no");',
        'v=d.createElement("div");',
        'v.innerHTML="<svg/>";',
        'e[c]+=" i-ua_inlinesvg_"+((v[f]&&v[f].namespaceURI)==w?"yes":"no");',
        '})(document);'
    ].join('');

    return c;
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-ua/__svg/i-ua__svg.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-jquery/_version/i-jquery_version.bemhtml.js */
// autogenerated from ../../../../../libs/bem-bl/blocks-common/i-jquery/_version/i-jquery_version.bemhtml
block('i-jquery').def()(function() {
    return applyCtx({
        block: 'b-page',
        elem: 'js',
        nonce: this.ctx.nonce || this._nonce,
        url: this.ctx.url || (this.ctx.protocol ? this.ctx.protocol + ':' : '') + '//yastatic.net/jquery/' + this.mods.version + '/jquery.min.js'
    });
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-jquery/_version/i-jquery_version.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/b-page/__js/b-page__js.bemhtml.js */
// autogenerated from ../../../../../libs/bem-bl/blocks-common/b-page/__js/b-page__js.bemhtml
block('b-page').elem('js')(
    bem()(false),

    tag()('script'),

    attrs()(function() {
        return {
            src: this.ctx.url,
            nonce: this.ctx.nonce || this._nonce
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/b-page/__js/b-page__js.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/b-page/__js/b-page__js.bemhtml.js */
block('b-page').elem('js').match(function() {
    return this['i-global'].nojs;
}).def()('');

block('b-page').elem('js').attrs()(function() {
    return this.ctx.url ?
        { src: this.ctx.url } :
        { nonce: this['i-global'].nonce };
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/b-page/__js/b-page__js.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/b-page/__js/b-page__js.bemhtml.js */
block('b-page').elem('js').match(function() {
    return this.ctx.url;
}).attrs()(function() {
    return { src: this.ctx.url };
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/b-page/__js/b-page__js.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/pages-desktop/search/blocks/b-page/__js/b-page__js.bemhtml.js */
block('b-page').elem('js').mod('waiting', 'external').match(function() {
    return this._asyncScripts;
}).content()(function() {
    var idxName = '__bPageJsWaiterIndex';

    if (this[idxName] === undefined) {
        this[idxName] = 0;
    }

    var id = 'inl' + (this[idxName]++);
    return [
        'Ya.Serp.scriptUntangler.define("' + id + '", ["jquery", "common"], function() {',
            applyNext(),
        '});'
    ];
});

/* end: /Users/miripiruni/Documents/www/web4/pages-desktop/search/blocks/b-page/__js/b-page__js.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/rub/rub.bemhtml.js */
// autogenerated from rub.bemhtml
block('rub')(
    tag()('span'),
    content()('Р'))

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/rub/rub.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/b-statcounter/b-statcounter.bemhtml.js */
// autogenerated from ../../../../libs/islands-romochka/common.blocks/b-statcounter/b-statcounter.bemhtml
block('b-statcounter').tag()('i');

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/b-statcounter/b-statcounter.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-bem/__i18n/i-bem__i18n.bemhtml.js */
block('i-bem').elem('i18n').def()(function() {
    if (!this.ctx) return '';

    var ctx = this.ctx,
        keyset = ctx.keyset,
        key = ctx.key,
        params = ctx.params || {};

    if (!(keyset || key))
        return '';

    /**
     * Consider `content` is a reserved param that contains
     * valid bemjson data
     */
     ctx.content && (params.content = this.reapply(ctx.content));

     // Для bem-xjst 1.x applyCtx нужен, чтобы записать в _buf
     return applyCtx(key);
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-bem/__i18n/i-bem__i18n.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/b-page/b-page.bemhtml.js */
block('b-page')(
    elem('root').attrs()(function() {
        return {
            lang: this['i-global'].lang || 'ru'
        };
    }),

    mode('js-params')(function() {
        var glob = this['i-global'],
            js = {},
            block = {
                block: 'i-global',
                js: js
            };

        // (NOTE): наполняем параметры передаваемые в JS
        Object.keys(glob).forEach(function(param) {
            if(glob.isPublic(param)) {
                js[param] = glob[param];
            }
        });

        return block;
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/b-page/b-page.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-desktop/b-page/b-page.bemhtml.js */
block('b-page')(
    def()(function() {
        var ctx = this.ctx;

        this._mixJsParams = apply('js-params');

        return applyCtx([
            '<!DOCTYPE html>',
            {
                elem: 'root',
                content: [
                    {
                        elem: 'head',
                        content: [
                            ctx.csp && this.extend(ctx.csp, { elem: 'csp' }),
                            {
                                elem: 'meta',
                                attrs: { charset: 'utf-8' }
                            },
                            {
                                elem: 'meta',
                                attrs: { 'http-equiv': 'X-UA-Compatible', content: 'IE=edge' }
                            },
                            {
                                tag: 'title',
                                content: ctx.title
                            },
                            ctx.favicon ? {
                                elem: 'favicon',
                                url: ctx.favicon
                            } : '',
                            ctx.meta,
                            { block: 'i-ua' },
                            ctx.head
                        ]
                    },
                    {
                        elem: 'body',
                        mix: [
                            ctx,
                            {
                                block: 'i-ua',
                                mods: { interaction: 'yes' },
                                js: true
                            }
                        ].concat(apply('mix') || [], ctx.mix || []),
                        content: ctx.content
                    }
                ]
            }
        ]);
    }),

    elem('root')(
        bem()(false),
        tag()('html'),
        cls()('i-ua_js_no i-ua_css_standard')
    ),

    elem('head')(
        bem()(false),
        tag()('head')
    ),

    elem('body').tag()('body'),

    elem('link')(
        bem()(false),
        tag()('link')
    ),

    elem('meta')(
        bem()(false),
        tag()('meta'),
        attrs()(function() {
            return this.ctx.attrs;
        })
    ),

    elem('favicon')(
        bem()(false),
        tag()('link'),
        attrs()(function() {
            return {
                rel: 'shortcut icon',
                href: this.ctx.url
            };
        })
    ),

    // (XXX, varankinv@): после LEGO-8149 реализация b-pages в desktop и touch отличается;
    // в desktop mix срабатывает на блок, в touch — на элемент __body
    elem('body').mix()(function() {
        return (applyNext() || []).concat(this._mixJsParams);
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-desktop/b-page/b-page.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/b-page/b-page.bemhtml.js */
// Элемент для разделения результата bemhtml-шаблонизации
// Нужен для получения части страницы в pre-search, и оставшейся части - для основного ответа
block('b-page').elem('presearch-delimiter').def()(function() {
    return '\u0007<"\''
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/b-page/b-page.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/pages-desktop/search/blocks/b-page/b-page.bemhtml.js */
// autogenerated from b-page.bemhtml
block('b-page').match(function() {
        return !this._asyncScripts;
}).def()(function() {
    return applyNext({
        _asyncScripts: this['i-global'].areScriptsAsync
    });
});

/* end: /Users/miripiruni/Documents/www/web4/pages-desktop/search/blocks/b-page/b-page.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-desktop/b-page/__css/b-page__css.bemhtml.js */
block('b-page').elem('css')(
    bem()(false),

    tag()('style'),

    attrs()(function() {
        return {
            nonce: this.ctx.nonce || this._nonce
        };
    }),

    def().match(function() {
        return this.ctx.hasOwnProperty('ie');
    }).match(function() {
        return !this.ctx._ieCommented;
    })(function() {
        var ctx = this.ctx,
            ie = ctx.ie;

        if (ie === true) {
            return applyCtx([6, 7, 8, 9].map(function(v) {
                return {
                    elem: 'css',
                    url: ctx.url + '.ie' + v + '.css',
                    ie: 'IE ' + v
                }
            }, this));
        } else {
            var hideRule = !ie ? ['gt IE 9', '<!-->', '<!--'] :
                ie === '!IE' ? [ie, '<!-->', '<!--'] : [ie, '', ''];

            ctx._ieCommented = true;

            return applyCtx([
                '<!--[if ' + hideRule[0] + ']>',
                hideRule[1],
                ctx,
                hideRule[2],
                '<![endif]-->'
            ]);
        }
    }),

    match(function() {
        return this.ctx.url;
    })(
        tag()('link'),
        attrs()(function() {
            return {
                rel: 'stylesheet',
                href: this.ctx.url
            };
        })
    )
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-desktop/b-page/__css/b-page__css.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/b-page/__css/b-page__css.bemhtml.js */
// autogenerated from b-page__css.bemhtml
block('b-page').elem('css').match(function() {
    return this['i-global'].nocss;
}).def()(null);

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/b-page/__css/b-page__css.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/b-page/__css/b-page__css.bemhtml.js */
// autogenerated from b-page__css.bemhtml
block('b-page').elem('css').attrs().match(function() {
    return this.ctx.url;
})(function() {
    return {
        rel: 'stylesheet',
        href: this.ctx.url
    };
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/b-page/__css/b-page__css.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/b-page/__noscript/b-page__noscript.bemhtml.js */
block('b-page').elem('noscript')(
    bem()(false),

    tag()('noscript')
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/b-page/__noscript/b-page__noscript.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/b-page/__favicon/b-page__favicon.bemhtml.js */
// autogenerated from b-page__favicon.bemhtml
block('b-page').elem('icon')(
    bem()(false),
    tag()('link'),
    attrs()(function() {
        return {
            rel: 'shortcut icon',
            href: this.ctx.url
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/b-page/__favicon/b-page__favicon.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/log/blocks-common/i-log/i-log.bemhtml.js */
oninit(function(exports) {
    var ctxProto = exports.BEMContext.prototype;
    ctxProto['log-tree-portals'] = {};

    exports.compile(function() {
        block('*')(
            mode('logTreePortalTopMix')(function() {
                return { block: 'log-tree-portal-top-' + this.ctx.logTreePortalTop };
            }),
            mode('logTreePortalBottomAttrValue')(function() {
                return this.ctx.logTreePortalBottom;
            }),
            def()(
                match(function() {
                    return !this.logTreeNotRoot;
                })(function() {
                    var res = applyNext({ logTreeNotRoot: true });
                    this.processLogTree && this.processLogTree(this.logTree);
                    return res;
                }),
                match(function() {
                    return this.ctx.logNode;
                })(function() {
                    if (!this.logTree) {
                        this.logTree = this.logTreeSiblings = [];
                    }

                    var ctx = this.ctx,
                    siblings = this.logTreeSiblings,
                    current = this.ctx.logNode;

                    current.id = current.id || this.generateId();
                    (ctx.attrs || (ctx.attrs = {}))['data-log-node'] = current.id.toString();
                    siblings.push(current);
                    this.logTreeSiblings = current.children = [];
                    delete ctx.logNode;

                    var res = applyCtx(ctx);

                    this.logTreeSiblings = siblings;
                    if (current.children.length === 0) {
                        delete current.children;
                    }

                    return res;
                }),

                match(function() {
                    return this.ctx.logTreePortalTop;
                })(function() {
                    var ctx = this.ctx,
                    portals = this['log-tree-portals'],
                    portalId = ctx.logTreePortalTop,
                    portal = portals[portalId],
                    siblings = this.logTreeSiblings;

                    ctx.mix = [apply('logTreePortalTopMix')].concat(this.ctx.mix || []);

                    if (portal !== siblings) {
                        siblings.push.apply(siblings, portal);
                        portals[portalId] = siblings;
                    }

                    delete ctx.logTreePortalTop;

                    return applyCtx(ctx);
                }),

                match(function() {
                    return this.ctx.logTreePortalBottom;
                })(function() {
                    var ctx = this.ctx,
                    portals = this['log-tree-portals'],
                    portalId = ctx.logTreePortalBottom,
                    siblings = this.logTreeSiblings,
                    attrValue = apply('logTreePortalBottomAttrValue');

                    if (attrValue) {
                        (ctx.attrs || (ctx.attrs = {}))['data-log-tree-portal-bottom'] = attrValue;
                    }

                    this.logTreeSiblings = portals[portalId] || (portals[portalId] = []);

                    delete ctx.logTreePortalBottom;

                    var res = applyCtx(ctx);

                    this.logTreeSiblings = siblings;

                    return res;
                })
            )
        );
    });
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/log/blocks-common/i-log/i-log.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-flashcookie/i-flashcookie.bemhtml.js */
// autogenerated from ../../../../libs/islands-romochka/common.blocks/i-flashcookie/i-flashcookie.bemhtml
block('i-flashcookie')(
    tag()('noscript'),

    js()(true),
    js().match(function() { return this.ctx.mode; })(function() {
        return {
            mode: this.ctx.mode
        };
    }),

    content()(function() {
        return {
            tag: 'img',
            attrs: {
                src: '//kiks.yandex.' + this.ctx.domain + '/fu/',
                alt: ''
            }
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-flashcookie/i-flashcookie.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/paranja/paranja.bemhtml.js */
// autogenerated from ../../../../libs/islands-page/common.blocks/paranja/paranja.bemhtml
/* Дефолтные состояние и тема */
block('paranja').def()(function() {
    return applyNext({
        'ctx.mods': this.extend({
                state: 'close',
                theme: 'normal'
            },
            this.ctx.mods
        )
    });
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/paranja/paranja.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/paranja/paranja.bemhtml.js */
// autogenerated from paranja.bemhtml
block('paranja').match(function() {
    return this.ctx.counter;
}).attrs()(function() {
    return this.extend(applyNext(), {
        onmousedown: this.ctx.counter
    });
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/paranja/paranja.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/serp-header/serp-header.bemhtml.js */
// autogenerated from serp-header.bemhtml
block('serp-header')(
    mix()(function() {
        return [{
            block: 'z-index-group',
            mods: {
                level: 9
            }
        }].concat(applyNext());
    }),
    content()(function() {
        return {
            block: 'serp-header',
            elem: 'wrapper',
            content: this.ctx.content
        };
    }),
    attrs()({
        role: 'banner'
    }));

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/serp-header/serp-header.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-services/i-services.bemhtml.js */
oninit(function(exports) {
    var iServices = exports['i-services'] = exports.BEMContext.prototype['i-services'] = {},
        iGlobal = exports['i-global'];

    /**
     * @param {String} [id]
     * @returns {String}
     */
    iServices.serviceName = function(id) {
        return id || iGlobal.id;
    };

    /**
     * @param {String} [id]
     * @param {String} [region]
     * @returns {String}
     */
    iServices.serviceUrl = function(id, region) {
        var global = iGlobal;

        id || (id = global.id);
        region || (region = global['content-region']);

        return iServices._data[id](region);
    };
});

block('i-services').def()(
    elem('*')(''),

    elem('name')(function() {
        return applyCtx(this['i-services'].serviceName(this.ctx.id));
    }),

    elem('url')(function() {
        return applyCtx(this['i-services'].serviceUrl(this.ctx.id, this.ctx.region));
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-services/i-services.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-services/__uri/i-services__uri.bemhtml.js */
/* Это автоматически сгенеренный файл. Не редактируйте его самостоятельно. */
oninit(function(exports) {
    exports['i-services']._data = {
        'serp': function(reg) {
            if (reg === 'ru') return 'http://yandex.ru';
            if (reg === 'ua') return 'http://yandex.ua';
            if (reg === 'by') return 'http://yandex.by';
            if (reg === 'kz') return 'http://yandex.kz';
            if (reg === 'com') return 'http://www.yandex.com';
            if (reg === 'tr') return 'http://www.yandex.com.tr';
            return 'http://yandex.ru';
        },
        'mail': function(reg) {
            if (reg === 'ru') return 'https://mail.yandex.ru';
            if (reg === 'ua') return 'https://mail.yandex.ua';
            if (reg === 'by') return 'https://mail.yandex.by';
            if (reg === 'kz') return 'https://mail.yandex.kz';
            if (reg === 'com') return 'https://mail.yandex.com';
            if (reg === 'tr') return 'https://mail.yandex.com.tr';
            return 'https://mail.yandex.ru';
        },
        'pdd': function(reg) {
            if (reg === 'ru') return 'http://pdd.yandex.ru';
            return 'http://pdd.yandex.ru';
        },
        'zakladki': function(reg) {
            if (reg === 'ru') return 'http://zakladki.yandex.ru';
            return 'http://zakladki.yandex.ru';
        },
        'fotki': function(reg) {
            if (reg === 'ru') return 'http://fotki.yandex.ru';
            return 'http://fotki.yandex.ru';
        },
        'moikrug': function(reg) {
            if (reg === 'ru') return 'http://moikrug.ru';
            return 'http://moikrug.ru';
        },
        'direct': function(reg) {
            if (reg === 'ru') return 'http://direct.yandex.ru';
            if (reg === 'ua') return 'http://direct.yandex.ua';
            if (reg === 'by') return 'http://direct.yandex.by';
            if (reg === 'kz') return 'http://direct.yandex.kz';
            if (reg === 'com') return 'http://direct.yandex.com';
            return 'http://direct.yandex.ru';
        },
        'money': function(reg) {
            if (reg === 'ru') return 'https://money.yandex.ru';
            return 'https://money.yandex.ru';
        },
        'lenta': function(reg) {
            if (reg === 'ru') return 'http://lenta.yandex.ru';
            return 'http://lenta.yandex.ru';
        },
        'market': function(reg) {
            if (reg === 'ru') return '//market.yandex.ru';
            if (reg === 'ua') return '//market.yandex.ua';
            if (reg === 'by') return '//market.yandex.by';
            if (reg === 'kz') return '//market.yandex.kz';
            if (reg === 'tr') return '//market.yandex.com.tr';
            return '//market.yandex.ru';
        },
        'market.advertising': function(reg) {
            if (reg === 'ru') return 'http://welcome.advertising.yandex.ru/market/';
            return 'http://welcome.advertising.yandex.ru/market/';
        },
        'wow': function(reg) {
            if (reg === 'ru') return 'http://my.ya.ru';
            return 'http://my.ya.ru';
        },
        'tv': function(reg) {
            if (reg === 'ru') return 'http://tv.yandex.ru';
            if (reg === 'ua') return 'http://tv.yandex.ua';
            if (reg === 'by') return 'http://tv.yandex.by';
            if (reg === 'kz') return 'http://tv.yandex.kz';
            return 'http://tv.yandex.ru';
        },
        'afisha': function(reg) {
            if (reg === 'ru') return 'http://afisha.yandex.ru';
            if (reg === 'ua') return 'http://afisha.yandex.ua';
            if (reg === 'by') return 'http://afisha.yandex.by';
            if (reg === 'kz') return 'http://afisha.yandex.kz';
            if (reg === 'tr') return 'http://afis.yandex.com.tr';
            return 'http://afisha.yandex.ru';
        },
        'calendar': function(reg) {
            if (reg === 'ru') return 'http://calendar.yandex.ru';
            return 'http://calendar.yandex.ru';
        },
        'nahodki': function(reg) {
            if (reg === 'ru') return 'http://nahodki.yandex.ru';
            if (reg === 'ua') return 'http://nahodki.yandex.ua';
            if (reg === 'kz') return 'http://nahodki.yandex.kz';
            return 'http://nahodki.yandex.ru';
        },
        'weather': function(reg) {
            if (reg === 'ru') return 'http://pogoda.yandex.ru';
            if (reg === 'ua') return 'http://pogoda.yandex.ua';
            if (reg === 'by') return 'http://pogoda.yandex.by';
            if (reg === 'kz') return 'http://pogoda.yandex.kz';
            if (reg === 'tr') return 'http://hava.yandex.com.tr';
            return 'http://pogoda.yandex.ru';
        },
        'kuda': function(reg) {
            if (reg === 'ru') return 'http://kuda.yandex.ru';
            return 'http://kuda.yandex.ru';
        },
        'video': function(reg) {
            if (reg === 'ru') return 'http://www.yandex.ru/video/';
            if (reg === 'ua') return 'http://www.yandex.ua/video/';
            if (reg === 'by') return 'http://www.yandex.by/video/';
            if (reg === 'kz') return 'http://www.yandex.kz/video/';
            if (reg === 'com') return 'http://www.yandex.com/video/';
            if (reg === 'tr') return 'http://www.yandex.com.tr/video/';
            return 'http://yandex.ru/video/';
        },
        'video-com': function(reg) {
            if (reg === 'ru') return 'http://video.yandex.com';
            return 'http://video.yandex.com';
        },
        'music': function(reg) {
            if (reg === 'ru') return '//music.yandex.ru';
            if (reg === 'ua') return '//music.yandex.ua';
            if (reg === 'by') return '//music.yandex.by';
            if (reg === 'kz') return '//music.yandex.kz';
            return '//music.yandex.ru';
        },
        'music-partner': function(reg) {
            if (reg === 'ru') return 'http://music-partner.yandex.ru';
            return 'http://music-partner.yandex.ru';
        },
        'www': function(reg) {
            if (reg === 'ru') return 'http://www.yandex.ru';
            if (reg === 'ua') return 'http://www.yandex.ua';
            if (reg === 'com') return 'http://www.yandex.com';
            if (reg === 'by') return 'http://www.yandex.by';
            if (reg === 'kz') return 'http://www.yandex.kz';
            if (reg === 'tr') return 'http://www.yandex.com.tr';
            return 'http://www.yandex.ru';
        },
        'search': function(reg) {
            if (reg === 'ru') return 'http://yandex.ru';
            if (reg === 'ua') return 'http://yandex.ua';
            if (reg === 'com') return 'http://yandex.com';
            if (reg === 'by') return 'http://yandex.by';
            if (reg === 'kz') return 'http://yandex.kz';
            if (reg === 'tr') return 'http://yandex.com.tr';
            return 'http://yandex.ru';
        },
        'review': function(reg) {
            if (reg === 'ru') return 'http://yandex.ru';
            if (reg === 'ua') return 'http://yandex.ua';
            if (reg === 'by') return 'http://yandex.by';
            if (reg === 'kz') return 'http://yandex.kz';
            if (reg === 'com') return 'http://www.yandex.com';
            if (reg === 'tr') return 'http://www.yandex.com.tr';
            return 'http://yandex.ru';
        },
        'fresh': function(reg) {
            if (reg === 'ru') return 'http://yandex.ru';
            if (reg === 'ua') return 'http://yandex.ua';
            if (reg === 'by') return 'http://yandex.by';
            if (reg === 'kz') return 'http://yandex.kz';
            if (reg === 'com') return 'http://www.yandex.com';
            if (reg === 'tr') return 'http://www.yandex.com.tr';
            return 'http://yandex.ru';
        },
        'news': function(reg) {
            if (reg === 'ru') return 'http://news.yandex.ru';
            if (reg === 'ua') return 'http://news.yandex.ua';
            if (reg === 'by') return 'http://news.yandex.by';
            if (reg === 'kz') return 'http://news.yandex.kz';
            if (reg === 'tr') return 'http://haber.yandex.com.tr';
            return 'http://news.yandex.ru';
        },
        'news-com': function(reg) {
            if (reg === 'ru') return 'http://news.yandex.com';
            return 'http://news.yandex.com';
        },
        'maps': function(reg) {
            if (reg === 'ru') return '//maps.yandex.ru';
            if (reg === 'ua') return '//maps.yandex.ua';
            if (reg === 'tr') return '//harita.yandex.com.tr';
            return '//maps.yandex.ru';
        },
        'maps-com': function(reg) {
            if (reg === 'ru') return 'http://maps.yandex.com';
            return 'http://maps.yandex.com';
        },
        'probki': function(reg) {
            if (reg === 'ru') return 'http://probki.yandex.ru';
            if (reg === 'ua') return 'http://probki.yandex.ua';
            return 'http://probki.yandex.ru';
        },
        'slovari': function(reg) {
            if (reg === 'ru') return '//slovari.yandex.ru';
            if (reg === 'ua') return '//slovari.yandex.ua';
            if (reg === 'by') return '//slovari.yandex.by';
            if (reg === 'kz') return '//slovari.yandex.kz';
            return '//slovari.yandex.ru';
        },
        'images': function(reg) {
            if (reg === 'ru') return 'http://www.yandex.ru/images/';
            if (reg === 'ua') return 'http://www.yandex.ua/images/';
            if (reg === 'by') return 'http://www.yandex.by/images/';
            if (reg === 'kz') return 'http://www.yandex.kz/images/';
            if (reg === 'com') return 'http://www.yandex.com/images/';
            if (reg === 'tr') return 'http://www.yandex.com.tr/gorsel/';
            return 'http://yandex.ru/images/';
        },
        'images-com': function() {
            return 'http://www.yandex.com/images/';
        },
        'blogs': function(reg) {
            if (reg === 'ru') return 'http://blogs.yandex.ru';
            if (reg === 'ua') return 'http://blogs.yandex.ua';
            if (reg === 'by') return 'http://blogs.yandex.by';
            if (reg === 'kz') return 'http://blogs.yandex.kz';
            return 'http://blogs.yandex.ru';
        },
        'auto': function(reg) {
            if (reg === 'ru') return 'http://auto.yandex.ru';
            if (reg === 'ua') return 'http://auto.yandex.ua';
            return 'http://auto.yandex.ru';
        },
        'adresa': function(reg) {
            if (reg === 'ru') return 'http://adresa.yandex.ru';
            return 'http://adresa.yandex.ru';
        },
        'games': function(reg) {
            if (reg === 'ru') return 'http://games.yandex.ru';
            return 'http://games.yandex.ru';
        },
        'yaca': function(reg) {
            if (reg === 'ru') return 'http://yaca.yandex.ru';
            if (reg === 'ua') return 'http://yaca.yandex.ua';
            if (reg === 'by') return 'http://yaca.yandex.by';
            return 'http://yaca.yandex.ru';
        },
        'rasp': function(reg) {
            if (reg === 'ru') return 'http://rasp.yandex.ru';
            if (reg === 'ua') return 'http://rasp.yandex.ua';
            if (reg === 'by') return 'http://rasp.yandex.by';
            if (reg === 'kz') return 'http://rasp.yandex.kz';
            if (reg === 'tr') return 'http://seferler.yandex.com.tr';
            return 'http://rasp.yandex.ru';
        },
        'avia': function(reg) {
            if (reg === 'ru') return 'https://avia.yandex.ru';
            if (reg === 'ua') return 'https://avia.yandex.ua';
            return 'https://avia.yandex.ru';
        },
        'ticket': function(reg) {
            return 'http://ticket.yandex.ru';
        },
        'pvo': function(reg) {
            if (reg === 'ru') return 'http://ask.yandex.ru';
            return 'http://ask.yandex.ru';
        },
        'online': function(reg) {
            if (reg === 'ru') return 'http://online.yandex.ru';
            return 'http://online.yandex.ru';
        },
        'books': function(reg) {
            if (reg === 'ru') return 'http://books.yandex.ru';
            return 'http://books.yandex.ru';
        },
        'site': function(reg) {
            if (reg === 'ru') return 'http://site.yandex.ru';
            if (reg === 'ua') return 'http://site.yandex.ua';
            if (reg === 'tr') return 'http://ozel.yandex.com.tr';
            return 'http://site.yandex.ru';
        },
        'bar': function(reg) {
            if (reg === 'ru') return 'http://bar.yandex.ru';
            if (reg === 'ua') return 'http://bar.yandex.ua';
            if (reg === 'by') return 'http://bar.yandex.by';
            if (reg === 'kz') return 'http://bar.yandex.kz';
            if (reg === 'tr') return 'http://bar.yandex.com.tr';
            return 'http://bar.yandex.ru';
        },
        'widgets': function(reg) {
            if (reg === 'ru') return 'http://widgets.yandex.ru';
            if (reg === 'ua') return 'http://widgets.yandex.ua';
            if (reg === 'by') return 'http://widgets.yandex.by';
            if (reg === 'kz') return 'http://widgets.yandex.kz';
            if (reg === 'tr') return 'http://widgets.yandex.com.tr';
            return 'http://widgets.yandex.ru';
        },
        'wdgt': function(reg) {
            if (reg === 'ru') return 'http://wdgt.yandex.ru';
            if (reg === 'ua') return 'http://wdgt.yandex.ua';
            if (reg === 'by') return 'http://wdgt.yandex.by';
            if (reg === 'kz') return 'http://wdgt.yandex.kz';
            if (reg === 'tr') return 'http://wdgt.yandex.com.tr';
            return 'http://wdgt.yandex.ru';
        },
        'interests': function(reg) {
            if (reg === 'ru') return 'http://interests.yandex.ru';
            return 'http://interests.yandex.ru';
        },
        'kraski': function(reg) {
            if (reg === 'ru') return 'http://kraski.yandex.ru';
            return 'http://kraski.yandex.ru';
        },
        'local': function(reg) {
            if (reg === 'ru') return 'http://local.yandex.ru';
            return 'http://local.yandex.ru';
        },
        'museums': function(reg) {
            if (reg === 'ru') return 'http://18.yandex.ru';
            return 'http://18.yandex.ru';
        },
        'collection': function(reg) {
            if (reg === 'ru') return 'http://collection.yandex.ru';
            return 'http://collection.yandex.ru';
        },
        'company': function(reg) {
            if (reg === 'ru') return 'http://company.yandex.ru';
            if (reg === 'com') return 'http://company.yandex.com';
            if (reg === 'tr') return 'http://company.yandex.com.tr';
            return 'http://company.yandex.ru';
        },
        'tests': function(reg) {
            if (reg === 'ru') return 'http://tests.yandex.ru';
            return 'http://tests.yandex.ru';
        },
        'referats': function(reg) {
            if (reg === 'ru') return 'http://referats.yandex.ru';
            return 'http://referats.yandex.ru';
        },
        'terms': function(reg) {
            if (reg === 'ru') return 'http://terms.yandex.ru';
            return 'http://terms.yandex.ru';
        },
        'tune': function(reg) {
            if (reg === 'ru') return 'http://tune.yandex.ru';
            if (reg === 'ua') return 'http://tune.yandex.ua';
            if (reg === 'com') return 'http://tune.yandex.com';
            if (reg === 'by') return 'http://tune.yandex.by';
            if (reg === 'kz') return 'http://tune.yandex.kz';
            if (reg === 'tr') return 'http://tune.yandex.com.tr';
            return 'http://tune.yandex.ru';
        },
        'api': function(reg) {
            if (reg === 'ru') return 'http://api.yandex.ru';
            if (reg === 'com') return 'http://api.yandex.com';
            return 'http://api.yandex.ru';
        },
        'punto': function(reg) {
            if (reg === 'ru') return 'http://punto.yandex.ru';
            return 'http://punto.yandex.ru';
        },
        'opinion': function(reg) {
            if (reg === 'ru') return 'http://opinion.yandex.ru';
            return 'http://opinion.yandex.ru';
        },
        'perevod': function(reg) {
            if (reg === 'ru') return 'http://perevod.yandex.ru';
            return 'http://perevod.yandex.ru';
        },
        'rabota': function(reg) {
            if (reg === 'ru') return 'http://rabota.yandex.ru';
            if (reg === 'ua') return 'http://rabota.yandex.ua';
            if (reg === 'by') return 'http://rabota.yandex.by';
            if (reg === 'kz') return 'http://rabota.yandex.kz';
            return 'http://rabota.yandex.ru';
        },
        'sprav': function(reg) {
            if (reg === 'ru') return 'http://sprav.yandex.ru';
            if (reg === 'ua') return 'http://sprav.yandex.ua';
            if (reg === 'by') return 'http://sprav.yandex.by';
            if (reg === 'kz') return 'http://sprav.yandex.kz';
            if (reg === 'tr') return 'http://rehber.yandex.com.tr';
            return 'http://sprav.yandex.ru';
        },
        'realty': function(reg) {
            if (reg === 'ru') return 'http://realty.yandex.ru';
            if (reg === 'ua') return 'http://realty.yandex.ua';
            if (reg === 'by') return 'http://realty.yandex.by';
            if (reg === 'kz') return 'http://realty.yandex.kz';
            return 'http://realty.yandex.ru';
        },
        'advertising': function(reg) {
            if (reg === 'ru') return 'http://advertising.yandex.ru';
            if (reg === 'ua') return 'http://advertising.yandex.ua';
            if (reg === 'com') return 'http://advertising.yandex.com';
            if (reg === 'by') return 'http://advertising.yandex.by';
            if (reg === 'kz') return 'http://advertising.yandex.kz';
            return 'http://advertising.yandex.ru';
        },
        'expert': function(reg) {
            if (reg === 'ru') return 'http://expert.yandex.ru';
            return 'http://expert.yandex.ru';
        },
        'direct.market': function(reg) {
            if (reg === 'ru') return 'http://partner.market.yandex.ru/yandex.market/';
            return 'http://partner.market.yandex.ru/yandex.market/';
        },
        'ba': function(reg) {
            if (reg === 'ru') return 'http://ba.yandex.ru';
            if (reg === 'ua') return 'http://ba.yandex.ua';
            if (reg === 'com') return 'http://ba.yandex.com';
            if (reg === 'by') return 'http://ba.yandex.by';
            if (reg === 'kz') return 'http://ba.yandex.kz';
            return 'http://ba.yandex.ru';
        },
        'bayan': function(reg) {
            if (reg === 'ru') return 'http://bayan.yandex.ru';
            return 'http://bayan.yandex.ru';
        },
        'partners': function(reg) {
            if (reg === 'ru') return 'http://partner.yandex.ru';
            if (reg === 'ua') return 'http://partner.yandex.ua';
            if (reg === 'com') return 'http://partner.yandex.com';
            if (reg === 'by') return 'http://partner.yandex.by';
            if (reg === 'kz') return 'http://partner.yandex.kz';
            return 'http://partner.yandex.ru';
        },
        'metrika': function(reg) {
            if (reg === 'ru') return 'https://metrika.yandex.ru';
            if (reg === 'ua') return 'https://metrika.yandex.ua';
            if (reg === 'com') return 'https://metrica.yandex.com';
            if (reg === 'by') return 'https://metrika.yandex.by';
            if (reg === 'kz') return 'https://metrika.yandex.kz';
            if (reg === 'tr') return 'https://metrica.yandex.com.tr';
            return 'https://metrika.yandex.ru';
        },
        'balance': function(reg) {
            if (reg === 'ru') return 'http://balance.yandex.ru';
            return 'http://balance.yandex.ru';
        },
        'wordstat': function(reg) {
            if (reg === 'ru') return 'http://wordstat.yandex.ru';
            return 'http://wordstat.yandex.ru';
        },
        'webmaster': function(reg) {
            if (reg === 'ru') return 'http://webmaster.yandex.ru';
            if (reg === 'ua') return 'http://webmaster.yandex.ua';
            if (reg === 'com') return 'http://webmaster.yandex.com';
            if (reg === 'tr') return 'http://webmaster.yandex.com.tr';
            return 'http://webmaster.yandex.ru';
        },
        'server': function(reg) {
            if (reg === 'ru') return 'http://company.yandex.ru/technology/server/';
            return 'http://company.yandex.ru/technology/server/';
        },
        'stat': function(reg) {
            if (reg === 'ru') return 'http://stat.yandex.ru';
            if (reg === 'ua') return 'http://stat.yandex.ua';
            if (reg === 'by') return 'http://stat.yandex.by';
            return 'http://stat.yandex.ru';
        },
        'mobile': function(reg) {
            if (reg === 'ru') return 'http://mobile.yandex.ru';
            if (reg === 'ua') return 'http://mobile.yandex.ua';
            if (reg === 'tr') return 'http://mobil.yandex.com.tr';
            return 'http://mobile.yandex.ru';
        },
        'help': function(reg) {
            if (reg === 'ru') return 'http://help.yandex.ru';
            if (reg === 'ua') return 'http://help.yandex.ua';
            if (reg === 'com') return 'http://help.yandex.com';
            if (reg === 'tr') return 'http://yardim.yandex.com.tr';
            return 'http://help.yandex.ru';
        },
        'feedback': function(reg) {
            if (reg === 'ru') return 'http://feedback.yandex.ru';
            if (reg === 'ua') return 'http://feedback.yandex.ua';
            if (reg === 'com') return 'http://feedback.yandex.com';
            if (reg === 'by') return 'http://feedback.yandex.by';
            if (reg === 'kz') return 'http://feedback.yandex.kz';
            if (reg === 'tr') return 'http://contact.yandex.com.tr';
            return 'http://feedback.yandex.ru';
        },
        'feedback2': function(reg) {
            if (reg === 'ru') return 'http://feedback2.yandex.ru';
            if (reg === 'ua') return 'http://feedback2.yandex.ua';
            if (reg === 'com') return 'http://feedback2.yandex.com';
            if (reg === 'by') return 'http://feedback2.yandex.by';
            if (reg === 'kz') return 'http://feedback2.yandex.kz';
            if (reg === 'tr') return 'http://contact2.yandex.com.tr';
            return 'http://feedback2.yandex.ru';
        },
        'start': function(reg) {
            if (reg === 'ru') return 'http://help.yandex.ru/start/';
            if (reg === 'ua') return 'http://help.yandex.ua/start/';
            if (reg === 'com') return 'http://help.yandex.com/start/';
            if (reg === 'tr') return 'http://yardim.yandex.com.tr/start';
            return 'http://help.yandex.ru/start/';
        },
        'cityday': function(reg) {
            if (reg === 'ru') return 'http://cityday.yandex.ru';
            return 'http://cityday.yandex.ru';
        },
        'openid': function(reg) {
            if (reg === 'ru') return 'http://openid.yandex.ru';
            return 'http://openid.yandex.ru';
        },
        'oauth': function(reg) {
            if (reg === 'ru') return 'https://oauth.yandex.ru';
            if (reg === 'com') return 'https://oauth.yandex.com';
            return 'https://oauth.yandex.ru';
        },
        'nano': function(reg) {
            if (reg === 'ru') return 'http://nano.yandex.ru';
            return 'http://nano.yandex.ru';
        },
        'partnersearch': function(reg) {
            if (reg === 'ru') return 'http://yandex.ru';
            return 'http://yandex.ru';
        },
        'city': function(reg) {
            if (reg === 'ru') return 'https://gorod.yandex.ru';
            if (reg === 'ua') return 'https://gorod.yandex.ua';
            if (reg === 'com') return 'https://city.yandex.com';
            if (reg === 'by') return 'https://gorod.yandex.by';
            if (reg === 'kz') return 'https://gorod.yandex.kz';
            if (reg === 'tr') return 'https://city.yandex.com.tr';
            return 'https://gorod.yandex.ru';
        },
        'goroda': function(reg) {
            if (reg === 'ru') return 'http://goroda.yandex.ru';
            return 'http://goroda.yandex.ru';
        },
        'toster': function(reg) {
            if (reg === 'ru') return 'http://toster.yandex.ru';
            return 'http://toster.yandex.ru';
        },
        'love': function(reg) {
            if (reg === 'ru') return 'http://love.yandex.ru';
            return 'http://love.yandex.ru';
        },
        'rk': function(reg) {
            if (reg === 'ru') return 'http://rk.yandex.ru';
            return 'http://rk.yandex.ru';
        },
        'lost': function(reg) {
            if (reg === 'ru') return 'http://lost.yandex.ru';
            return 'http://lost.yandex.ru';
        },
        'soft': function(reg) {
            if (reg === 'ru') return 'http://soft.yandex.ru';
            if (reg === 'ua') return 'http://soft.yandex.ua';
            if (reg === 'tr') return 'http://soft.yandex.com.tr';
            return 'http://soft.yandex.ru';
        },
        'passport': function(reg) {
            if (reg === 'ru') return 'https://passport.yandex.ru';
            if (reg === 'com') return 'https://passport.yandex.com';
            if (reg === 'tr') return 'https://passport.yandex.com.tr';
            return 'https://passport.yandex.ru';
        },
        'maps-wiki': function(reg) {
            if (reg === 'ru') return 'http://nk.yandex.ru';
            return 'http://nk.yandex.ru';
        },
        '404': function(reg) {
            if (reg === 'ru') return 'http://404.yandex.ru';
            if (reg === 'ua') return 'http://404.yandex.ua';
            if (reg === 'com') return 'http://404.yandex.com';
            if (reg === 'by') return 'http://404.yandex.by';
            if (reg === 'kz') return 'http://404.yandex.kz';
            if (reg === 'tr') return 'http://404.yandex.com.tr';
            return 'http://404.yandex.ru';
        },
        'i': function(reg) {
            if (reg === 'ru') return 'http://i.yandex.ru';
            return 'http://i.yandex.ru';
        },
        'desktop': function(reg) {
            if (reg === 'ru') return 'http://desktop.yandex.ru';
            return 'http://desktop.yandex.ru';
        },
        'ff': function(reg) {
            if (reg === 'ru') return 'http://ff.yandex.ru';
            return 'http://ff.yandex.ru';
        },
        'fx': function(reg) {
            if (reg === 'ru') return 'http://fx.yandex.ru';
            if (reg === 'ua') return 'http://fx.yandex.ua';
            if (reg === 'tr') return 'http://fx.yandex.com.tr';
            return 'http://fx.yandex.ru';
        },
        'ie': function(reg) {
            if (reg === 'ru') return 'http://ie.yandex.ru';
            if (reg === 'ua') return 'http://ie.yandex.ua';
            if (reg === 'tr') return 'http://ie.yandex.com.tr';
            return 'http://ie.yandex.ru';
        },
        'bar-ie': function(reg) {
            if (reg === 'ru') return 'http://bar.yandex.ru/ie';
            if (reg === 'ua') return 'http://bar.yandex.ua/ie';
            if (reg === 'com') return 'http://bar.yandex.com/ie';
            if (reg === 'by') return 'http://bar.yandex.by/ie';
            if (reg === 'kz') return 'http://bar.yandex.kz/ie';
            if (reg === 'tr') return 'http://bar.yandex.com.tr/ie';
            return 'http://bar.yandex.ru/ie';
        },
        'bar-ie9': function(reg) {
            if (reg === 'ru') return 'http://bar.yandex.ru/ie';
            if (reg === 'ua') return 'http://bar.yandex.ua/ie';
            if (reg === 'com') return 'http://bar.yandex.com/ie';
            if (reg === 'by') return 'http://bar.yandex.by/ie';
            if (reg === 'kz') return 'http://bar.yandex.kz/ie';
            if (reg === 'tr') return 'http://bar.yandex.com.tr/ie';
            return 'http://bar.yandex.ru/ie';
        },
        'internet': function(reg) {
            if (reg === 'ru') return 'http://internet.yandex.ru';
            if (reg === 'com') return 'http://internet.yandex.com';
            if (reg === 'tr') return 'http://internet.yandex.com.tr';
            return 'http://internet.yandex.ru';
        },
        'keyboard': function(reg) {
            if (reg === 'ru') return 'http://www.yandex.ru/index_engl_qwerty.html';
            return 'http://www.yandex.ru/index_engl_qwerty.html';
        },
        'metro': function(reg) {
            if (reg === 'ru') return 'http://metro.yandex.ru';
            return 'http://metro.yandex.ru';
        },
        'pulse': function(reg) {
            if (reg === 'ru') return 'http://blogs.yandex.ru/pulse';
            if (reg === 'ua') return 'http://blogs.yandex.ua/pulse';
            if (reg === 'by') return 'http://blogs.yandex.by/pulse';
            if (reg === 'kz') return 'http://blogs.yandex.kz/pulse';
            return 'http://blogs.yandex.ru/pulse';
        },
        'school': function(reg) {
            if (reg === 'ru') return 'http://school.yandex.ru';
            return 'http://school.yandex.ru';
        },
        'so': function(reg) {
            if (reg === 'ru') return 'http://so.yandex.ru';
            return 'http://so.yandex.ru';
        },
        'time': function(reg) {
            if (reg === 'ru') return 'http://time.yandex.ru';
            if (reg === 'ua') return 'http://time.yandex.ua';
            if (reg === 'com') return 'http://time.yandex.com';
            if (reg === 'by') return 'http://time.yandex.by';
            if (reg === 'kz') return 'http://time.yandex.kz';
            if (reg === 'tr') return 'http://saat.yandex.com.tr';
            return 'http://time.yandex.ru';
        },
        'xmlsearch': function(reg) {
            if (reg === 'ru') return 'http://xml.yandex.ru';
            if (reg === 'ua') return 'http://xml.yandex.ua';
            if (reg === 'com') return 'http://xml.yandex.com';
            if (reg === 'by') return 'http://xml.yandex.by';
            if (reg === 'kz') return 'http://xml.yandex.kz';
            if (reg === 'tr') return 'http://xml.yandex.com.tr';
            return 'http://xml.yandex.ru';
        },
        'catalogwdgt': function(reg) {
            if (reg === 'ru') return 'http://www.yandex.ru/catalog';
            return 'http://www.yandex.ru/catalog';
        },
        'opera': function(reg) {
            if (reg === 'ru') return 'http://opera.yandex.ru';
            if (reg === 'tr') return 'http://opera.yandex.com.tr';
            return 'http://opera.yandex.ru';
        },
        'uslugi': function(reg) {
            if (reg === 'ru') return 'http://uslugi.yandex.ru';
            return 'http://uslugi.yandex.ru';
        },
        'backapv': function(reg) {
            if (reg === 'ru') return 'http://backapv.yandex.ru';
            return 'http://backapv.yandex.ru';
        },
        'chrome': function(reg) {
            if (reg === 'ru') return 'http://chrome.yandex.ru';
            return 'http://chrome.yandex.ru';
        },
        'browser': function(reg) {
            if (reg === 'ru') return '//browser.yandex.ru';
            if (reg === 'ua') return '//browser.yandex.ua';
            if (reg === 'com') return '//browser.yandex.com';
            if (reg === 'by') return '//browser.yandex.by';
            if (reg === 'kz') return '//browser.yandex.kz';
            if (reg === 'tr') return '//browser.yandex.com.tr';
            return '//browser.yandex.ru';
        },
        'aziada': function(reg) {
            if (reg === 'ru') return 'http://aziada2011.yandex.kz';
            return 'http://aziada2011.yandex.kz';
        },
        'translate': function(reg) {
            if (reg === 'ru') return '//translate.yandex.ru';
            if (reg === 'ua') return '//translate.yandex.ua';
            if (reg === 'com') return '//translate.yandex.com';
            if (reg === 'by') return '//translate.yandex.by';
            if (reg === 'kz') return '//translate.yandex.kz';
            if (reg === 'tr') return '//ceviri.yandex.com.tr';
            return '//translate.yandex.ru';
        },
        'subs': function(reg) {
            if (reg === 'ru') return 'http://subs.yandex.ru';
            return 'http://subs.yandex.ru';
        },
        'all': function(reg) {
            if (reg === 'ru') return 'http://www.yandex.ru/all';
            if (reg === 'ua') return 'http://www.yandex.ua/all';
            if (reg === 'com') return 'http://www.yandex.com/all';
            if (reg === 'by') return 'http://www.yandex.by/all';
            if (reg === 'kz') return 'http://www.yandex.kz/all';
            if (reg === 'tr') return 'http://www.yandex.com.tr/all';
            return 'http://www.yandex.ru/all';
        },
        'large': function(reg) {
            if (reg === 'ru') return 'http://large.yandex.ru';
            return 'http://large.yandex.ru';
        },
        'geocontext': function(reg) {
            if (reg === 'ru') return 'http://geocontext.yandex.ru';
            return 'http://geocontext.yandex.ru';
        },
        'root': function(reg) {
            if (reg === 'ru') return 'http://root.yandex.ru';
            return 'http://root.yandex.ru';
        },
        'yamb': function(reg) {
            if (reg === 'ru') return 'https://yamb.yandex.ru';
            return 'https://yamb.yandex.ru';
        },
        'legal': function(reg) {
            if (reg === 'ru') return 'http://legal.yandex.ru';
            if (reg === 'ua') return 'http://legal.yandex.ua';
            if (reg === 'com') return 'http://legal.yandex.com';
            if (reg === 'tr') return 'http://legal.yandex.com.tr';
            return 'http://legal.yandex.ru';
        },
        'taxi': function(reg) {
            if (reg === 'ru') return 'https://taxi.yandex.ru';
            return 'https://taxi.yandex.ru';
        },
        'social': function(reg) {
            if (reg === 'ru') return 'https://social.yandex.ru';
            if (reg === 'ua') return 'https://social.yandex.ua';
            if (reg === 'com') return 'https://social.yandex.ru';
            if (reg === 'by') return 'https://social.yandex.by';
            if (reg === 'kz') return 'https://social.yandex.kz';
            if (reg === 'tr') return 'https://social.yandex.com.tr';
            return 'https://social.yandex.ru';
        },
        'contest': function(reg) {
            if (reg === 'ru') return 'http://contest.yandex.ru';
            if (reg === 'com') return 'http://contest.yandex.com';
            return 'http://contest.yandex.ru';
        },
        'peoplesearch': function(reg) {
            if (reg === 'ru') return 'http://people.yandex.ru';
            if (reg === 'ua') return 'http://people.yandex.ua';
            return 'http://people.yandex.ru';
        },
        'disk': function(reg) {
            if (reg === 'ru') return 'https://disk.yandex.ru';
            if (reg === 'com') return 'https://disk.yandex.com';
            if (reg === 'ua') return 'https://disk.yandex.ua';
            if (reg === 'kz') return 'https://disk.yandex.kz';
            if (reg === 'by') return 'https://disk.yandex.by';
            if (reg === 'tr') return 'https://disk.yandex.com.tr';
            return 'https://disk.yandex.ru';
        },
        'sport': function(reg) {
            if (reg === 'ru') return 'http://sport.yandex.ru';
            if (reg === 'by') return 'http://sport.yandex.by';
            if (reg === 'ua') return 'http://sport.yandex.ua';
            if (reg === 'kz') return 'http://sport.yandex.kz';
            if (reg === 'tr') return 'http://spor.yandex.com.tr';
            return 'http://sport.yandex.ru';
        },
        'literacy': function(reg) {
            if (reg === 'ru') return 'http://literacy.yandex.ru';
            return 'http://literacy.yandex.ru';
        },
        'appsearch': function(reg) {
            if (reg === 'ru') return '//appsearch.yandex.ru';
            return '//appsearch.yandex.ru';
        },
        'ege': function(reg) {
            if (reg === 'ru') return '//ege.yandex.ru';
            return '//ege.yandex.ru';
        },
        'vno': function(reg) {
            if (reg === 'ru') return '//zno.yandex.ua';
            return '//zno.yandex.ua';
        },
        'notifications': function(reg) {
            if (reg === 'ru') return 'https://notifications.yandex.ru';
            if (reg === 'ua') return 'https://notifications.yandex.ua';
            if (reg === 'by') return 'https://notifications.yandex.by';
            if (reg === 'kz') return 'https://notifications.yandex.kz';
            if (reg === 'com') return 'https://notifications.yandex.com';
            if (reg === 'tr') return 'https://notifications.yandex.com.tr';
            return 'https://notifications.yandex.ru';
        },
        'kassa': function(reg) {
            if (reg === 'ru') return 'https://money.yandex.ru/start';
            return 'https://money.yandex.ru/start/';
        },
        'shtrafi': function(reg) {
            if (reg === 'ru') return 'https://money.yandex.net/debts';
            return 'http://money.yandex.net/debts';
        },
        'master': function(reg) {
            if (reg === 'ru') return 'https://master.yandex.ru';
            return 'https://master.yandex.ru';
        }

    };
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-services/__uri/i-services__uri.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/logo/logo.bemhtml.js */
// autogenerated from ../../../../libs/islands-page/common.blocks/logo/logo.bemhtml
block('logo')(
    match(function() { return !this.mods.lang; }).mix()(function() {
        return [{
            mods: {
                lang: ~['en', 'tr'].indexOf(this['i-global'].lang) ? 'en' : 'ru'
            }
        }];
    }),

    content()(function() {
        return [
            {
                elem: 'link',
                url: this.ctx.url,
                alt: this.ctx.alt // Поле называется alt по историческим причинам.
            },
            this.ctx.content
        ];
    }),

    elem('link')(
        tag()('a'),
        attrs()(function() {
            return {
                href: this.ctx.url || this['i-services'].serviceUrl('www')
            };
        }),
        content()(function() {
            return this.ctx.alt || 'yandex';
        })
    )
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/logo/logo.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/logo/logo.bemhtml.js */
block('logo')(
    def()(function() {
        return applyNext({
            _counter: this.ctx.counter,
            _logoUrl: this.ctx.logoUrl,
            _title: this.ctx.title
        });
    }),
    elem('link')(
        def()(function() {
            var style = [];

            if (this._logoUrl) {
                style.push('background-image:url("' + this._logoUrl + '")');
            }

            style = style.join(';');

            if (style) {
                return applyNext({ _style: style });
            } else {
                return applyNext();
            }
        }),

        attrs()(function() {
            return this.extend(applyNext(), {
                onmousedown: this._counter,
                title: this._title,
                style: this._style
            });
        })
    )
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/logo/logo.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-desktop/logo/logo.bemhtml.js */
// autogenerated from logo.bemhtml
block('logo').elem('link').attrs()(function() {
    return this.extend(applyNext(), {
        tabindex: -1
    });
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-desktop/logo/logo.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-ua/__retina/i-ua__retina.bemhtml.js */
// autogenerated from ../../../../../libs/islands-romochka/common.blocks/i-ua/__retina/i-ua__retina.bemhtml
block('i-ua').content()(function() {
    var c = applyNext();

    c += [
        ';(function(w,e,s,c,x,l,p,d){',
        'c="className";',
        'x="deviceXDPI";',
        'l="logicalXDPI";',
        'p="devicePixelRatio";',
        'd=x in s&&l in s&&s[x]/s[l]||p in w&&w[p];',
        'd>1&&(e[c]+=" i-ua_retina_yes")',
        '})(window,document.documentElement,screen);'
    ].join('');

    return c;
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-ua/__retina/i-ua__retina.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/search2/search2.bemhtml.js */
// TODO: оторвать после перехода на islands@v4 - SERP-36973
block('search2')(
    tag()('form'),
    attrs()(function() {
        return {
            role: 'search',
            action: this.ctx.url,
            'aria-label': this.ctx.label
        };
    }),
    content()(function() {
        return [
            { elem: 'input', content: this.ctx.input },
            { elem: 'button', content: this.ctx.button },

            // В поле hidden передается словарь name/value, который преобразуется
            // в массив элементов hidden с соответствующими атрибутами name/value.
            this.ctx.hidden && Object.keys(this.ctx.hidden).map(function(key) {
                return {
                    elem: 'hidden',
                    attrs: {
                        name: key,
                        value: this.ctx.hidden[key]
                    }
                };
            }, this)
        ].filter(Boolean);
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/search2/search2.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-ua/__input/i-ua__input.bemhtml.js */
// autogenerated from ../../../../../libs/islands-romochka/common.blocks/i-ua/__input/i-ua__input.bemhtml
block('i-ua').content()(function() {
    var c = applyNext();

    c += [
        ';(function(d,e,p){',
        'e=d.documentElement;',
        'p="placeholder";',
        'e.className+=" i-ua_"+p+(p in d.createElement("input")?"_yes":"_no")',
        '})(document);'
    ].join('');

    return c;
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-ua/__input/i-ua__input.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/input/input.bemhtml.js */
// autogenerated from ../../../../libs/islands-components/common.blocks/input/input.bemhtml
block('input')(
    tag()('span'),

    mode('live')(false),

    mode('getLive')(function() {
        var live = apply('live'),
            js = this.ctx.js,
            mods = this.ctx.mods,
            noLive = {
                autofocus: 'yes',
                width: 'content',
                'tap-ahead': 'yes'
            };

        if (js) {
            if (js.autoFocus && js.live) {
                // ошибка появляется только если оба live и autofocus явно выставлены в
                // bemjson
                throw new Error('input block can\'t have both "live" and "autoFocus" enabled');
            }

            if (js.hasOwnProperty('live')) {
                live = js.live;
            }

            var noLiveMods = Object.keys(noLive).some(function(key) {
                return mods[key] === noLive[key]
            });

            if (noLiveMods || js.autoFocus) {
                // В случае, когда шаблон доопределен таким образом, чтобы все поля ввода
                // по умолчанию инициализировались лениво иногда надо отключать ленивую
                // live-инициализацию (для совместимости с прошлыми версиями)
                live = false;
            }
        }
        return live;
    }),
    js()(function() {
        return {
            live: this._live
        };
    }),

    def()(function() {
        var value = apply('value', {
                ctx: this.ctx.value
            }),
            id = this.ctx.id || this.generateId(),
            mods = this.ctx.mods || {},
            placeholder,
            live = apply('getLive');
        mods.theme = mods.theme || 'normal';

        if (this.ctx.hasOwnProperty('placeholder')) {
            placeholder = apply('value', {
                ctx: this.ctx.placeholder
            });
        }

        return applyNext({
            _inputId: id,
            _labelId: 'label' + id,
            _hintId: 'hint' + id,
            _name: this.ctx.name || '',
            _value: value,
            _inputLink: true,
            _disabled: this.mods.disabled,
            _live: live,
            _placeholder: placeholder,
            'ctx.mods': mods
        });

    }),

    mode('value')(
        match(function() {
            return true;
        })(''),

        match(function() {
            return this.ctx;
        })(function() {
            var value = [];
            apply({
                _buf: value,
                _mode: ''
            });
            return value.join('');
        }),

        match(function() {
            return this.isSimple(this.ctx);
        })(function() {
            return this.ctx;
        })),

    elem('ahead')(
        mix()([{
            block: 'input',
            elem: 'input'
        }]),
        content()([
            { elem: 'ahead-filler' },
            { elem: 'ahead-hint' }
        ])
    ),

    elem('ahead-filler').tag()('span'),

    elem('ahead-hint').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/input/input.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/input/__box/input__box.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/input/__box/input__box.bemhtml
block('input').elem('box')(
    tag()('span'),
    match(function() { return !this.mods.clear; }).content()(function() {
        return [
            applyNext(), {
                elem: 'clear',
                elemMods: this._value || this._value === 0 ? {
                    visibility: 'visible'
                } : undefined
            }
        ];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/input/__box/input__box.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/input/__control/input__control.bemhtml.js */
block('input').elem('control')(
    tag()('input'),

    attrs()(function() {
        var a = this.extend({
            id: this._inputId,
            name: this._name,
            placeholder: this._placeholder
        }, this.ctx.controlAttrs);

        (this._value || this._value === 0) && (a.value = this._value);
        this.mods.disabled && (a.disabled = 'disabled');

        if (this._live) {
            a.autocomplete = 'off';
        }
        a['aria-labelledby'] = this._labelId + ' ' + this._hintId;

        return a;
    }),

    wrap()(function() {
        return [
            this._placeholder ? {
                elem: 'hint',
                elemMods: {
                    fallback: 'yes'
                },
                content: this._placeholder
            } : '',
            {
                elem: 'box',
                content: this.ctx
            }
        ];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/input/__control/input__control.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/input/__clear/input__clear.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/input/__clear/input__clear.bemhtml
block('input').elem('clear')(
    tag()('span'),

    attrs()({
        // Нужен для того чтобы элемент не выкидывал события focusin и focusout в IE 9+,
        // вызывающие проблемы когда input используется вместе со slider'ом
        // см. http://st/ISLCOMPONENTS-566
        unselectable: 'on'
    }),

    // &nbsp; — fixed bug FF/Linux.
    // After text selection left-click on an item that has no content, the buffer is cleared
    // Delete &nbsp; for fix bug with text selection.
    // I think we don't need anymore FF-3 on linux with X11 ;)
    content().match(function() {
        return !this.ctx.content;
    })('')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/input/__clear/input__clear.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/input/__hint/input__hint.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/input/__hint/input__hint.bemhtml
block('input').elem('hint')(
    tag()('label'),

    attrs()(function() {
        return {
            id: this._hintId,
            'for': this._inputId,
            'aria-hidden': true
        };
    }),

    match(function() {
        return !this._value;
    }).match(function() {
        return this._value !== 0;
    }).def()(function() {
        var ctx = this.ctx,
            elemMods = ctx.elemMods || (ctx.elemMods = {});

        elemMods.visibility = 'visible';

        return applyNext();
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/input/__hint/input__hint.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/input/__requery/input__requery.bemhtml.js */
// autogenerated from input__requery.bemhtml
block('input').elem('requery')(
    attrs()({
        'aria-hidden': true
    }),
    content()([{
        elem: 'requery-input',
        tag: 'input'
    }, {
        elem: 'requery-hidden',
        tag: 'span'
    }, {
        elem: 'requery-visible',
        tag: 'span'
    }])
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/input/__requery/input__requery.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/input/_settings-inside/input_settings-inside_yes.bemhtml.js */
// autogenerated from input_settings-inside_yes.bemhtml
block('input').mod('settings-inside', 'yes')(
    elem('box').content()(function() {
        return [
            applyNext(), {
                elem: 'settings'
            }
        ];
    }),
    elem('settings')(
        tag()('span'),
        attrs()(function() {
            return {
                // см. input__clear.bemhtml
                unselectable: 'on',

                title: 'Расширенный поиск',
                'aria-label': 'Расширенный поиск',
                role: 'button'
            };
        })
    )
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/input/_settings-inside/input_settings-inside_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/websearch-button/websearch-button.bemhtml.js */
block('websearch-button')(
    tag()('button'),
    attrs()(function() {
        return {
            role: 'button',
            type: 'submit',
            tabindex: -1
        };
    }),
    content()(function() {
        return {
            elem: 'text',
            content: this.ctx.content
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/websearch-button/websearch-button.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2/suggest2.bemhtml.js */
block('suggest2')(
    elem('items').tag()('ul')
);

/* end: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2/suggest2.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2/suggest2.bemhtml.js */
// autogenerated from ../../../../libs/islands-suggest/common.blocks/suggest2/suggest2.bemhtml
block('suggest2').elem('items').tag()('ul');

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2/suggest2.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2-item/suggest2-item.bemhtml.js */
block('suggest2-item')(
    tag()('li'),
    js()(true),

    elem('text')(
        tag()(function() {
            return this.ctx.tag || 'span';
        }),
        content()(function() {
            return Array.isArray(this.ctx.content)
                ? this.ctx.content.map(function(item) {
                    return typeof item === 'string'
                        ? this.xmlEscape(item)
                        : item;
                }, this)
                : this.xmlEscape(this.ctx.content);
        })),

    elem('fact').tag()('span'));

/* end: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2-item/suggest2-item.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2-item/suggest2-item.bemhtml.js */
// autogenerated from ../../../../libs/islands-suggest/common.blocks/suggest2-item/suggest2-item.bemhtml
block('suggest2-item')(
    tag()('li'),
    js()(true),

    elem('text')(
        tag()(function() {
            return this.ctx.tag || 'span';
        }),
        content()(function() {
            return Array.isArray(this.ctx.content) ? this.ctx.content.map(function(item) {
                return typeof item === 'string' ? this.xmlEscape(item) : item;
            }, this) : this.xmlEscape(this.ctx.content)
        })
    ),

    elem('fact').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2-item/suggest2-item.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2-item/__highlight/suggest2-item__highlight.bemhtml.js */
block('suggest2-item').elem('highlight')(

    tag()('b'),

    bem()(false),

    content()(function() {
        return this.xmlEscape(this.ctx.content);
    }));

/* end: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2-item/__highlight/suggest2-item__highlight.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2-item/__highlight/suggest2-item__highlight.bemhtml.js */
// autogenerated from ../../../../../libs/islands-suggest/common.blocks/suggest2-item/__highlight/suggest2-item__highlight.bemhtml
block('suggest2-item').elem('highlight')(
    tag()('b'),

    bem()(false),

    content()(function() {
        return this.xmlEscape(this.ctx.content);
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2-item/__highlight/suggest2-item__highlight.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/popup/popup.bemhtml.js */
block('popup')(
    def().match(function() {
        return !this._popupDefaults;
    })(function() {
        var ctx = this.ctx;
        // NOTE(varankinv@): синхронизируем `this.mods` и `this.ctx.mods`, чтобы
        // можно было писать BEMHTML на выставленные модификаторы
        ctx.mods = this.mods = this.extend({
                theme: 'ffffff',
                autoclosable: 'yes',
                adaptive: 'yes',
                animate: 'yes'
            },
            this.mods
        );

        if (ctx.zIndex) {
            var attrs = ctx.attrs || (ctx.attrs = {});
            attrs.style = (attrs.style || '') + ';z-index:' + ctx.zIndex + ';';
        }

        return applyNext({
            _popupDefaults: true
        });
    }),

    content()(function() {
        return [{
                elem: 'under',
                mods: this.ctx.underMods
            },
            this.ctx.content
        ];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/popup/popup.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/deskpad.blocks/suggest2/_group/suggest2_group.bemhtml.js */
block('suggest2').elem('title').content()(function() {
    return [
        {elem: 'a11y', content: 'group' + ': '},
        this.ctx.content
    ];
});

/* end: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/deskpad.blocks/suggest2/_group/suggest2_group.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-deskpad/suggest2/_group/suggest2_group.bemhtml.js */
// autogenerated from ../../../../../libs/islands-suggest/deskpad.blocks/suggest2/_group/suggest2_group.bemhtml
block('suggest2').elem('title').content()(function() {
    return [{
            elem: 'a11y',
            content: 'group' + ': '
        },
        this.ctx.content
    ];
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-deskpad/suggest2/_group/suggest2_group.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2/__a11y/suggest2__a11y.bemhtml.js */
block('suggest2').elem('a11y').tag()('span');

/* end: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2/__a11y/suggest2__a11y.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2/__a11y/suggest2__a11y.bemhtml.js */
// autogenerated from ../../../../../libs/islands-suggest/common.blocks/suggest2/__a11y/suggest2__a11y.bemhtml
block('suggest2').elem('a11y').tag()('span');

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2/__a11y/suggest2__a11y.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2-item/__fact/suggest2-item__fact.bemhtml.js */
block('suggest2-item').elem('fact')(

    match(function() {
        return this.ctx.color;
    }).def()(function() {
        this.ctx.attrs = this.extend(Object(this.ctx.attrs), {
            style: ';color:' + this.ctx.color + ';' + (Object(this.ctx.attrs).style || '')
        });
        return applyNext();
    }),

    content()(function() {
        return [
            {
                block: 'suggest2',
                elem: 'a11y',
                content: 'quick-answer' + ': '
            },
            this.escapeContent === false
                ? this.ctx.content
                : this.xmlEscape(this.ctx.content)
        ];
    })

);

/* end: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2-item/__fact/suggest2-item__fact.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2-item/__fact/suggest2-item__fact.bemhtml.js */
// autogenerated from ../../../../../libs/islands-suggest/common.blocks/suggest2-item/__fact/suggest2-item__fact.bemhtml
block('suggest2-item').elem('fact')(
    match(function() {
        return this.ctx.color;
    }).def()(function() {
        this.ctx.attrs = this.extend(Object(this.ctx.attrs), {
            style: ';color:' + this.ctx.color + ';' + (Object(this.ctx.attrs).style || '')
        });
        return applyNext();
    }),

    content()(function() {
        return [{
                block: 'suggest2',
                elem: 'a11y',
                content: 'quick-answer' + ': '
            },
            this.escapeContent === false ? this.ctx.content : this.xmlEscape(this.ctx.content)
        ];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2-item/__fact/suggest2-item__fact.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2-item/__bullet/suggest2-item__bullet.bemhtml.js */
block('suggest2-item').elem('bullet')(
    tag()('span'),
    attrs()({'aria-hidden': true})
);

/* end: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2-item/__bullet/suggest2-item__bullet.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2-item/__bullet/suggest2-item__bullet.bemhtml.js */
// autogenerated from ../../../../../libs/islands-suggest/common.blocks/suggest2-item/__bullet/suggest2-item__bullet.bemhtml
block('suggest2-item').elem('bullet')(
    tag()('span'),
    attrs()({
        'aria-hidden': true
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2-item/__bullet/suggest2-item__bullet.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/deskpad.blocks/suggest2-item/_type/suggest2-item_type_nav.bemhtml.js */
block('suggest2-item').mod('type', 'nav').elem('fact').content()(function() {
    return this.xmlEscape(this.ctx.content);
});

/* end: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/deskpad.blocks/suggest2-item/_type/suggest2-item_type_nav.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-deskpad/suggest2-item/_type/suggest2-item_type_nav.bemhtml.js */
// autogenerated from ../../../../../libs/islands-suggest/deskpad.blocks/suggest2-item/_type/suggest2-item_type_nav.bemhtml
block('suggest2-item').mod('type', 'nav').elem('fact').content()(function() {
    return this.xmlEscape(this.ctx.content);
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-deskpad/suggest2-item/_type/suggest2-item_type_nav.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2-item/_interact/suggest2-item_interact_link.bemhtml.js */
block('suggest2-item').mod('interact', 'link')(

    content()(function() {
        return {
            elem: 'link',
            url: this.ctx.url,
            target: this.ctx.target || '_blank',
            content: this.ctx.content
        };
    }),

    match(function() {
        return this.mods.type === 'nav' || this.mods.type === 'icon';
    }).elem('text').mix()({mods: {type: 'url'}}));

/* end: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2-item/_interact/suggest2-item_interact_link.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2-item/_interact/suggest2-item_interact_link.bemhtml.js */
// autogenerated from ../../../../../libs/islands-suggest/common.blocks/suggest2-item/_interact/suggest2-item_interact_link.bemhtml
block('suggest2-item').mod('interact', 'link')(
    content()(function() {
        return {
            elem: 'link',
            url: this.ctx.url,
            target: this.ctx.target || '_blank',
            content: this.ctx.content
        };
    }),

    match(function() {
        return this.mods.type === 'nav' || this.mods.type === 'icon';
    }).elem('text').mix()({
        mods: {
            type: 'url'
        }
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2-item/_interact/suggest2-item_interact_link.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2-item/__link/suggest2-item__link.bemhtml.js */
block('suggest2-item').elem('link')(

    tag()('a'),

    attrs()(function() {
        return {
            href: this.ctx.url,
            target: this.ctx.target
        };
    }));

/* end: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2-item/__link/suggest2-item__link.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2-item/__link/suggest2-item__link.bemhtml.js */
// autogenerated from ../../../../../libs/islands-suggest/common.blocks/suggest2-item/__link/suggest2-item__link.bemhtml
block('suggest2-item').elem('link')(
    tag()('a'),

    attrs()(function() {
        return {
            href: this.ctx.url,
            target: this.ctx.target
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2-item/__link/suggest2-item__link.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2-item/__icon/suggest2-item__icon.bemhtml.js */
block('suggest2-item').elem('icon')(

    def()(function() {
        var type = 'png';

        if(this.ctx.autoType) {
            this.ctx[type] = '//yastatic.net/suggest-flag-icons/icon.' + this.ctx.autoType + type;
        }

        // Деградация для браузеров, не поддерживающих SVG.
        var imageUrl = this.ctx.png && this.ctx.svg
            ? this.ctx[type]
            : this.ctx.svg || this.ctx.png;

        if(imageUrl) {
            this.ctx.attrs = this.extend(Object(this.ctx.attrs), {
                style: 'background-image:url("' + (imageUrl) + '");' + (Object(this.ctx.attrs).style || '')
            });
        }

        return applyNext();
    }),

    tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2-item/__icon/suggest2-item__icon.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2-item/__icon/suggest2-item__icon.bemhtml.js */
// autogenerated from ../../../../../libs/islands-suggest/common.blocks/suggest2-item/__icon/suggest2-item__icon.bemhtml
block('suggest2-item').elem('icon')(
    def()(function() {
        var type = 'png';

        if (this.ctx.autoType) {
            this.ctx[type] = '//yastatic.net/suggest-flag-icons/icon.' + this.ctx.autoType + type;
        }

        // Деградация для браузеров, не поддерживающих SVG.
        var imageUrl = this.ctx.png && this.ctx.svg ? this.ctx[type] : this.ctx.svg || this.ctx.png;

        if (imageUrl) {
            this.ctx.attrs = this.extend(Object(this.ctx.attrs), {
                style: 'background-image:url("' + (imageUrl) + '");' + (Object(this.ctx.attrs).style || '')
            });
        }

        return applyNext();
    }),

    tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2-item/__icon/suggest2-item__icon.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2-item/__icon/_traffic/suggest2-item__icon_traffic.bemhtml.js */
block('suggest2-item').elem('icon').match(function() {
    return this.elemMods.traffic;
}).def()(function() {
    return applyNext({
        'ctx.autoType': 'traffic.' + this.elemMods.traffic + '.'
    });
});

/* end: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2-item/__icon/_traffic/suggest2-item__icon_traffic.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2-item/__icon/_traffic/suggest2-item__icon_traffic.bemhtml.js */
// autogenerated from ../../../../../../libs/islands-suggest/common.blocks/suggest2-item/__icon/_traffic/suggest2-item__icon_traffic.bemhtml
block('suggest2-item').elem('icon').match(function() {
    return this.elemMods.traffic;
}).def()(function() {
    return applyNext({
        'ctx.autoType': 'traffic.' + this.elemMods.traffic + '.'
    });
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2-item/__icon/_traffic/suggest2-item__icon_traffic.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2-item/__icon/_weather/suggest2-item__icon_weather.bemhtml.js */
block('suggest2-item').elem('icon').match(function() {
    return this.elemMods.weather;
}).def()(function() {
    var mod = this.elemMods.weather.replace('-', 'minus-').replace('+', 'plus-').replace(/_/g, '-');
    return applyNext({
        'ctx.autoType': 'weather.' + mod + '.',
        'elemMods.weather': mod
    });
});

/* end: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2-item/__icon/_weather/suggest2-item__icon_weather.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2-item/__icon/_weather/suggest2-item__icon_weather.bemhtml.js */
block('suggest2-item').elem('icon').match(function() {
    return this.elemMods.weather;
}).def()(function() {
    var mod = this.elemMods.weather.replace('-', 'minus-').replace('+', 'plus-').replace(/_/g, '-');

    return applyNext({
        'ctx.autoType': 'weather.' + mod + '.',
        'elemMods.weather': mod
    });
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2-item/__icon/_weather/suggest2-item__icon_weather.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/deskpad.blocks/suggest2-item/__thumb/suggest2-item__thumb.bemhtml.js */
block('suggest2-item')(

    elem('thumb').match(function() {
        return !this.ctx.content;
    }).content()(function() {
        return {
            elem: 'thumb-wrapper',
            attrs: {
                style: this.ctx.bgColor
                    ? 'background-color: ' + this.ctx.bgColor + ';border: none;'
                    : ''
            },
            content: {
                elem: 'thumb-img',
                attrs: {
                    src: this.ctx.src,
                    alt: this.ctx.alt
                }
            }
        };
    }),

    elem('thumb-img').tag()('img'));

/* end: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/deskpad.blocks/suggest2-item/__thumb/suggest2-item__thumb.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-deskpad/suggest2-item/__thumb/suggest2-item__thumb.bemhtml.js */
// autogenerated from ../../../../../libs/islands-suggest/deskpad.blocks/suggest2-item/__thumb/suggest2-item__thumb.bemhtml
block('suggest2-item')(
    elem('thumb').match(function() {
        return !this.ctx.content;
    }).content()(function() {
        return {
            elem: 'thumb-wrapper',
            attrs: {
                style: this.ctx.bgColor ? 'background-color: ' + this.ctx.bgColor + ';border: none;' : ''
            },
            content: {
                elem: 'thumb-img',
                attrs: {
                    src: this.ctx.src,
                    alt: this.ctx.alt
                }
            }
        };
    }),

    elem('thumb-img').tag()('img')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-deskpad/suggest2-item/__thumb/suggest2-item__thumb.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/deskpad.blocks/suggest2-item/__img/suggest2-item__img.bemhtml.js */
block('suggest2-item').elem('img').def()(function() {
    var attrs = this.ctx.attrs || {};
    if(this.ctx.src) {
        attrs.style = 'background-image: url(\'' + this.ctx.src + '\');' + (attrs.style || '');
    }
    return applyNext({
        'ctx.attrs': attrs
    });
});

/* end: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/deskpad.blocks/suggest2-item/__img/suggest2-item__img.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-deskpad/suggest2-item/__img/suggest2-item__img.bemhtml.js */
// autogenerated from ../../../../../libs/islands-suggest/deskpad.blocks/suggest2-item/__img/suggest2-item__img.bemhtml
block('suggest2-item').elem('img').def()(function() {
    var attrs = this.ctx.attrs || {};
    if (this.ctx.src) {
        attrs.style = 'background-image: url(\'' + this.ctx.src + '\');' + (attrs.style || '');
    }
    return applyNext({
        'ctx.attrs': attrs
    });
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-deskpad/suggest2-item/__img/suggest2-item__img.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2-item/__text/_type/suggest2-item__text_type_title-url.bemhtml.js */
block('suggest2-item').elem('text').elemMod('type', 'title-url').tag()('div');

/* end: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2-item/__text/_type/suggest2-item__text_type_title-url.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2-item/__text/_type/suggest2-item__text_type_title-url.bemhtml.js */
// autogenerated from ../../../../../../libs/islands-suggest/common.blocks/suggest2-item/__text/_type/suggest2-item__text_type_title-url.bemhtml
block('suggest2-item').elem('text').elemMod('type', 'title-url').tag()('div');

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2-item/__text/_type/suggest2-item__text_type_title-url.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-deskpad/suggest2-item/__text/_type/suggest2-item__text_type_title-url.bemhtml.js */
// autogenerated from ../../../../../../libs/islands-suggest/deskpad.blocks/suggest2-item/__text/_type/suggest2-item__text_type_title-url.bemhtml
block('suggest2-item').elem('text').elemMod('type', 'title-url').tag()('div');

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-deskpad/suggest2-item/__text/_type/suggest2-item__text_type_title-url.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2-item/__text/_type/suggest2-item__text_type_green-url.bemhtml.js */
block('suggest2-item').elem('text').elemMod('type', 'green-url').tag()('div');

/* end: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2-item/__text/_type/suggest2-item__text_type_green-url.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2-item/__text/_type/suggest2-item__text_type_green-url.bemhtml.js */
// autogenerated from ../../../../../../libs/islands-suggest/common.blocks/suggest2-item/__text/_type/suggest2-item__text_type_green-url.bemhtml
block('suggest2-item').elem('text').elemMod('type', 'green-url').tag()('div');

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2-item/__text/_type/suggest2-item__text_type_green-url.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-deskpad/suggest2-item/__text/_type/suggest2-item__text_type_green-url.bemhtml.js */
// autogenerated from ../../../../../../libs/islands-suggest/deskpad.blocks/suggest2-item/__text/_type/suggest2-item__text_type_green-url.bemhtml
block('suggest2-item').elem('text').elemMod('type', 'green-url').tag()('div');

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-deskpad/suggest2-item/__text/_type/suggest2-item__text_type_green-url.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/popup2/popup2.bemhtml.js */
// autogenerated from ../../../../libs/islands-components/common.blocks/popup2/popup2.bemhtml
block('popup2').js()(function() {
    var ctx = this.ctx;
    return {
        mainOffset: ctx.mainOffset,
        secondaryOffset: ctx.secondaryOffset,
        viewportOffset: ctx.viewportOffset,
        directions: ctx.directions,
        zIndexGroupLevel: ctx.zIndexGroupLevel
    };
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/popup2/popup2.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/service/service.bemhtml.js */
// autogenerated from ../../../../libs/islands-page/common.blocks/service/service.bemhtml
block('service')(
    def()(function() {
        var ctx = this.ctx;

        return applyNext({
            _url: (ctx.url !== false) && (ctx.url || this['i-services'].serviceUrl(ctx.service)),
            _icon: (ctx.icon !== false),
            _name: (ctx.name !== false)
        })
    }),

    content().match(function() { return this._url; })(function() {
        return {
            elem: 'url',
            url: this._url,
            urlParams: this.ctx.urlParams || '',
            urlAttrs: this.ctx.urlAttrs,
            counter: this.ctx.counter,
            content: applyNext({
                _url: false
            })
        };
    }),

    content().match(function() { return !this._url; })(function() {
        var result = [];

        this._icon && result.push({
            elem: 'icon',
            service: this.ctx.service,
            elemMods: this.ctx.iconMods
        });

        this._name && result.push({
            elem: 'name',
            service: this.ctx.service,
            name: this.ctx.name
        });

        return result;
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/service/service.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/service/service.bemhtml.js */
block('service').def()(function() {
    var ctx = this.ctx,
        service = this.ctx.service;

    ctx.mix = [{ mods: { name: service } }].concat(ctx.mix);
    ctx.counter || (ctx.counter = this['i-global']._counter && this['i-global']._counter('/table/' + service))

    return applyNext({
        _service: service,
        _linkMix: ctx.linkMix
    });
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/service/service.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/service/__name/service__name.bemhtml.js */
// autogenerated from ../../../../../libs/islands-page/common.blocks/service/__name/service__name.bemhtml
block('service').elem('name').content()(function() {
    var ctx = this.ctx,
        service = ctx.service,
        serviceName = ctx.name || this['i-services'].serviceName(service) || service;

    return serviceName;
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/service/__name/service__name.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/service/__url/service__url.bemhtml.js */
// autogenerated from ../../../../../libs/islands-page/common.blocks/service/__url/service__url.bemhtml
block('service').elem('url')(
    tag()('a'),
    mix()([{
        block: 'link'
    }]),

    attrs()(function() {
        var a = this.ctx.urlAttrs || {};
        a.href = this.ctx.url + this.ctx.urlParams;

        this.ctx.counter && (a.onmousedown = this.ctx.counter);

        return a;
    }),

    content()(function() {
        return this.ctx.content;
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/service/__url/service__url.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/service/__url/service__url.bemhtml.js */
// autogenerated from service__url.bemhtml
block('service').elem('url').mix()(function() {
    return [{
        block: 'link',
        mods: {
            target: 'vertical-service',
            'service-link': 'yes'
        },
        js: {
            service: this._service
        }
    }, this._linkMix].concat(applyNext());
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/service/__url/service__url.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/link/link.bemhtml.js */
// autogenerated from ../../../../libs/islands-components/common.blocks/link/link.bemhtml
block('link')(
    tag()(function() {
        return this.ctx.url ? 'a' : 'span';
    }),

    js().match(function() {
        return this.ctx.tabindex;
    })(function() {
        return {
            origTabindex: this.ctx.tabindex
        };
    }),

    attrs()(function() {
        var ctx = this.ctx,
            url = ctx.url,
            attrs = {};

        ['title', 'target', 'id', 'tabindex'].forEach(function(param) {
            ctx[param] && (attrs[param] = ctx[param]);
        });

        if (url) {
            if (this.isSimple(url)) {
                attrs.href = url;
            } else {
                // В ctx.url может быть bem-дерево. К примеру i-bem__i18n.
                var buf = [];
                apply('', {
                    _buf: buf,
                    ctx: url
                });
                attrs.href = buf.join('');
            }
        } else {
            attrs.role = 'button';
            attrs.tabindex || (attrs.tabindex = 0);
        }

        return attrs;
    }),

    elem('inner').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/link/link.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-common/link/link.bemhtml.js */
// autogenerated from link.bemhtml
block('link').attrs()(function() {
    var a = applyNext() || {},
        ctx = this.ctx;
    ctx.counter && (a.onmousedown = ctx.counter);
    return a;
});

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-common/link/link.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/link/_disabled/link_disabled_yes.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/link/_disabled/link_disabled_yes.bemhtml
block('link').mod('disabled', 'yes').attrs()(function() {
    return this.extend(applyNext(), {
        tabindex: -1,
        'aria-disabled': true
    });
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/link/_disabled/link_disabled_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/footer/footer.bemhtml.js */
// autogenerated from ../../../../libs/islands-page/common.blocks/footer/footer.bemhtml
block('footer')(
    def()(function() {
        return applyNext({
            _inFooter: true
        });
    }),

    mix()([{
        block: 'clearfix'
    }]),
    attrs()({
        role: 'contentinfo'
    }),

    match(function() { return !this.ctx.content; }).content()(function() {
        var leftColumnContent = [],
            rightColumnContent = [];

        leftColumnContent.push({
            elem: 'link',
            url: 'apps-url',
            content: 'apps'
        });

        var isKubr = !(this['i-global'].tld.indexOf('com') >= 0);

        isKubr && rightColumnContent.push({
            elem: 'link',
            url: 'advert-url',
            content: 'advert'
        });

        // TODO: Возможно стоит перенести statUrl куда-то
        // поближе к i-services.
        isKubr && this.ctx.statUrl && rightColumnContent.push({
            elem: 'link',
            url: this.ctx.statUrl,
            content: 'stat'
        });

        rightColumnContent.push({
            elem: 'link',
            url: 'termsofuse-url',
            content: 'termsofuse'
        });

        rightColumnContent.push({
            elem: 'link',
            url: 'about-url',
            content: 'about'
        });

        rightColumnContent.push({
            block: 'copyright',
            start: this.ctx.start
        });

        return [{
            elem: 'column',
            content: leftColumnContent
        }, {
            elem: 'column',
            elemMods: {
                side: 'right'
            },
            content: rightColumnContent
        }];

    })
);

block('copyright').elem('link').match(function() { return this._inFooter; }).mix()([{
    block: 'footer',
    elem: 'link'
}]);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/footer/footer.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-desktop/footer/footer.bemhtml.js */
// autogenerated from footer.bemhtml
block('footer').attrs()(function() {
    return this.extend(applyNext(), this.ctx.bg && {
        style: 'background-color:' + this.ctx.bg
    });
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-desktop/footer/footer.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/footer/__link/footer__link.bemhtml.js */
// autogenerated from ../../../../../libs/islands-page/common.blocks/footer/__link/footer__link.bemhtml
block('footer').elem('link').replace()(function() {
    var ctx = this.extend(this.ctx, {
        block: 'link',
        mix: [{
            block: this.block,
            elem: this.elem,
            elemMods: this.elemMods
        }]
    });

    this.ctx.mix &&
        (ctx.mix = ctx.mix.concat(this.ctx.mix));

    delete ctx.elem;
    delete ctx.elemMods;

    return ctx;
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/footer/__link/footer__link.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/copyright/copyright.bemhtml.js */
// autogenerated from ../../../../libs/islands-page/common.blocks/copyright/copyright.bemhtml
block('copyright')(
    /* istanbul ignore next: overrided */
    mode('wrapLink')(function() {
        return this.ctx;
    }),

    content()(function() {
        var currentYear = (new Date).getFullYear(),
            startYear = this.ctx.start || currentYear,
            linkHtmlBuffer = [];

        apply('', {
            '_buf': linkHtmlBuffer,
            'ctx.block': this.block,
            'ctx.elem': 'link',
            'ctx.url': this.ctx.url === undefined ? this['i-services'].serviceUrl('www') : this.ctx.url
        });

        return [
            '&copy;&nbsp;' + startYear + (currentYear === startYear ? '' : '&ndash;' + currentYear) + '&nbsp;&nbsp;',
            this.ctx.content || apply('wrapLink', {
                ctx: linkHtmlBuffer.join('')
            })
        ];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/copyright/copyright.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-desktop/copyright/copyright.bemhtml.js */
// autogenerated from copyright.bemhtml
block('copyright').elem('name')(
    tag()('span'),
    content()(function() {
        return 'ссылка в футере';
    })
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-desktop/copyright/copyright.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/copyright/__link/copyright__link.bemhtml.js */
// autogenerated from ../../../../../libs/islands-page/common.blocks/copyright/__link/copyright__link.bemhtml
block('copyright').elem('link')(
    tag()(false),

    match(function() { return this.ctx.url; })(
        tag()('a'),
        attrs()(function() {
            return {
                href: this.ctx.url
            };
        })
    ),

    content()(function() {
        return this.ctx.content || 'yandex';
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/copyright/__link/copyright__link.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/footer/__settings/footer__settings.bemhtml.js */
// autogenerated from footer__settings.bemhtml
block('footer').elem('settings').tag()('span');

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/footer/__settings/footer__settings.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-desktop/b-keyboard-loader/b-keyboard-loader.bemhtml.js */
block('b-keyboard-loader')(
    def()(function() {
        return applyNext({
            _lang: this.mods.lang
        });
    }),
    js()(function() {
        var a = {};
        this.ctx.forInput && (a['for'] = this.ctx.forInput);
        return a;
    }),
    tag()('span'),
    mix()(function() {
        var m = {};
        (this.ctx.mods || {}).dropdowna || (m.dropdowna = 'yes');
        return [{
            mods: m
        }];
    }),
    content()(
        match(function() {
            return true;
        })(function() {
            return {
                block: 'b-link',
                mods: {
                    pseudo: 'yes'
                },
                content: this.ctx.content
            };
        }),
        match(function() {
            return Array.isArray(this.ctx.content);
        })(function() {
            return [{
                block: 'b-link',
                mods: {
                    pseudo: 'yes'
                },
                content: this.ctx.content.shift()
            }, this.ctx.content ? this.ctx.content : ''];
        })
    ),
    elem('flag').def()(function() {
        return applyCtx({
            block: 'b-icon',
            url: this['i-global']['lego-static-host'] + '/blocks-desktop/b-country-flag/_size-16/b-country-flag_size-16_' + this._lang + '.png',
            mix: [{
                block: this.block,
                elem: this.elem
            }]
        });
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-desktop/b-keyboard-loader/b-keyboard-loader.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-desktop/b-keyboard-loader/b-keyboard-loader.bemhtml.js */
// autogenerated from b-keyboard-loader.bemhtml
block('b-keyboard-loader').content()(function() {
    return {
        block: 'link',
        attrs: {
            onmousedown: this.ctx.counter
        },
        mods: {
            pseudo: 'yes'
        },
        mix: {
            block: 'footer',
            elem: 'link'
        },
        content: this.ctx.content
    };
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-desktop/b-keyboard-loader/b-keyboard-loader.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/serp-list/serp-list.bemhtml.js */
block('serp-list').attrs()(function() {
    return {
        role: this.ctx.role,
        'aria-label': this.ctx.ariaLabel
    };
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/serp-list/serp-list.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/serp-list/_left/serp-list_left_yes.bemhtml.js */
block('serp-list').mod('left', 'yes')(
    def()(function() {
        return applyNext({
            _isLeftContent: true,
            _pageNum: this.ctx.page,
            _elemNum: 0
        });
    }),

    tag()('ul'),

    attrs()({
        role: 'main',
        'aria-label': 'Результаты поиска'
    })
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/serp-list/_left/serp-list_left_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/serp-adv/__banner/serp-adv__banner.bemhtml.js */
// autogenerated from serp-adv__banner.bemhtml
block('serp-adv').elem('banner').attrs()(function() {
    return {
        onmousedown: this.ctx.counter
    };
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/serp-adv/__banner/serp-adv__banner.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/serp-adv/__banner/serp-adv__banner.bemhtml.js */
// autogenerated from serp-adv__banner.bemhtml
block('serp-adv').elem('banner').mix()([{
    block: 'content-placeholder'
}, {
    block: 'i-bem'
}]);

block('serp-adv').elem('banner-image').content()(function() {
    return {
        block: 'link',
        url: this.ctx.url,
        target: this.ctx.target,
        attrs: {
            title: this.ctx.alt
        },
        content: {
            block: 'serp-adv',
            elem: 'image',
            tag: 'img',
            attrs: {
                src: this.ctx.img,
                height: this.ctx.height,
                width: this.ctx.width,
                alt: this.ctx.alt
            }
        }
    };
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/serp-adv/__banner/serp-adv__banner.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/serp-adv/__counter/serp-adv__counter.bemhtml.js */
block('serp-adv').elem('counter')(
    match(function() {
        return this.ctx.js;
    }).tag()('span'),
    attrs()(function() {
        return this.ctx.url && {
            style: 'background-image: url(' + this.ctx.url + ');'
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/serp-adv/__counter/serp-adv__counter.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/button/button.bemhtml.js */
// autogenerated from ../../../../libs/islands-components/common.blocks/button/button.bemhtml
block('button')(
    tag()('button'),

    match(function() { return this.ctx.url; }).tag()('a'),

    js()(true),

    def()(function() {
        this.ctx.mods = this.extend({
            theme: 'normal'
        }, this.ctx.mods);
        return applyNext();
    }),

    attrs()(
        // Common attributes
        match(function() { return true; })(function() {
            var ctx = this.ctx,
                a = {
                    role: 'button'
                };

            a.tabindex = ctx.tabindex;

            return a;
        }),

        // Attributes for link variant
        match(function() { return this.ctx.url; })(function() {
            var ctx = this.ctx,
                p = applyNext(),
                a = {
                    href: ctx.url,
                    target: ctx.target
                };
            return this.extend(p, a);
        }),

        // Attributes for button variant
        match(function() { return !this.ctx.url; })(function() {
            var ctx = this.ctx,
                p = applyNext(),
                a = {
                    type: ctx.type || 'button',
                    name: ctx.name,
                    value: ctx.value
                };
            return this.extend(p, a);
        })
    ),

    content()(function() {
        return {
            elem: 'text',
            tag: 'span',
            content: this.ctx.content
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/button/button.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/button/button.bemhtml.js */
// autogenerated from button.bemhtml
block('button').match(function() {
    return this.ctx.counter;
}).attrs()(function() {
    return this.extend(applyNext(), {
        onmousedown: this.ctx.counter
    });
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/button/button.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/button/_disabled/button_disabled_yes.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/button/_disabled/button_disabled_yes.bemhtml
block('button').mod('disabled', 'yes').attrs()(function() {
    var ctx = this.ctx,
        a = {};

    if (ctx.url) {
        a['aria-disabled'] = true;
    } else {
        a.disabled = 'disabled';
    }

    return this.extend(applyNext(), a);
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/button/_disabled/button_disabled_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/serp-item/serp-item.bemhtml.js */
block('serp-item')(
    def()(function() {
        if (this._isLeftContent) {
            this.ctx.tag = 'li';
        }

        // Не делать теги li для вложенных блоков serp-item
        return applyNext({
            _isLeftContent: false
        });
    }),

    // Нужно для поиска по блогам.
    elem('date').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/serp-item/serp-item.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/serp-item/serp-item.bemhtml.js */
block('serp-item').content()(function() {
    return [
        this.ctx.content,
        this.ctx.control && this.ctx.control.length ? {
            elem: 'controls',
            content: this.ctx.control
        } : '',
        this.ctx.tail
    ];
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/serp-item/serp-item.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-desktop/serp-item/serp-item.bemhtml.js */
// autogenerated from serp-item.bemhtml
block('serp-item')(
    def()(function() {
        return applyNext({
            _more: this.ctx.more
        });
    }),
    elem('greenurl').match(function() {
        return this._more;
    }).content()(function() {
        return [
            applyNext(),
            {
                block: 'popup2',
                mix: {
                    block: 'serp-url',
                    elem: 'popup'
                },
                mods: {
                    target: 'anchor',
                    theme: 'normal',
                    autoclosable: 'yes'
                },
                directions: ['bottom-center'],
                content: this._more
            }
        ];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-desktop/serp-item/serp-item.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/favicon/favicon.bemhtml.js */
// autogenerated from favicon.bemhtml
block('favicon')(
    tag()('span'),
    elem('icon').tag()('i')
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/favicon/favicon.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/serp-item/__title/serp-item__title.bemhtml.js */
block('serp-item')(
    elem('title').tag()('h2'),
    elem('title-inner-link').tag()('span'),
    elem('title-link').replace()(function() {
        return this.extend(this.ctx, {
            block: 'link',
            elem: undefined,
            mix: [{
                block: this.block,
                elem: this.elem,
                mods: this.mods
            }].concat(this.ctx.mix)
        });
    })
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/serp-item/__title/serp-item__title.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/serp-item/__title/serp-item__title.bemhtml.js */
block('serp-item').elem('title').content()(function() {
    this._elemNum++;

    return [{
        block: 'a11y-hidden',
        content: (this._pageNum > 1 ? this._pageNum + '.' : '') + this._elemNum
    }].concat(this.ctx.content);
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/serp-item/__title/serp-item__title.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/serp-sitelinks/serp-sitelinks.bemhtml.js */
block('serp-sitelinks')(
    elem('info').tag()('span'),
    elem('item').tag()('span'),

    elem('link').replace()(function() {
        return this.extend(this.ctx, {
            block: 'link',
            elem: undefined,
            attrs: { tabindex: -1 },
            mix: [{ block: this.block, elem: this.elem }].concat(this.ctx.mix)
        });
    }),
    elem('icon')(
        tag()('img'),
        attrs()(function() {
            return {
                src: this.ctx.url,
                alt: ''
            };
        })
    )
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/serp-sitelinks/serp-sitelinks.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/serp-sitelinks/_layout/serp-sitelinks_layout_table.bemhtml.js */
// autogenerated from serp-sitelinks_layout_table.bemhtml
block('serp-sitelinks').mod('layout', 'table')(
    tag()('table'),
    elem('cell').tag()('td')
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/serp-sitelinks/_layout/serp-sitelinks_layout_table.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/extended-meta/extended-meta.bemhtml.js */
// autogenerated from extended-meta.bemhtml
block('extended-meta').elem('item').tag()('span');

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/extended-meta/extended-meta.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/extended-meta/__separator/extended-meta__separator.bemhtml.js */
// autogenerated from extended-meta__separator.bemhtml
block('extended-meta').elem('separator').tag()('span');

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/extended-meta/__separator/extended-meta__separator.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/serp-meta/__item/serp-meta__item.bemhtml.js */
// autogenerated from serp-meta__item.bemhtml
block('serp-meta').elem('item').tag()('span');

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/serp-meta/__item/serp-meta__item.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/serp-meta/__separator/serp-meta__separator.bemhtml.js */
// autogenerated from serp-meta__separator.bemhtml
block('serp-meta').elem('separator')(
    tag()('span'),
    content()('&middot;')
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/serp-meta/__separator/serp-meta__separator.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/image/image.bemhtml.js */
// autogenerated from ../../../../libs/islands-components/common.blocks/image/image.bemhtml
block('image')(
    tag()('img'),
    attrs()(function() {
        var ctx = this.ctx,
            a = {
                src: ctx.url || '//yastatic.net/lego/_/La6qi18Z8LwgnZdsAr1qy1GwCwo.gif',
                alt: ctx.alt || ''
            };

        ctx.width && (a.width = ctx.width);
        ctx.height && (a.height = ctx.height);

        return a;
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/image/image.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/image/image.bemhtml.js */
block('image').mod('placeholder', 'yes').mix()({ block: 'content-placeholder' });

block('image').mod('type', 'cover')(
    tag()('div'),
    attrs()(function() {
        return {
            style: (this.ctx.width ? 'width:' + this.ctx.width + 'px;' : '') +
                   (this.ctx.height ? 'height:' + this.ctx.height + 'px;' : '') +
                   (this.ctx.url ? 'background-image: url(' + this.ctx.url + ');' : '')
        };
    })
);

block('image').mod('stats', 'yes')(
    attrs()(function() {
        return this.extend(applyNext(), {
            onload: 'this._loadSuccess = true',
            onerror: 'this._loadError = true'
        });
    })
);

block('image').mod('type', 'contain')(
    wrap()(function() {
        return {
            block: 'image',
            elem: 'wrapper',
            elemMods: { type: 'contain' },
            attrs: {
                style: (this.ctx.width ? 'width:' + this.ctx.width + 'px;' : '') +
                       (this.ctx.height ? 'height:' + this.ctx.height + 'px;' : '')
            },
            content: this.ctx
        };
    }),
    attrs()(function() {
        var nextResult = applyNext();

        return this.extend(nextResult, {
            style: (this.ctx.width ? 'max-width:' + this.ctx.width + 'px;' : '') +
                   (this.ctx.height ? 'max-height:' + this.ctx.height + 'px;' : '')
        });
    })
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/image/image.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/serp-item/__passage/serp-item__passage.bemhtml.js */
// autogenerated from serp-item__passage.bemhtml
block('serp-item').elem('passage')(
    tag()('b'),
    content()('... ')
);

block('serp-item').elem('snippet')(
    tag()('span'),
    match(function() {
        return !this.isLast();
    }).content()(function() {
        return [this.ctx.content, ' • '];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/serp-item/__passage/serp-item__passage.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/serp-item/__text/serp-item__text.bemhtml.js */
// autogenerated from serp-item__text.bemhtml
block('serp-item').elem('text').match(function() {
    return this.ctx.label;
}).content()(function() {
    return [
        {
            tag: 'b',
            content: this.ctx.label + ':&nbsp;'
        },
        this.ctx.content
    ];
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/serp-item/__text/serp-item__text.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/serp-item/__image-snippet/serp-item__image-snippet.bemhtml.js */
block('serp-item').elem('image-snippet')(
    tag()('img'),
    attrs()(function() {
        var ctx = this.ctx,
            a = {
                src: ctx.url || '//yastatic.net/lego/_/La6qi18Z8LwgnZdsAr1qy1GwCwo.gif',
                alt: ctx.alt || ''
            };

        ctx.width && (a.width = ctx.width);
        ctx.height && (a.height = ctx.height);

        return a;
    })
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/serp-item/__image-snippet/serp-item__image-snippet.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/serp-url/serp-url.bemhtml.js */
block('serp-url')(
    elem('mark').tag()('span'),
    elem('item').tag()('span'),
    elem('text').tag()('span'),

    elem('link').replace()(function() {
        return this.extend(this.ctx, {
            block: 'link',
            elem: undefined,
            attrs: { tabindex: -1 },
            mix: [{ block: this.block, elem: this.elem }].concat(this.ctx.mix)
        });
    })
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/serp-url/serp-url.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/serp-url/__arrow/serp-url__arrow.bemhtml.js */
// autogenerated from serp-url__arrow.bemhtml
block('serp-url').elem('arrow').tag()('span');

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/serp-url/__arrow/serp-url__arrow.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/serp-list/_right/serp-list_right_yes.bemhtml.js */
block('serp-list').mod('right', 'yes').attrs()({
    role: 'complementary',
    'aria-label': 'Дополнительная информация по запросу'
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/serp-list/_right/serp-list_right_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-deskpad/frame/frame.bemhtml.js */
// autogenerated from frame.bemhtml
block('frame').elem('iframe')(
    tag()('iframe'),

    attrs()({
        allowfullscreen: 1
    }))

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-deskpad/frame/frame.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/popup/__close/popup__close.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/popup/__close/popup__close.bemhtml
block('popup').elem('close').tag()('i');

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/popup/__close/popup__close.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/popup/_has-close/popup_has-close_yes.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/popup/_has-close/popup_has-close_yes.bemhtml
block('popup').mod('has-close', 'yes').content()(function() {
    return [
        applyNext(), {
            elem: 'close'
        }
    ];
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/popup/_has-close/popup_has-close_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/popup/__tail/popup__tail.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/popup/__tail/popup__tail.bemhtml
block('popup').elem('tail').tag()('i');

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/popup/__tail/popup__tail.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/no-connection/no-connection.bemhtml.js */
// autogenerated from no-connection.bemhtml
block('no-connection')(
    js()(true),
    content()(function() {
        return {
            elem: 'wrapper',
            content: [{
                elem: 'message',
                content: this.ctx.content
            }, {
                block: 'button',
                mods: {
                    size: 'm'
                },
                mix: {
                    block: this.block,
                    elem: 'reload'
                },
                content: this.ctx.reloadButtonText,
                counter: this.ctx.counter
            }]
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/no-connection/no-connection.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/link/_pseudo/link_pseudo_yes.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/link/_pseudo/link_pseudo_yes.bemhtml
block('link').mod('pseudo', 'yes')(
    js()(true),

    match(function() { return !this.ctx.url; }).attrs()(function() {
        return this.extend({
            role: 'button',
            tabindex: 0
        }, applyNext());
    }),

    content().match(function() { return !this.mods.inner; })(function() {
        return {
            elem: 'inner',
            content: this.ctx.content
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/link/_pseudo/link_pseudo_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-common/link/_pseudo/link_pseudo_yes.bemhtml.js */
// autogenerated from link_pseudo_yes.bemhtml
block('link').mod('pseudo', 'yes').content()(function() {
    return this.ctx.content;
});

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-common/link/_pseudo/link_pseudo_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/pager/pager.bemhtml.js */
// autogenerated from pager.bemhtml
block('pager').attrs()(function() {
    return {
        role: 'navigation',
        'aria-label': 'Заголовок пейджера на СЕРПе'
    };
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/pager/pager.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/pager/__item/pager__item.bemhtml.js */
// autogenerated from pager__item.bemhtml
block('pager').elem('item').elemMod('current', 'yes').tag()('span');

block('pager').elem('item').match(function() {
    return this.elemMods.current !== 'yes';
}).replace()(function() {
    var ctx = this.ctx;
    return {
        block: 'link',
        js: ctx.isAjaxSupported ? true : false,
        mods: {
            ajax: ctx.isAjaxSupported ? 'yes' : ''
        },
        mix: [{
            block: 'pager',
            elem: 'item',
            elemMods: {
                kind: ctx.elemMods.kind
            }
        }],
        url: ctx.url,
        counter: ctx.counter,
        content: ctx.content
    };
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/pager/__item/pager__item.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/navigation/navigation.bemhtml.js */
block('navigation')(
    js()(true),

    def().match(function() {
        return !this.mods['more-type'];
    })(function() {
        this.ctx.mods = this.extend(this.ctx.mods || {}, {
            'more-type': 'popup'
        })
        return applyCtx(this.ctx)
    }),

    content()(function() {
        return {
            elem: 'region',
            content: this.ctx.content.map(function(elem) {
                elem.block = 'navigation';
                return this.extend(this.extend({}, elem), {
                    elemMods: {
                        service: 'yes'
                    }
                });
            }, this)
        };
    }),

    attrs()(function() {
        var a = applyNext() || {},
            query = this.ctx.query,
            label;

        a.role = 'navigation';

        if (query) {
            label = query;
        } else {
            label = 'search-also';
        }

        a['aria-label'] = label;

        return a;
    }),

    elem('item')(
        mix()(function() {
            return [{
                elemMods: {
                    name: this.ctx.service,
                    state: this.ctx.selected ? 'selected' : null
                }
            }];
        }),

        content()(function() {
            return {
                block: 'service',
                service: this.ctx.service,
                iconMods: {
                    self: '40'
                },
                name: this.ctx.name,
                mods: this.ctx.selected ? false : {
                    hoverable: 'yes'
                },
                lang: this.ctx.lang,
                url: this.ctx.selected ? false : this.ctx.url,
                urlParams: (this.ctx.search || '') + (this.ctx.params || ''),
                urlAttrs: {
                    target: this.ctx.target,
                    tabindex: 0 /* Opera 12 */
                },
                counter: this.ctx.counter
            };
        })
    ),

    elem('region').attrs()({
        role: 'list'
    }),

    elem('more')(
        mix()([{
            elem: 'item'
        }]),

        content()([{
            elem: 'more-label',
            mix: [{
                block: 'service',
                mods: {
                    hoverable: 'yes'
                }
            }],
            content: {
                block: 'service',
                elem: 'icon'
            }
        }])
    ),

    elem('more-label').attrs()(function() {
        var a = applyNext() || {},
            title =  'more'

        return this.extend(a, {
            tabindex: 0,
            role: 'button',
            'title': title,
            'aria-label': title,
            'aria-haspopup': true,
            'aria-expanded': false
        });
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/navigation/navigation.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/navigation/navigation.bemhtml.js */
// autogenerated from navigation.bemhtml
block('navigation')(
    def()(function() {
        return applyNext({
            _moreCounter: this.ctx.moreCounter
        });
    }),
    elem('item').content()(function() {
        return this.extend(applyNext(), {
            icon: false,
            linkMix: this.ctx.linkMix
        });
    }),
    elem('more').attrs()(function() {
        return this.extend(applyNext(), {
            onmousedown: this._moreCounter
        });
    }),
    elem('more-label').content()(function() {
        return 'Ещё'
    })
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/navigation/navigation.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/navigation/_more-type/navigation_more-type_popup.bemhtml.js */
block('navigation').mod('more-type', 'popup')(
    elem('more').content()(function() {
        return [
            applyNext(), {
                block: 'popup',
                mix: [{
                    block: 'navigation',
                    elem: 'popup'
                }],
                mods: {
                    'adaptive': 'yes',
                    'watch-scroll': 'no',
                    'position': 'fixed'
                },
                js: {
                    directions: [{
                        to: 'right',
                        axis: 'middle'
                    }],
                    position: {
                        left: 128
                    }
                },
                zIndex: 9,
                content: [{
                    elem: 'tail'
                }, {
                    elem: 'content',
                    mix: [{
                        block: 'navigation',
                        elem: 'more-stack'
                    }],
                    content: (function(t) {
                        return t.ctx.content.map(function(elem) {
                            return t.extend(t.extend({}, elem), {
                                elemMods: {
                                    service: 'no'
                                }
                            });
                        });
                    })(this)
                }]
            }
        ];
    }),

    elem('more-label')(
        attrs()(function() {
            var a = applyNext() || {},
                title = 'more'

            return this.extend(a, {
                tabindex: 0,
                role: 'button',
                'title': title,
                'aria-label': title,
                'aria-haspopup': true,
                'aria-expanded': false
            });
        }),

        content()('• • •')
    ),

    elem('region').content()(function() {
        return [
            applyNext(), {
                elem: 'more',
                content: this.ctx.content
            }
        ];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/navigation/_more-type/navigation_more-type_popup.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-desktop/navigation/_more-type/navigation_more-type_slide.bemhtml.js */
// autogenerated from navigation_more-type_slide.bemhtml
block('navigation').mod('more-type', 'slide').elem('region').content()(function() {
    return [
        this.ctx.content, {
            elem: 'more'
        }
    ];
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-desktop/navigation/_more-type/navigation_more-type_slide.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/region/region.bemhtml.js */
block('region')(
    js()(true),
    elem('switcher').replace()(function() {
        return {
            block: 'popup',
            mods: {
                theme: 'ffffff'
            },
            mix: [{
                block: this.block,
                elem: 'menu'
            }].concat(this.ctx.mix),
            js: {
                directions: 'top'
            },
            content: [{
                elem: 'tail'
            }, {
                elem: 'content',
                content: {
                    block: 'b-menu-vert',
                    content: this.ctx.options
                }
            }]
        };
    }),
    elem('button').replace()(function() {
        return {
            block: 'link',
            mods: {
                pseudo: 'yes',
                ajax: 'no'
            },
            js: true,
            mix: [{
                block: 'region',
                elem: 'button'
            }].concat(this.ctx.mix),
            content: this.ctx.content,
            counter: this.ctx.counter
        };
    }),

    match(function() { return this.ctx.url; }).elem('item')(
        mix()({
            block: 'b-menu-vert',
            elem: 'item'
        }),
        content()(function() {
            return {
                block: 'link',
                url: this.ctx.url,
                content: this.ctx.content,
                counter: this.ctx.counter
            };
        })
    )
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/region/region.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/b-menu-vert/b-menu-vert.bemhtml.js */
block('b-menu-vert')(
    content()(function() {
        return [
            this.ctx.title,
            {
                elem: 'layout',
                content: this.ctx.content
            }
        ];
    }),

    elem('layout').tag()('ul'),

    elem('item')
        .match(function() {return !this._inItemContent;})
        .wrap()(function() {
            this.position--;

            return {
                elem: 'layout-unit',
                content: [this.ctx, this.ctx['item-content']]
            };
        }),

    elem('item-content').def()(function() {
        return applyNext({_inItemContent: true});
    }),

    elem('layout-unit')(
        tag()('li'),

        mix()(function() {
            var mix = [];

            this.isFirst() && mix.push({elemMods: {position: 'first'}});
            this.isLast() && mix.push({elemMods: {position: 'last'}});

            return mix;
        })
    ),

    elem('item-selector').tag()('span'),

    elem('submenu').tag()('ul')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/b-menu-vert/b-menu-vert.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/b-menu-vert/__title/b-menu-vert__title.bemhtml.js */
// autogenerated from ../../../../../libs/bem-bl/blocks-common/b-menu-vert/__title/b-menu-vert__title.bemhtml
block('b-menu-vert').elem('title').tag()('h3');

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/b-menu-vert/__title/b-menu-vert__title.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/button/_pseudo/button_pseudo_yes.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/button/_pseudo/button_pseudo_yes.bemhtml
block('button').mod('pseudo', 'yes').def()(function() {
    this.ctx.mods = this.extend({
        theme: 'pseudo'
    }, this.ctx.mods);

    return applyNext();
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/button/_pseudo/button_pseudo_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/components/related/blocks-deskpad/related/related.bemhtml.js */
block('related')(
    def()(function() {
        return applyNext({
            _asId: this.generateId()
        });
    }),

    attrs()(function() {
        return {
            role: 'navigation',
            'aria-labelledby': this._asId
        };
    }),

    elem('header')(
        tag()('h2'),
        attrs()(function() {
            return {
                id: this._asId
            };
        }))
);

/* end: /Users/miripiruni/Documents/www/web4/components/related/blocks-deskpad/related/related.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/competitors/competitors.bemhtml.js */
// autogenerated from competitors.bemhtml
block('competitors').attrs()(function() {
    return {
        role: 'region',
        'aria-label':  'Искать в других поисковых системах'
    };
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/competitors/competitors.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-desktop/b-counters/b-counters.bemhtml.js */
// autogenerated from b-counters.bemhtml
block('b-counters')(
    mix()({
        block: 'serp',
        js: {
            uniqId: 'search'
        }
    }),
    elem('item')(
        tag()('i'),
        bem()(false),
        attrs()(function() {
            return {
                style: 'background:url(' + this.ctx.url + ')'
            };
        })
    )
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-desktop/b-counters/b-counters.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/b-statcounter/__tns/b-statcounter__tns.bemhtml.js */
// autogenerated from ../../../../../libs/islands-romochka/common.blocks/b-statcounter/__tns/b-statcounter__tns.bemhtml
block('b-statcounter').elem('tns')(
    tag()('i'),

    bem()(false),

    attrs()(function() {
        return {
            style: 'background: url(//www.tns-counter.ru/V13a****yandex_ru/ru/UTF-8/tmsec=' + this._id +
                '/' + Math.floor(Math.random() * 1000000000) + ')'
        };
    }),

    def()(function() {
        return applyNext({
            _id: (this['i-global'] || {}).tns || this.ctx.id || 'yandex_' + this['i-global'].id
        });
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/b-statcounter/__tns/b-statcounter__tns.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/advanced-search/blocks-deskpad/advanced-search/advanced-search.bemhtml.js */
// autogenerated from advanced-search.bemhtml
block('advanced-search')(
    def()(function() {
        return applyNext({
            _asId: this.generateId()
        });
    }),
    tag()('form'),
    attrs()(function() {
        return {
            action: '/',
            'aria-labelledby': this._asId,
            role: 'search'
        };
    }),
    elem('submit')(
        tag()('input'),
        attrs()({
            type: 'submit'
        })
    ),
    elem('region-name').tag()('span'),
    elem('country-name').tag()('span'),
    elem('title')(
        tag()('h2'),
        mix()({
            block: 'a11y-hidden'
        }),
        attrs()(function() {
            return {
                id: this._asId
            };
        })
    )
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/advanced-search/blocks-deskpad/advanced-search/advanced-search.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/calendar/blocks-common/input/_has-calendar/input_has-calendar_yes.bemhtml.js */
// autogenerated from input_has-calendar_yes.bemhtml
block('input').mod('has-calendar', 'yes').elem('box').content()(function() {
    return [
        applyNext(), {
            elem: 'calendar'
        }
    ];
});

block('input').mod('readonly', 'yes').elem('control').attrs()(function() {
    return this.extend(applyNext(), {
        readonly: 'readonly'
    });
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/calendar/blocks-common/input/_has-calendar/input_has-calendar_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/calendar/blocks-common/input/__calendar/input__calendar.bemhtml.js */
// autogenerated from input__calendar.bemhtml
block('input').elem('calendar').tag()('i');

/* end: /Users/miripiruni/Documents/www/web4/contribs/calendar/blocks-common/input/__calendar/input__calendar.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/checkbox/checkbox.bemhtml.js */
// autogenerated from ../../../../libs/islands-components/common.blocks/checkbox/checkbox.bemhtml
block('checkbox')(
    tag()('span'),

    js()(function() {
        return this.extend({
            live: false
        }, this.ctx.js);
    }),

    def()(function() {
        var ctx = this.ctx,
            attrs = ctx.checkboxAttrs || {},
            id = attrs.id || this.generateId(),
            mods = ctx.mods || {};

        mods.theme = mods.theme || 'normal';
        return applyNext({
            _checkboxAttrs: attrs.id
                ? attrs
                : { id: 'id' + id },
            _labelId: 'label' + id,
            'ctx.mods': mods
        });
    }),

    content()(function() {
        return [{
                elem: 'box',
                tag: 'span',
                elemMods: (this.mods.checked === 'yes')
                    ? { checked: 'yes' }
                    : '',
                content: [
                    {
                        elem: 'control',
                        attrs: this.ctx.checkboxAttrs || {}
                    },
                    {
                        elem: 'tick',
                        tag: 'i'
                    }
                ]
            },
            this.ctx.content
        ];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/checkbox/checkbox.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/checkbox/__control/checkbox__control.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/checkbox/__control/checkbox__control.bemhtml
block('checkbox').elem('control')(
    tag()('input'),

    attrs()(function() {
        var a = this.ctx.attrs || {};

        a['id'] = this._checkboxAttrs.id;
        a.type = 'checkbox';
        a.autocomplete = 'off';

        this.mods.disabled && (a.disabled = 'disabled');
        this.mods.checked == 'yes' && (a.checked = 'checked');

        a['aria-labelledby'] = this._labelId;

        return a;
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/checkbox/__control/checkbox__control.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/check-button/check-button.bemhtml.js */
// autogenerated from ../../../../libs/islands-components/common.blocks/check-button/check-button.bemhtml
block('check-button')(
    js()(function() {
        return this.extend({
            live: false
        }, this.ctx.js);
    }),

    def()(function() {
        var ctx = this.ctx,
            id = (ctx.controlAttrs || {}).id || this.generateId(),
            mods = ctx.mods || {};

        mods.theme = mods.theme || 'normal';

        return applyNext({
            _control: {
                elem: 'control',
                attrs: ctx.controlAttrs,
                id: id,
                labelledby: 'text' + id,
                name: ctx.name,
                tabindex: ctx.tabindex,
                checked: this.mods.checked,
                disabled: this.mods.disabled,
                value: (ctx.value || ctx.content)
            },
            'ctx.mods': mods
        });
    }),

    tag()('label'),

    attrs()(function() {
        return {
            'for': this._control.id
        };
    }),

    content()(function() {
        return [
            this._control, {
                elem: 'text',
                tag: 'span',
                content: this.ctx.content
            }
        ];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/check-button/check-button.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/check-button/__text/check-button__text.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/check-button/__text/check-button__text.bemhtml
block('check-button').elem('text').attrs()(function() {
    return {
        id: this._control.labelledby
    };
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/check-button/__text/check-button__text.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/check-button/__control/check-button__control.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/check-button/__control/check-button__control.bemhtml
block('check-button').elem('control')(
    tag()('input'),

    attrs()(function() {
        var ctx = this.ctx,
            a = {
                type: 'checkbox'
            },
            props = ['tabindex', 'name', 'value', 'id'],
            p;

        while (p = props.pop())
            ctx[p] && (a[p] = ctx[p]);

        ctx.checked && (a.checked = 'checked');
        ctx.disabled && (a.disabled = 'disabled');

        a['aria-labelledby'] = ctx.labelledby;

        return a;
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/check-button/__control/check-button__control.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-deskpad/check-button/__control/check-button__control.bemhtml.js */
// autogenerated from check-button__control.bemhtml
block('check-button').mod('input', 'no').elem('control').tag()(false);

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-deskpad/check-button/__control/check-button__control.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/select/select.bemhtml.js */
// autogenerated from ../../../../libs/islands-components/common.blocks/select/select.bemhtml
block('select')(
    def()(function() {
        var ctx = this.ctx,
            id = ctx.id || this.generateId();

        return applyNext({
            _controlAttrs: {
                id: id,
                name: ctx.name || id
            },
            _formSelect: {
                block: this.block,
                mods: this.mods,
                tabindex: ctx.tabindex
            }
        });
    }),

    js()(function() {
        return this.extend({
            live: false
        }, this.ctx.js);
    }),

    tag()('span'),

    elem('option').tag()('option'),

    elem('option-group').tag()('optgroup'),

    elem('text').tag()('span')
);

// Для `live`-инициализации ISLCOMPONENTS-1473
block('select').def()(function() {
    var ctx = this.ctx,
        isLive = (apply('js') || {}).live;

    if (isLive) {
        // filter возвращает массив
        var options = ctx.content.filter(function(entity) {
            return entity.elem === 'control';
        })[0].content;
        if (options.length) {
            // Возвращает установленный в BEMJSON `option` селекта.
            var getInitOption = function(options) {
                    var currentEntity,
                        result;

                    for (var i = 0; i < options.length; i++) {
                        currentEntity = options[i];

                        if (currentEntity.elem === 'option' && Object(currentEntity.attrs).selected) {
                            result = currentEntity;
                        } else if (currentEntity.elem === 'option-group') {
                            result = getInitOption(currentEntity.content);
                        }

                        if (result) {
                            break;
                        }
                    }

                    return result;
                },
                initOption = getInitOption(options);

            // Если в BEMJSON не установлен `option`, то по умолчанию должен быть выбран первый `option`
            // http://www.w3.org/TR/1999/REC-html401-19991224/interact/forms.html#h-17.6.1
            if (!initOption) {
                initOption = options[0];

                if (initOption.elem === 'option-group') {
                    initOption = initOption.content[0];
                }
            }

            return applyNext({
                _initValue: initOption.attrs.value,
                _initText: initOption.content
            });
        }
    }
    return applyNext();
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/select/select.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/select/select.bemhtml.js */
// autogenerated from select.bemhtml
block('select').elem('list').attrs()(function() {
    var base = applyNext() || {};
    base.role = 'select';
    return base;
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/select/select.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/select/__item/select__item.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/select/__item/select__item.bemhtml
block('select').elem('item').attrs()(function() {
    return {
        id: this.generateId() /* Атрибут нужен на клиенте. */
    };
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/select/__item/select__item.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/select/__item/select__item.bemhtml.js */
// autogenerated from select__item.bemhtml
block('select').elem('item').attrs()(function() {
    var base = applyNext() || {};
    base.role = 'option';
    return base;
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/select/__item/select__item.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/select/__item/_label/select__item_label_yes.bemhtml.js */
// autogenerated from ../../../../../../libs/islands-components/common.blocks/select/__item/_label/select__item_label_yes.bemhtml
block('select').elem('item').attrs()(function() {
    var a = applyNext() || {};

    if ((this.ctx.elemMods || {}).label === 'yes') {
        if (this._labelId) {
            a.id = this._labelId;
        }

        a['aria-hidden'] = true;
    }

    return a;
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/select/__item/_label/select__item_label_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/select/__button/select__button.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/select/__button/select__button.bemhtml
/**
 * select > button
 */
block('button').match(function() {
    return this._formSelect;
})(
    attrs()(function() {
        var a = applyNext() || {};

        a.role = 'listbox';
        a.type = 'button';
        a['aria-haspopup'] = true;
        a['aria-expanded'] = false;

        var tabindex = this._formSelect.tabindex;
        if (typeof tabindex !== 'undefined') { /* tabindex может быть равен 0 */
            a.tabindex = tabindex;
        }

        return a;
    }),

    def()(function() {
        // пробрасываем модификаторы темы и размера в кнопку
        var ctx = this.ctx,
            selectMods = this._formSelect.mods,
            tabindex = this._formSelect.tabindex,
            m = ctx.mods || {};

        m.arrow = 'down';

        selectMods.theme && (m.theme = selectMods.theme);
        selectMods.size && (m.size = selectMods.size);

        selectMods.disabled === 'yes' && (m.disabled = 'yes');

        ctx.mods = m;

        // Для `live`-инициализации ISLCOMPONENTS-1473
        if (this._initText) {
            ctx.content = this._initText;
        }

        return applyNext({
            'ctx._theme': true
        });
    }),

    mix()(function() {
        return [{
            block: this._formSelect.block,
            elem: 'button'
        }];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/select/__button/select__button.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/select/__control/select__control.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/select/__control/select__control.bemhtml
block('select').elem('control')(
    // Для `live`-инициализации ISLCOMPONENTS-1473
    match(function() {
        return this._initValue;
    }).def()(function() {
        var ctx = this.ctx;
        ctx.attrs = this.extend(ctx.attrs, {
            value: this._initValue
        });

        return applyNext();
    }),

    tag()('select'),

    attrs()(function() {
        var attrs = ['id', 'name', 'tabindex'],
            prop = {},
            p;

        while (p = attrs.pop()) {
            this._controlAttrs[p] && (prop[p] = this._controlAttrs[p])
        }

        this.mods.disabled === 'yes' && (prop.disabled = 'disabled')

        prop.tabindex = -1;
        prop['aria-hidden'] = true;

        return this.ctx.controlAttrs || prop;

    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/select/__control/select__control.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/advanced-search/blocks-deskpad/select/_multiple/select_multiple_yes.bemhtml.js */
// autogenerated from select_multiple_yes.bemhtml
block('select').mod('multiple', 'yes').elem('control').attrs()(function() {
    return this.extend(applyNext(), {
        multiple: 'multiple'
    });
})

/* end: /Users/miripiruni/Documents/www/web4/contribs/advanced-search/blocks-deskpad/select/_multiple/select_multiple_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/advanced-search/blocks-deskpad/select/_sideable/select_sideable_yes.bemhtml.js */
block('button').match(function() {
    return this._formSelect;
}).def()(function() {
    if (this._formSelect.mods.side) {
        this.ctx.mods || (this.ctx.mods = {});
        this.ctx.mods.side = this._formSelect.mods.side;
    }
    return applyNext();
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/advanced-search/blocks-deskpad/select/_sideable/select_sideable_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2/_theme/suggest2_theme_normal.bemhtml.js */
block('suggest2').mod('theme', 'normal').elem('content').tag()('ul');

/* end: /Users/miripiruni/Documents/www/web4/libs/islands-suggest/common.blocks/suggest2/_theme/suggest2_theme_normal.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2/_theme/suggest2_theme_normal.bemhtml.js */
// autogenerated from ../../../../../libs/islands-suggest/common.blocks/suggest2/_theme/suggest2_theme_normal.bemhtml
block('suggest2').mod('theme', 'normal').elem('content').tag()('ul');

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/suggest2/_theme/suggest2_theme_normal.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/button/_only-icon/button_only-icon_yes.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/button/_only-icon/button_only-icon_yes.bemhtml
block('button').mod('only-icon', 'yes').elem('text').content()(function() {
    return [
        '&#160;',
        this.ctx.content
    ];
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/button/_only-icon/button_only-icon_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/radiobox/radiobox.bemhtml.js */
// autogenerated from ../../../../libs/islands-components/common.blocks/radiobox/radiobox.bemhtml
block('radiobox')(
    def()(function() {
        var ctx = this.ctx,
            mods = this.extend({
                theme: 'normal'
            }, ctx.mods);

        return applyNext({
            'ctx.mods': mods,
            _disabled: mods.disabled,
            _name: this.ctx.name,
            _value: this.ctx.value
        });
    }),

    tag()('span'),

    js()(function() {
        return this.extend({
            live: false
        }, this.ctx.js);
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/radiobox/radiobox.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/radiobox/__radio/radiobox__radio.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/radiobox/__radio/radiobox__radio.bemhtml
block('radiobox').elem('radio')(
    def()(function() {
        var ctx = this.ctx,
            controlAttrs = this.extend({
                id: this.generateId(),
                type: 'radio',
                name: this._name
            }, ctx.controlAttrs),

            // value блока совпало с value в controlAttrs элемента radio
            isValuesMatch = controlAttrs.value !== undefined && controlAttrs.value === this._value;

        ctx.elemMods = this.extend({
            disabled: this._disabled,
            checked: isValuesMatch ? 'yes' : ''
        }, ctx.elemMods);

        if (ctx.elemMods.disabled === 'yes') {
            controlAttrs.disabled = 'disabled';
            controlAttrs.tabindex = -1;
        }

        if (ctx.elemMods.checked === 'yes') {
            controlAttrs.checked = 'checked';
        }

        return applyNext({
            _controlAttrs: controlAttrs
        });
    }),

    tag()('label'),

    attrs()(function() {
        return {
            'for': this._controlAttrs.id
        };
    }),

    content()(function() {
        return [{
                elem: 'box',
                tag: 'span',
                content: {
                    elem: 'control'
                }
            },
            applyNext()
        ];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/radiobox/__radio/radiobox__radio.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/radiobox/__control/radiobox__control.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/radiobox/__control/radiobox__control.bemhtml
block('radiobox').elem('control')(
    tag()('input'),
    attrs()(function() {
        return this._controlAttrs;
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/radiobox/__control/radiobox__control.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/radio-button/__radio/radio-button__radio.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/radio-button/__radio/radio-button__radio.bemhtml
block('radio-button').elem('radio')(
    def()(function() {
        // XXX: Переписать на this.elemMods после https://github.com/bem/bem-bl/pull/563
        if (!this.ctx.elemMods) {
            this.ctx.elemMods = {};
        }

        var elemMods = this.ctx.elemMods,
            radioButton = this._radioButton,

            // Если на всём блоке _disabled_yes.
            makeDisabled = radioButton.disabled,

            // По историческим причинам controlAttrs копируется, а не используется as is.
            controlAttrs = this.extend({}, this.ctx.controlAttrs),

            // value блока совпало с value контрола.
            valuesMatched = (controlAttrs.value !== undefined) && (controlAttrs.value === radioButton.value);

        if (valuesMatched) {
            elemMods.checked = 'yes';
            elemMods.pressed = 'yes';
        }

        // DEPRECATED.
        // По историческим причинам еще немножко вариативности.
        // Правильный путь – определять активный __radio через поле value у блока.
        if (elemMods.checked) {
            elemMods.pressed = 'yes';
        }

        if (makeDisabled) {
            elemMods.disabled = 'yes';
        }

        // DEPRECATED.
        // По историческим причинам оставлена возможность передавать side через
        // поле mods у элемента. Правильный путь передавать side через elemMods.
        var ctxModsSide = Object(this.ctx.mods).side;

        if (!elemMods.side) {
            if (ctxModsSide) {
                elemMods.side = ctxModsSide;
            } else {
                // `isFirst * 2 + isLast` приводит комбинации isFirst/isLast к индексу от 0 до 3.
                elemMods.side = ['', 'right', 'left', 'both'][this.isFirst() * 2 + this.isLast()];
            }
        }

        // DEPRECATED.
        // Ранее _next-for-pressed_yes использовался в стилистических целях для удаления левого бордера.
        // Сейчас это делается на чистом css. Логику про выставление модификатора нужно удалить в 4.x.
        if (this._nextForPressed) {
            elemMods['next-for-pressed'] = 'yes';
            this._nextForPressed = false;
        }

        // Флаг для следующего __radio о необходимости добавить _next-for-pressed_yes.
        this._nextForPressed = elemMods.checked;

        controlAttrs.checked = Boolean(elemMods.checked);
        controlAttrs.disabled = Boolean(elemMods.disabled);

        if (!controlAttrs.id) {
            controlAttrs.id = this.generateId();
        }

        return applyNext({
            _controlAttrs: controlAttrs
        });
    }),

    tag()('label'),

    attrs()(function() {
        return {
            for: this._controlAttrs.id
        };
    }),

    content()(function() {
        return [{
            elem: 'control'
        }, {
            elem: 'text',
            tag: 'span',
            content: this.ctx.content
        }];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/radio-button/__radio/radio-button__radio.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/radio-button/__control/radio-button__control.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/radio-button/__control/radio-button__control.bemhtml
block('radio-button').elem('control')(
    tag()('input'),

    attrs()(function() {

        var controlAttrs = this._controlAttrs;

        if (controlAttrs.disabled) {
            controlAttrs.disabled = 'disabled';
            controlAttrs.tabindex = '-1';
        } else {
            delete controlAttrs.disabled;
        }

        if (controlAttrs.checked) {
            controlAttrs.checked = 'checked';
        } else {
            delete controlAttrs.checked;
        }

        controlAttrs.type = 'radio';
        controlAttrs.name = this._radioButton.name; // Прокидываем поле name из блока.

        return controlAttrs;
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/radio-button/__control/radio-button__control.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/radio-button/radio-button.bemhtml.js */
// autogenerated from ../../../../libs/islands-components/common.blocks/radio-button/radio-button.bemhtml
block('radio-button')(
    def()(function() {
        var ctx = this.ctx;

        if (!ctx.mods) {
            ctx.mods = {};
        }

        // Для добавления модификатора используем именно this.ctx.mods, а не this.mods.
        // Если использовать this.mods, то, при отсутствии модификаторов в BEMJSON, в
        // результирующий HTML не поставится соответствующий класс.
        // TODO: Переписать на this.mods после https://github.com/bem/bem-bl/pull/563.
        if (!ctx.mods.theme) {
            ctx.mods.theme = 'normal';
        }

        // Передаем "в глубь" содержимое полей name и value,
        // а также указание о том нужно ли задизейблить все элементы.
        // Поля используются в шаблонах __radio и __control.
        return applyNext({
            _radioButton: {
                name: ctx.name,
                value: ctx.value,
                disabled: Boolean(ctx.mods.disabled)
            }
        });
    }),

    tag()('span'),

    js()(function() {
        return this.extend({
            live: false
        }, this.ctx.js);
    }),

    content()(function() {
        var content = this.ctx.content,
            isSimple = this.isSimple;
        return Array.isArray(content) ? content.filter(function(e) {
            return !isSimple(e) && !!e;
        }) : content;
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/radio-button/radio-button.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/blogs/blocks-deskpad/blogs/__title/blogs__title.bemhtml.js */
// autogenerated from blogs__title.bemhtml
block('blogs').elem('title').elemMod('type', 'twitter').content()(function() {
    return [{
        block: 'link',
        mix: [{
            block: 'blogs',
            elem: 'title-link'
        }],
        url: this.ctx.status,
        content: this.ctx.name
    }];
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/blogs/blocks-deskpad/blogs/__title/blogs__title.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-deskpad/buy-tickets-button/buy-tickets-button.bemhtml.js */
block('buy-tickets-button')(
    js()(true),
    content()(function() {
        var ctx = this.ctx;

        return {
            tag: 'y:ticket',
            attrs: {
                'data-template': ctx.template,
                'data-client-key': ctx.clientKey,
                'data-region-id': ctx.regionId,
                'data-venue-id': ctx.venueId,
                'data-venue-tag': ctx.venueTag,
                'data-event-id': ctx.eventId
            }
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-deskpad/buy-tickets-button/buy-tickets-button.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-common/cut2/cut2.bemhtml.js */
block('cut2')(
    js()(true),
    tag()('span'),
    elem('visible')(
        tag()('span')
    ),
    elem('invisible')(
        tag()('span')
    ),
    elem('more')(
        tag()('span')
    )
);

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-common/cut2/cut2.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/search/search.bemhtml.js */
block('search')(
    tag()('form'),

    mode('get-label')(function() {
        return this.ctx.label ? this.ctx.label : 'search-for'
    }),

    attrs()(function() {
        return {
            action: this.ctx.action || '/',
            role: 'search',
            'aria-label': apply('get-label')
        };
    }),

    content()(function() {
        return {
            elem: 'table',
            content: this.ctx.content
        };
    }),

    match(function() {
        return this._mode === 'lego-label';
    })(undefined),

    match(function() {
        return this._mode === 'lego-input';
    })(function() {
        return {
            elem: 'input',
            content: this.ctx.content
        };
    }),

    match(function() {
        return !this.ctx.content;
    }).content()(function() {
        var input = this.ctx.input,
            len = Array.isArray(input) ? input.length : (input = [input], 1),
            row = [],
            i = 0,
            item;

        while (i < len) {
            item = input[i++];
            item &&
                row.push([
                    apply({
                        _mode: 'lego-label',
                        ctx: item,
                        position: i
                    }),
                    apply({
                        _mode: 'lego-input',
                        ctx: item
                    })
                ]);
        }

        this.ctx.button && row.push({
            elem: 'button',
            content: this.ctx.button.content
        });

        row = {
            elem: 'table',
            content: [{
                elem: 'row',
                content: row
            }]
        };

        item && row.content.push({
            elem: 'row',
            content: item
        });

        if (this.ctx.hidden) {
            row = [row, this.ctx.hidden];
        }

        return row;
    }),

    elem('table').tag()('table'),

    elem('row')(
        tag()('tr'),
        bem()(false)),

    elem('cell').tag()('td')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/search/search.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/button2/button2.bemhtml.js */
// autogenerated from ../../../../libs/islands-components/common.blocks/button2/button2.bemhtml
block('button2')(
    def()(function() {
        // В Opera 12 ссылки по умолчанию не участвуют в taborder. В других браузерах участвуют.
        // В качестве нормализации по дефолту выставляем всем кнопкам tabindex:0.
        if (!this.ctx.hasOwnProperty('tabindex')) {
            this.ctx.tabindex = '0';
        }

        return applyNext();
    }),

    tag()('button'),

    js()(function() {
        return {
            // Блок control использует параметр _tabindex при манипуляциях с _disabled.
            _tabindex: this.ctx.tabindex
        };
    }),

    attrs()(function() {
        var ctx = this.ctx,
            isDisabled = Boolean(this.mods.disabled);

        return {
            'type': 'button', // По умолчанию браузеры выставляют у <button> тип submit.
            'id': ctx.id,
            'title': ctx.title,
            'name': ctx.name,
            'value': ctx.val,
            'tabindex': isDisabled ? undefined : ctx.tabindex,
            'disabled': isDisabled || undefined,
            'aria-disabled': isDisabled || undefined
        };
    }),

    // Порядок важен для правильного применения стилей.
    // Элементы icon должны идти раньше, чем text.
    match(function() { return !this.ctx.content; }).content()(function() {
        return [
            this.ctx.icon && {
                elem: 'icon',
                icon: this.ctx.icon
            },
            this.ctx.iconLeft && {
                elem: 'icon',
                elemMods: {
                    side: 'left'
                },
                icon: this.ctx.iconLeft
            },
            this.ctx.iconRight && {
                elem: 'icon',
                elemMods: {
                    side: 'right'
                },
                icon: this.ctx.iconRight
            },
            // Текст может быть пустой строкой, поэтому hasOwnProperty.
            this.ctx.hasOwnProperty('text') && (this.isSimple(this.ctx.text) ? {
                elem: 'text',
                content: this.xmlEscape(this.ctx.text)
            } : this.extend(this.ctx.text, {
                elem: 'text'
            }))
        ].filter(Boolean); // Удаляем все undefined в массиве.
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/button2/button2.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/button2/__text/button2__text.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/button2/__text/button2__text.bemhtml
block('button2').elem('text').tag()('span');

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/button2/__text/button2__text.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/button2/_type/button2_type_link.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/button2/_type/button2_type_link.bemhtml
block('button2').mod('type', 'link')(
    tag()('a'),

    attrs()(function() {
        return this.extend(applyNext(), {
            target: this.ctx.target,
            href: this.mods.disabled ? undefined : this.ctx.url,
            type: undefined // Убираем type:button.
        });
    }),

    js()(function() {
        return this.extend(applyNext(), {
            _url: this.ctx.url
        });
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/button2/_type/button2_type_link.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-desktop/distro/__icon/distro__icon.bemhtml.js */
// autogenerated from distro__icon.bemhtml
block('distro').elem('icon').attrs()(function() {
    return {
        style: 'background-image: url(' + this.ctx.image + ');'
    };
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-desktop/distro/__icon/distro__icon.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-desktop/footer/_distro/footer_distro_yes.bemhtml.js */
block('footer').mod('age-warning', 'yes').elem('line').elemMod('last', 'yes').content()(function() {
    return [
        this.ctx.content, {
            elem: 'age-warning',
            content: this.ctx.age || '0+'
        }
    ];
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-desktop/footer/_distro/footer_distro_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/dropdown/dropdown.bemhtml.js */
// autogenerated from ../../../../libs/islands-components/common.blocks/dropdown/dropdown.bemhtml
block('dropdown')(
    js()(true),

    mix()([{
        mods: {
            'action': 'closed'
        }
    }]),

    elem('popup').replace()(function() {
        var ctx = this.ctx,
            mix = [{
                block: 'dropdown',
                elem: 'popup'
            }];

        ctx.mix && (mix = mix.concat(ctx.mix));

        return {
            block: 'popup',
            mix: mix,
            mods: ctx.mods,
            underMods: ctx.underMods,
            attrs: ctx.attrs,
            js: ctx.js,
            content: [
                {
                    elem: 'tail'
                },
                {
                    elem: 'content',
                    content: ctx.content
                }
            ]
        }
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/dropdown/dropdown.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/dropdown-menu/dropdown-menu.bemhtml.js */
block('dropdown-menu')(
    js()(true),

    def()(function() {
        var ctx = this.ctx,
            mods = ctx.mods || (ctx.mods = {});

        mods.size || (mods.size = 'm');
        mods.theme || (mods.theme = 'ffffff');

        this.dropdownMenuSize = mods.size;
        this._inDropdownMenu = true;

        return applyNext();
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/dropdown-menu/dropdown-menu.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/dropdown-menu/__menu/dropdown-menu__menu.bemhtml.js */
block('dropdown-menu').elem('menu').def()(function() {
    var ctx = this.ctx,
        type = ctx.type || 'vert',
        menuMods = ctx.mods || {};

    menuMods.theme || (menuMods.theme = 'ffffff');

    return applyCtx({
        block: 'b-menu-' + type,
        mix: (ctx.mix || []).concat({
            block: 'dropdown-menu',
            elem: 'menu',
            mods: menuMods
        }),
        title: ctx.title,
        content: ctx.content
    });
});

block('b-menu-vert').match(function() { return this._inDropdownMenu; })(
    attrs()({role: 'menu'}),

    elem('item').attrs()({role: 'menuitem'})
);

block('b-menu-horiz').match(function() { return this._inDropdownMenu; })(
    attrs()({role: 'menu'}),

    elem('item').attrs()({role: 'menuitem'})
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/dropdown-menu/__menu/dropdown-menu__menu.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/dropdown-menu/__popup/dropdown-menu__popup.bemhtml.js */
block('dropdown-menu').elem('popup').def()(function() {
    var ctx = this.ctx;

    return applyCtx({
        block: 'dropdown',
        elem: 'popup',
        js: this.ctx.js,
        mix: (ctx.mix || []).concat({
            block: 'dropdown-menu',
            elem: 'popup',
            mods: this.extend({ size: this.dropdownMenuSize }, ctx.mods)
        }),
        attrs: ctx.attrs,
        content: {
            block: 'dropdown-menu',
            elem: 'menu',
            title: ctx.menuTitle,
            type: ctx.type,
            mods: ctx.menuMods,
            mix: ctx.menuMix,
            content: ctx.content
        }
    });
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/dropdown-menu/__popup/dropdown-menu__popup.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/dropdown-menu/__switcher/dropdown-menu__switcher.bemhtml.js */
block('dropdown-menu').elem('switcher').def()(function() {
    var ctx = this.ctx.content;

    ctx.mix = (ctx.mix || []).concat([
        {
            block: 'dropdown-menu',
            elem: 'switcher'
        }
    ]);

    return applyCtx(ctx);
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/dropdown-menu/__switcher/dropdown-menu__switcher.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-desktop/b-menu-horiz/b-menu-horiz.bemhtml.js */
block('b-menu-horiz').match(function() {
    return this.mods;
})(
    js()(true),

    elem('item').def()(function() {
        return applyNext(
            {
                position: this.position - 1,
                ctx: {
                    elem: 'layout-unit',
                    content: this.ctx
                }
            }
        );
    }),

    elem('layout-unit').mix()(function() {
        var mix = [];

        this.isFirst() && mix.push({
            elemMods: {
                position: 'first'
            }
        });
        this.isLast() && mix.push({
            elemMods: {
                position: 'last'
            }
        });

        return mix;
    }),

    elem('item-selector').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-desktop/b-menu-horiz/b-menu-horiz.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/checkbox/__label/checkbox__label.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/checkbox/__label/checkbox__label.bemhtml
block('checkbox').elem('label')(
    tag()('label'),

    attrs()(function() {
        var a = this.ctx.attrs || {};

        a['for'] = this._checkboxAttrs.id;

        a['id'] = this._labelId;
        a['aria-hidden'] = true;

        return a;
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/checkbox/__label/checkbox__label.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-desktop/feedback/feedback.bemhtml.js */
block('feedback')(
    def()(function() {
        var content = apply('content');

        return applyCtx({
            block: 'popup',
            js: {
                top: '50%'
            },
            mix: { block: 'feedback', js: this.ctx.js },
            mods: {
                type: 'modal',
                position: 'fixed',
                behaviour: 'scrollable',
                'has-close': 'yes'
            },
            underMods: { type: 'paranja' },
            content: {
                elem: 'content',
                content: content
            }
        })
    }),

    content()(function() {
        return [{
            elem: 'complaint',
            content: [
                [{
                    type: 'default',
                    text: 'Пожаловаться'
                }, {
                    type: 'images',
                    text: 'Пожаловаться на картинки'
                }, {
                    type: 'video',
                    text: 'Пожаловаться на видео'
                }, {
                    type: 'fact',
                    text: 'Что не так с подсказкой?'
                }, {
                    type: 'entity',
                    text: 'Что не так с карточкой объекта?'
                }].map(function(item) {
                    return {
                        block: 'feedback',
                        elem: 'title',
                        elemMods: {
                            type: item.type
                        },
                        content: item.text
                    };
                }), {
                    block: 'radiobox',
                    mods: {
                        size: 'm'
                    },
                    name: 'complaint-query',
                    value: 'yes',
                    content: [{
                        elem: 'radio',
                        controlAttrs: {
                            value: 'no'
                        },
                        content: 'Пожаловаться на этот результат'
                    }, {
                        elem: 'radio',
                        controlAttrs: {
                            value: 'yes'
                        },
                        content: 'Пожаловаться на все страницу'
                    }]
                }, {
                    block: 'feedback',
                    elem: 'sub-title',
                    content: 'Причина жалобы'
                }, {
                    block: 'checkbox-group',
                    content: [{
                            val: 'norelevance',
                            content: 'Несоответствие запросу'
                        },

                        {
                            val: 'revolting',
                            content: [{
                                type: 'default',
                                text: 'Шокирующая или неприятная информация'
                            }, {
                                type: 'images',
                                text: (this.ctx.tld === 'com.tr') ?
                                     'Шокирующий / Неприличный контент' :
                                    'Шокирующие или неприятные картинки'
                            }, {
                                type: 'video',
                                text: (this.ctx.tld === 'com.tr') ?
                                    'Шокирующий / Неприличный контент' :
                                    'Шокирующее или неприятное видео'
                            }]
                        },

                        {
                            val: 'porno',
                            content: 'Порнография'
                        },

                        {
                            val: 'wrong',
                            content: 'Подсказка не соответствует запросу'
                        },

                        {
                            val: 'bad_avatar',
                            content: [
                                {
                                    plural: 'false',
                                    text: 'Картинка не подходит'
                                },

                                {
                                    plural: 'true',
                                    text: 'Картинки не подходят'
                                }
                            ]
                        },

                        {
                            val: 'bad_url',
                            content: 'Ссылка неправильная'
                        },

                        {
                            val: 'bad_description',
                            content:  'Ошибка в описании'
                        },

                        {
                            val: 'bad_facts',
                            content: 'Ошибка в фактах под описанием'
                        },

                        {
                            val: 'bad_lists',
                            content: 'Неправильные ссылки'
                        },

                        {
                            val: 'other',
                            content: 'Другое'
                        },

                        {
                            val: 'inaccurate',
                            content: 'В подсказке есть ошибки'
                        }
                    ].map(function(item) {
                        return {
                            block: 'checkbox',
                            mods: {
                                size: 'm'
                            },
                            mix: {
                                block: 'feedback',
                                elem: 'checkbox',
                                mods: {
                                    reason: item.val.replace('_', '-')
                                }
                            },
                            checkboxAttrs: {
                                name: 'reason-complaint',
                                value: item.val
                            },
                            content: item.content.map ? item.content.map(function(label) {
                                return {
                                    elem: 'label',
                                    mix: {
                                        block: 'feedback',
                                        elem: 'label',
                                        elemMods: {
                                            type: label.type,
                                            plural: label.plural
                                        }
                                    },
                                    content: label.text
                                };
                            }) : {
                                elem: 'label',
                                content: item.content
                            }
                        };
                    })
                }, {
                    block: 'button',
                    mods: {
                        size: 'm',
                        disabled: 'yes',
                        theme: 'action',
                        type: 'submit'
                    },
                    content: 'Пожаловаться'
                }
            ]
        }, {
            elem: 'result',
            content: [{
                block: 'feedback',
                elem: 'result-title',
                content: 'Спасибо, что помогаете делать Яндекс лучше!'
            }, {
                block: 'feedback',
                elem: 'thanks-text',
                content: 'Ваш отзыв будет использован алгоритмами Поиска.'
            }, {
                block: 'button',
                mods: {
                    size: 'm',
                    theme: 'action',
                    type: 'close'
                },
                content: 'Вернуться на Яндекс'
            }]
        }];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-desktop/feedback/feedback.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/popup/_wrapped/popup_wrapped_yes.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/popup/_wrapped/popup_wrapped_yes.bemhtml
block('popup').mod('wrapped', 'yes').content()(function() {
    return [
        applyNext(), {
            elem: 'wrapper',
            elemMods: this.ctx.wrapperMods
        }
    ];
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/popup/_wrapped/popup_wrapped_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/popup/_behaviour/popup_behaviour_scrollable.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/popup/_behaviour/popup_behaviour_scrollable.bemhtml
block('popup').mod('behaviour', 'scrollable').def()(function() {
    this.ctx.mods.wrapped = 'yes';
    this.ctx.mods['body-scroll'] = 'no';
    this.ctx.wrapperMods = {
        behaviour: 'scrollable'
    };

    return applyNext();
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/popup/_behaviour/popup_behaviour_scrollable.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/footer-stripe/footer-stripe.bemhtml.js */
// autogenerated from footer-stripe.bemhtml
block('footer-stripe').content()(function() {
    return [{
        block: 'button',
        mods: {
            theme: 'clear'
        },
        mix: {
            block: this.block,
            elem: 'close'
        },
        content: this.ctx.closeText && {
            block: this.block,
            elem: 'close-text',
            tag: 'span',
            content: this.ctx.closeText + ' '
        },
        counter: this.ctx.closeCounter
    }, {
        elem: 'content',
        content: this.ctx.content
    }];
});

block('footer-stripe').elem('text').attrs()(function() {
    return {
        onmousedown: this.ctx.counter
    };
})

block('footer-stripe').elem('agreement-link')(
    tag()('a'),
    attrs()(function() {
        return {
            href: this.ctx.url,
            target: '_blank',
            onmousedown: this.ctx.counter
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/footer-stripe/footer-stripe.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tooltip/tooltip.bemhtml.js */
block('tooltip').def()(function() {
    var ctx = this.ctx,
        mods = this.mods,
        theme = mods.theme,
        popupMods = {
            adaptive: 'yes',
            autoclosable: mods.autoclosable || 'no',
            theme: theme
        },
        tooltipJs = apply('js');

    tooltipJs = (tooltipJs ? this.extend(tooltipJs, ctx.js === 'true' ? {} : ctx.js) : ctx.js) || {};

    var to = tooltipJs.to && [].concat(tooltipJs.to);
    // NOTE: offset в попапе высчитывается в противоположную сторону от направления открытия;
    // дополнительно закладываем отступ равный высоте хвостика
    var offset = -(tooltipJs.offset || 0) - (tooltipJs.tailHeight || 0),
        popupJs = {
            // предпочтительные направления открытия попапа c отступами
            directions: (to || ['right', 'bottom', 'top', 'left']).map(function(dir) {
                return {
                    to: dir,
                    offset: offset
                };
            })
        };

    // NOTE: applyCtx не применяет шаблоны на блоки вложенные друг в друга (исправлено в bem-xjst@0.6.x)
    return applyCtx({
            block: 'popup',
            mods: popupMods,
            js: popupJs,
            mix: [{
                block: this.block,
                mods: mods,
                js: tooltipJs
            }].concat(ctx.mix),
            content: [
                // NOTE: не используем popup__tail из-за сложностей в переопределений каскадов в CSS
                {
                    block: this.block,
                    elem: 'tail'
                }, {
                    elem: 'content',
                    content: ctx.content
                }
            ]
        }
    );
});

// шаблон на popup вложенный в (примиксованный к) tooltip
block('popup').match(function() {
    return this._isInTooltip;
}).def()(function() {
    // удаляем гард тултипа, чтобы применились шаблоны на вложенные блоки
    delete this._isInTooltip;
    return applyNext();
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tooltip/tooltip.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tooltip/_size/tooltip_size_xs.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/tooltip/_size/tooltip_size_xs.bemhtml
block('tooltip').mod('size', 'xs').js()(function() {
    return this.extend(applyNext(), {
        tailWidth: 14,
        tailHeight: 7
    });
})

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tooltip/_size/tooltip_size_xs.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/forum/forum.bemhtml.js */
// autogenerated from forum.bemhtml
block('forum')(
    elem('info').tag()('span'),
    elem('text')(
        tag()('span'),
        content()(function() {
            return [
                this.ctx.leadingEllipsis && '&hellip;',
                this.ctx.content,
                this.ctx.trailingEllipsis && '&hellip;'
            ];
        })
    )
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/forum/forum.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/geolocation-form/geolocation-form.bemhtml.js */
block('geolocation-form')(
    tag()('form'),

    js()(function() {
        return {
            sk: this.ctx.sk,
            lr: this.ctx.lr
        };
    }),

    mix()([{
        block: 'suggest2-form',
        js: {
            popupName: 'popup2'
        }
    }]),

    attrs()({
        action: '/'
    }),

    content()(function() {
        return {
            block: 'suggest2-form',
            elem: 'node',
            content: [{
                block: 'input',
                mix: [{
                    block: 'geolocation-form',
                    elem: 'input'
                }, {
                    block: 'suggest2-form',
                    elem: 'input'
                }],
                mods: {
                    size: 's',
                    width: 'content'
                },
                placeholder: 'Текст, отображаемый в поле формы до начала ввода. https://nda.ya.ru/3RL5os',
                value: this.ctx.currentRegion,
                content: {
                    elem: 'control',
                    attrs: {
                        tabindex: '-1'
                    }
                }
            }, {
                block: 'tooltip',
                js: {
                    to: 'bottom'
                },
                mix: {
                    block: 'geolocation-form',
                    elem: 'hint'
                },
                mods: {
                    size: 's',
                    theme: 'error'
                },
                content: '&nbsp;'
            }, {
                block: 'button2',
                mix: [{
                    block: 'geolocation-form',
                    elem: 'button'
                }, {
                    block: 'suggest2-form',
                    elem: 'button'
                }],
                counter: this.ctx.submitCounter,
                mods: {
                    size: 's',
                    theme: 'normal',
                    pin: 'clear-round',
                    type: 'submit'
                },
                text: 'Текст кнопки формы. https://nda.ya.ru/3RL5os'
            }, {
                block: 'popup2',
                mods: {
                    target: 'anchor',
                    autoclosable: 'yes',
                    theme: 'clear'
                },
                mix: [
                    {
                        block: 'suggest2',
                        mods: {
                            theme: 'normal',
                            size: 's'
                        },
                        js: {
                            url: this.ctx.suggestUrl,
                            data: {
                                count: this.ctx.suggestCount
                            },
                            submitBySelect: true
                        }
                    },
                    { block: 'geolocation-form', elem: 'suggest' }
                ],
                directions: ['bottom-left']
            }]
        };
    }))

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/geolocation-form/geolocation-form.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/button2/_type/button2_type_submit.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/button2/_type/button2_type_submit.bemhtml
block('button2').mod('type', 'submit').attrs()(function() {
    return this.extend(applyNext(), {
        type: 'submit'
    });
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/button2/_type/button2_type_submit.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tooltip/_size/tooltip_size_s.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/tooltip/_size/tooltip_size_s.bemhtml
block('tooltip').mod('size', 's').js()(function() {
    return this.extend(applyNext(), {
        tailWidth: 14,
        tailHeight: 7
    });
})

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tooltip/_size/tooltip_size_s.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/icon/icon.bemhtml.js */
// autogenerated from ../../../../libs/islands-components/common.blocks/icon/icon.bemhtml
block('icon')(
    tag()('i'),
    attrs()(function() {
        return {
            'style': this.ctx.url && ('background-image:url(\'' + this.ctx.url + '\');'),
            'aria-hidden': 'true'
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/icon/icon.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/geolocation-search-result/geolocation-search-result.bemhtml.js */
block('geolocation-search-result')(
    tag()('span'),

    content()(function() {
        return [
            applyNext(),
            {
                block: 'popup2',
                mix: {
                    block: 'geolocation-search-result',
                    elem: 'popup'
                },
                mods: {
                    autoclosable: 'yes',
                    theme: 'normal',
                    target: 'anchor'
                },
                directions: ['top-left']
            },
            {
                block: 'geolocation-search-result',
                elem: 'teaser-target'
            },
            {
                block: 'tooltip',
                mix: {
                    block: 'geolocation-search-result',
                    elem: 'teaser'
                },
                mods: {
                    size: 'l',
                    theme: 'success'
                },
                js: { to: 'bottom' },
                content: this.ctx.teaser
            }
        ];
    }),

    elem('locate-text').tag()('span'),

    elem('locate-button-icon').tag()('span'),

    elem('locate-button').def()(function() {
        return applyCtx({
            block: 'link',
            mods: {
                pseudo: 'yes'
            },
            mix: {
                block: 'geolocation-search-result',
                elem: 'locate-button'
            },
            counter: this.ctx.counter,
            content: [
                {
                    block: 'geolocation-search-result',
                    elem: 'locate-button-icon'
                },
                {
                    block: 'spin2',
                    mods: { size: 'xs' },
                    mix: {
                        block: 'geolocation-search-result',
                        elem: 'locate-button-spin'
                    }
                }
            ]
        });
    }),

    elem('label').def()(function() {
        return applyCtx({
            block: 'link',
            mix: {
                block: 'geolocation-search-result',
                elem: 'label'
            },
            content: this.ctx.content,
            counter: this.ctx.counter,
            url: this.ctx.url
        });
    }))

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/geolocation-search-result/geolocation-search-result.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tooltip/_size/tooltip_size_l.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/tooltip/_size/tooltip_size_l.bemhtml
block('tooltip').mod('size', 'l').js()(function() {
    return this.extend(applyNext(), {
        tailWidth: 24,
        tailHeight: 12
    });
})

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tooltip/_size/tooltip_size_l.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/modal/modal.bemhtml.js */
// autogenerated from ../../../../libs/islands-components/common.blocks/modal/modal.bemhtml
block('modal')(
    js()(true),

    mix()(function() {
        return {
            block: 'popup2',
            // z-index в модальном окне будут начинаться от (zIndexGroupLevel + 1) * 1000
            js: {
                zIndexGroupLevel: this.ctx.zIndexGroupLevel || 20
            },
            mods: {
                autoclosable: this.mods.autoclosable
            }
        };
    }),

    content()(function() {
        return {
            elem: 'table',
            content: {
                elem: 'cell',
                content: {
                    elem: 'content',
                    content: this.ctx.content
                }
            }
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/modal/modal.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/head-stripe/head-stripe.bemhtml.js */
// autogenerated from head-stripe.bemhtml
block('head-stripe').elem('x').tag()('span');

block('head-stripe').elem('agreement').tag()('span');

block('head-stripe').elem('image')(
    tag()('img'),
    attrs()(function() {
        return {
            src: this.ctx.src,
            alt: this.ctx.alt
        };
    })
);

block('head-stripe').content()(function() {
    var ctx = this.ctx;

    return [
        ctx.bgImage && {
            elem: 'elements',
            content: {
                elem: 'image',
                src: ctx.bgImage
            }
        }, {
            elem: 'table',
            content: [
                ctx.isPromo && {
                    elem: 'col',
                    mods: {
                        age: 'restriction'
                    },
                    content: {
                        elem: 'age',
                        content: ctx.ageRestriction
                    }
                }, {
                    elem: 'col',
                    mods: {
                        text: '1'
                    },
                    content: ctx.text1
                }, {
                    elem: 'col',
                    mods: {
                        text: '2'
                    },
                    content: ctx.text2
                }, {
                    elem: 'col',
                    mods: {
                        close: 'yes'
                    },
                    content: [
                        '&nbsp;', {
                            block: 'link',
                            mix: {
                                block: 'head-stripe',
                                elem: 'close'
                            },
                            content: [
                                ctx.close && {
                                    block: 'head-stripe',
                                    elem: 'close-text',
                                    content: ctx.close
                                }, {
                                    block: 'head-stripe',
                                    elem: 'x',
                                    content: (ctx.close ? '&nbsp;' : '') + '×'
                                }
                            ],
                            counter: ctx.closeCounter
                        }
                    ]
                }
            ]
        }
    ]
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/head-stripe/head-stripe.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/check-button/_pseudo/check-button_pseudo_yes.bemhtml.js */
block('check-button').mod('pseudo', 'yes')(
    def().match(function() { return !(this.ctx.mods || {}).theme; })(function() {
        return applyNext({
            'ctx.mods': this.extend(this.ctx.mods || {}, {
                theme: 'pseudo'
            })
        });
    }),

    elem('control').attrs()(function() {

        var a = applyNext();

        a.value = '';

        return a;
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/check-button/_pseudo/check-button_pseudo_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/internal/blocks-common/internal-table/internal-table.bemhtml.js */
// autogenerated from internal-table.bemhtml
block('internal-table')(
    tag()('table'),
    elem('row').tag()('tr'),
    elem('head').tag()('td'),
    elem('cell').tag()('td'),
    elem('params-count').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/internal/blocks-common/internal-table/internal-table.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/input/_type/input_type_textarea.bemhtml.js */
block('input').mod('type', 'textarea').elem('control')(
    tag()('textarea'),

    attrs().match(function() {
        return !this._baseAttrsApplyed;
    })(function() {
        var a = apply({
            _value: null,
            _baseAttrsApplyed: true
        });
        return this.extend(a, {
            rows: 10,
            cols: 10
        });
    }),

    content()(function() {
        return this.xmlEscape(this._value || this.ctx.content || '');
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/input/_type/input_type_textarea.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-debugger/i-debugger.bemhtml.js */
// autogenerated from i-debugger.bemhtml
block('i-debugger')(

    elem('name').content()
    (function() {
        return this.ctx.content + ': ';
    }),


    elem('val').elemMod('type', 'array').content()
    (function() {
        return [{
                elem: 'brace',
                content: '['
            },
            this.ctx.content, {
                elem: 'brace',
                content: ']'
            }
        ];
    }),


    elem('val').elemMod('type', 'object').content()
    (function() {
        return [{
                elem: 'brace',
                content: '{'
            },
            this.ctx.content, {
                elem: 'brace',
                content: '}'
            }
        ];
    }))

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-debugger/i-debugger.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/internal-stripe/internal-stripe.bemhtml.js */
// autogenerated from internal-stripe.bemhtml
block('internal-stripe').elem('content').attrs()(function() {
    return {
        onmousedown: this.ctx.counter
    };
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/internal-stripe/internal-stripe.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-common/key-value/key-value.bemhtml.js */
// autogenerated from key-value.bemhtml
block('key-value')(
    tag()('ul'),
    elem('item').tag()('li'),
    elem('item-title').tag()('span'),
    elem('item-value').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-common/key-value/key-value.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-common/key-value/_layout/key-value_layout_toc.bemhtml.js */
block('key-value').mod('layout', 'toc')(
    elem('item-value').wrap()(function() {
        return {
            block: 'key-value',
            elem: 'item-value-wrap',
            content: this.ctx
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-common/key-value/_layout/key-value_layout_toc.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tumbler/tumbler.bemhtml.js */
block('tumbler')(
    tag()('span'),

    js()(function() {
        return this.extend({live: false}, this.ctx.js);
    }),

    def()(
        match(function() { return true; })(function() {
            var ctx = this.ctx,
                id = this.generateId(),
                leftId = 'left' + id,
                rightId = 'right' + id,
                sideId = null;

            // В качестве нормализации приводим content к массиву.
            ctx.content = (ctx.content === undefined) ? [] : [].concat(ctx.content);

            if(ctx.content.length) {
                sideId = ctx.content[0].side === 'left' ? leftId : rightId;
            }

            return applyNext({
                _name: ctx.name || (ctx.name = id),
                _leftId: leftId,
                _rightId: rightId,
                _sideId: sideId
            });
        }),

        match(function() { return !(this.ctx.mods || {}).theme; })(function() {
            return applyNext({'ctx.mods': this.extend((this.ctx.mods || {}), {theme: 'normal'})});
        }),

        match(function() { return (this.ctx.mods || {}).checked === 'yes'; })(function() {
            return applyNext({_checked: 'checked'});
        }),

        match(function() { return (this.ctx.mods || {}).disabled === 'yes'; })(function() {
            return applyNext({_disabled: 'disabled'});
        })
    ),

    content().match(function() { return this.ctx.content.length === 1; })(function() {
        var content = this.ctx.content;

        return (content[0].side !== 'left')
            ? [{elem: 'option', side: 'left'}, content]
            : [content, {elem: 'option', side: 'right'}];
    }),

    content().match(function() { return this.ctx.content.length === 0; })(function() {
        return [
            {elem: 'option', side: 'left'},
            {elem: 'option', side: 'right'}
        ];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tumbler/tumbler.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tumbler/__box/tumbler__box.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/tumbler/__box/tumbler__box.bemhtml
block('tumbler').elem('box')(
    tag()('span'),

    content()(function() {
        return [{
            elem: 'sticker',
            elemMods: {
                position: 'left'
            },
            content: {
                elem: 'sticker-label',
                content:  'on'
            }
        }, {
            elem: 'sticker',
            elemMods: {
                position: 'right'
            },
            content: {
                elem: 'sticker-label',
                content: 'off'
            }
        }, {
            elem: 'button'
        }];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tumbler/__box/tumbler__box.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tumbler/__button/tumbler__button.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/tumbler/__button/tumbler__button.bemhtml
block('tumbler').elem('button').match(function() {
    return this._sideId;
}).attrs()(function() {
    var a = applyNext() || {};
    a['aria-labelledby'] = this._sideId;
    return a;
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tumbler/__button/tumbler__button.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tumbler/__option/tumbler__option.bemhtml.js */
block('tumbler').elem('option')(
    mode('value')(function() {
        return this.ctx.value || this.ctx.side !== 'left';
    }),

    def()(
        match(function() { return true; })(function() {
            var value = apply('value');

            return applyCtx({
                elem: 'label',
                content: [
                    {
                        elem: 'input',
                        name: this._name,
                        value: value,
                        disabled: this._disabled,
                        elemMods: {
                            side: this.ctx.side
                        }
                    },
                    {
                        elem: 'text',
                        tag: 'span',
                        elemMods: {
                            side: this.ctx.side
                        },
                        content: this.ctx.content
                    }
                ]
            });
        })
    ),

    match(function() { return this.ctx.side === 'left'; }).wrap()(function() {
        return [this.ctx, {elem: 'box'}];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tumbler/__option/tumbler__option.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tumbler/__label/tumbler__label.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/tumbler/__label/tumbler__label.bemhtml
block('tumbler').elem('label').tag()('label');

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tumbler/__label/tumbler__label.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tumbler/__input/tumbler__input.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/tumbler/__input/tumbler__input.bemhtml
block('tumbler').elem('input')(
    tag()('input'),
    attrs()(function() {
        var side = this.elemMods.side,
            checked;

        if (side === 'left') {
            checked = (this._checked) ? undefined : 'checked';
        } else {
            checked = this._checked;
        }

        return {
            type: 'radio',
            name: this.ctx.name,
            value: this.ctx.value,
            checked: checked,
            disabled: this.ctx.disabled,
            'aria-labelledby': side === 'left' ? this._leftId : this._rightId
        }
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tumbler/__input/tumbler__input.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tumbler/__text/tumbler__text.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/tumbler/__text/tumbler__text.bemhtml
block('tumbler').elem('text').attrs()(function() {
    var a = applyNext() || {};
    side = this.elemMods.side;

    a.id = side === 'left' ? this._leftId : this._rightId;
    a['aria-hidden'] = true;

    return a;
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tumbler/__text/tumbler__text.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tumbler/__sticker/tumbler__sticker.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/tumbler/__sticker/tumbler__sticker.bemhtml
block('tumbler').elem('sticker').attrs()(function() {
    var a = applyNext() || {};
    a['aria-hidden'] = true;
    return a;
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tumbler/__sticker/tumbler__sticker.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-geodata/i-geodata.bemhtml.js */
oninit(function(exports) {
    var BEMContext = exports.BEMContext,
        proto = BEMContext.prototype,
        iGlobal = proto['i-global'];

    if (!iGlobal) return;

    var geodata = proto['i-geodata'] = {};

    geodata._data = {
        '10000': {
            id: '10000',
            lang: 'en',
            ename: 'Earth',
            short_ename: 'com',
            name: 'Земля',
            parent: 0
        },
        '225': {
            id: '225',
            lang: 'ru',
            ename: 'Russia',
            short_ename: 'ru',
            name: 'Россия',
            parent: '10000'
        },
        '213': {
            id: '213',
            ename: 'Moscow',
            short_ename: 'msk',
            name: 'Москва',
            parent: '225'
        },
        '9999': {
            id: '9999',
            ename: 'Yandex',
            short_ename: 'yndx',
            name: 'Яндекс',
            parent: '213'
        },
        '187': {
            id: '187',
            lang: 'uk',
            ename: 'Ukraine',
            short_ename: 'ua',
            name: 'Украина',
            parent: '10000'
        },
        '149': {
            id: '149',
            lang: 'be',
            ename: 'Belarus',
            short_ename: 'by',
            name: 'Беларусь',
            parent: '10000'
        },
        '159': {
            id: '159',
            lang: 'kk',
            ename: 'Kazakhstan',
            short_ename: 'kz',
            name: 'Казахстан',
            parent: '10000'
        },
        '11119': {
            id: '11119',
            lang: 'tt',
            ename: 'Tatarstan',
            short_ename: 'tt',
            name: 'Республика Татарстан',
            parent: '10000'
        },
        '167': {
            id: '167',
            lang: 'az',
            ename: 'Azerbaijan',
            short_ename: 'az',
            name: 'Азербайджан',
            parent: '10000'
        },
        '983': {
            id: '983',
            lang: 'tr',
            ename: 'Turkey',
            short_ename: 'tr',
            name: 'Турция',
            parent: '10000'
        },
        '20730': {
            id: '20730',
            lang: 'en',
            ename: 'Mars',
            short_ename: 'mars',
            name: 'Марс',
            parent: 0,
            hidden: true
        }
    };

    geodata._getRegionLang = function(region) {
        return region.lang || geodata._getRegionLang(geodata._data[region.parent]);
    }

    geodata.getRegion = function(region) {
        if (!region) region = {
            'short_ename': iGlobal['user-region'] || iGlobal['content-region']
        };

        var id = region.id;

        if (!id) {
            var regId, field;
            for (regId in geodata._data) {
                for (field in region) {
                    if (region.hasOwnProperty(field) &&
                        region[field] === geodata._data[regId][field] &&
                        !geodata._data[regId]['hidden']) {
                        id = geodata._data[regId]['id'];
                        break;
                    }
                }
                if (id) {
                    break;
                }
            }
        }

        var reg = geodata._data[id];
        if (!reg.lang) reg.lang = geodata._getRegionLang(reg);

        return reg;
    }

    geodata.isRegionIn = function(items, field, region) {
        if (field && !BEMContext.isSimple(field) && !region) {
            region = field;
            field = false;
        }
        if (!field) field = 'short_ename';
        region = geodata.getRegion(region);

        for (var i in items) {
            if (items.hasOwnProperty(i) && items[i] == region[field]) return region;
        }
        if (region.parent) return geodata.isRegionIn(items, field, {
            id: region.parent
        });

        return false;
    }
});

block('i-geodata')(
    match(function() {
        return !this._userRegion;
    }).def()(function() {
        return applyNext({
            _userRegion: this['i-geodata'].getRegion(this.ctx.region)
        });
    }),

    elem('region-id').content()(function() {
        return this._userRegion.id;
    }),
    elem('region-lang').content()(function() {
        return this._userRegion.lang;
    }),
    elem('region-ename').content()(function() {
        return this._userRegion.ename;
    }),
    elem('region-short-ename').content()(function() {
        return this._userRegion.short_ename;
    }),
    elem('region-name').content()(function() {
        return this._userRegion.name;
    }),
    elem('region-parent').content()(function() {
        return this._userRegion.parent;
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-geodata/i-geodata.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/lang-switcher/lang-switcher.bemhtml.js */
block('lang-switcher').wrap()(function() {
    var js = this.extend({
        'secret-key': this['i-global']['secret-key'],
        tune: this['i-services'].serviceUrl('tune')
    }, this.ctx.js);

    return applyCtx({
        block: 'dropdown-menu',
        mix: [this.extend(this.ctx, {
            js: js
        })].concat(this.ctx.mix || []),
        content: [{
            elem: 'switcher',
            content: {
                block: 'lang-switcher',
                mix: [{
                    block: 'link',
                    mods: { pseudo: 'yes' },
                    js: true
                }],
                elem: 'lang',
                lang: this.ctx.lang,
                mods: { selected: 'yes' },
                attrs: {
                    role: 'button',
                    tabindex: 0
                },
                _isCurrentLang: true // индикатор текущего выбранного языка
            }
        },
        {
            // Content of dropdown-menu__popup is dropdown-menu__menu.
            elem: 'popup',
            mix: [{
                block: 'lang-switcher',
                elem: 'popup-content'
            }],
            content: {
                // Нужно вернуться в контекст lang-switcher
                // this.ctx.content – массив элементов lang.
                block: this.block,
                mods: this.mods,
                elem: 'foobar', // защита от зацикливания
                tag: '',
                content: (Array.isArray(this.ctx.content) && this.ctx.content.length < 4) && (this.ctx.noMore !== true) ?
                    (
                        // Нужно для правильного выставления позиции в вертикальном меню, см подробности в
                        // lang-switcher__lang.bemhtml.
                        this._hasLinkToAll = true,
                        this.ctx.content.concat([
                            {
                                block: 'b-menu-vert',
                                elem: 'layout-unit',
                                mix: [{
                                    block: 'lang-switcher',
                                    elem: 'all'
                                }],
                                content: {
                                    block: 'link',
                                    url: this['i-services'].serviceUrl('tune') + '/lang/',
                                    content: this.ctx.moreText || 'all'
                                }
                            }
                        ])
                    ) : this.ctx.content
            }
        }]
    });
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/lang-switcher/lang-switcher.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/lang-switcher/lang-switcher.bemhtml.js */
block('lang-switcher')(
    def()(function() {
        return applyNext({
            _counterOpen: this.ctx.counterOpen,
            _counterMore: this.ctx.counterMore
        });
    }),
    elem('lang').attrs()(function() {
        return this.extend(applyNext(), {
            onmousedown: this._counterOpen
        });
    })
);

block('link').match(function() {
    return this._counterMore;
}).def()(function() {
    this.ctx.counter = this._counterMore;
    return applyNext();
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/lang-switcher/lang-switcher.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/lang-switcher/__lang/lang-switcher__lang.bemhtml.js */
block('lang-switcher').elem('lang')(
    tag()('span'),

    // Ссылку на смену языка содержат все элементы, кроме выбранного.
    match(function() {
        return !this.mods.selected && this.elemMods.selected !== 'yes';
    })(
        tag()('a'),

        js()(function() {
            return {
                lang: this.ctx._lang.lang,
                url: this.ctx.url
            };
        }),

        attrs()(function() {
            var ctx = this.ctx,
                lang = ctx._lang.lang,
                glob = this['i-global'],
                sk = glob['secret-key'],
                retpathParam = glob.retpath ? '&retpath=' + encodeURIComponent(glob.retpath) : '',
                handler = sk ? ('/api/lang/v1.1/save.xml?intl=' + lang + '&sk=' + sk + retpathParam) : '/lang/';

            // Ручку /api/lang/v1.1/save.xml можно использовать только если есть secret-key.
            // https://wiki.yandex-team.ru/tune/api?from=isearch#langapi
            return {
                href: ctx.url || (this['i-services'].serviceUrl('tune') + handler),
                role: 'button',
                tabindex: 0
            };
        })
    ),

    content()(function() {
        return {
            elem: 'lang-name',
            tag: 'span',
            content: this.ctx._lang.name
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/lang-switcher/__lang/lang-switcher__lang.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/lang-switcher/__lang/lang-switcher__lang.bemhtml.js */
// скопировала из Lego
block('lang-switcher').elem('lang').wrap()(function() {
    var lang = this.ctx.lang,
        params;

    if (lang.code) {
        // Язык определяется по коду региона.
        params = {
            short_ename: (lang.code === 'en' ? 'com' : lang.code)
        };
    } else if (lang.langCode) {
        // Язык определяется кодом.
        params = {
            lang: lang.langCode
        };
    } else if (lang.region) {
        // Язык определяется по региону.
        params = lang.region;
    }

    var ctx = this.ctx;

    ctx._lang = {
        // если передали lang, то не ищем в i-geodata
        lang: lang.lang || this['i-geodata'].getRegion(params).lang,
        name: this.ctx.lang.name
    };

    if (!this.ctx._isCurrentLang) {
        this.position = this.position - 1;

        if (this._hasLinkToAll && this.position === this._listLength - 2) {
            this.position = this._listLength - 1;
        }

        ctx.block = this.block;
        ctx = {
            block: 'b-menu-vert',
            elem: 'layout-unit',
            content: ctx
        };
    }

    return ctx;
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/lang-switcher/__lang/lang-switcher__lang.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-common/list/list.bemhtml.js */
// autogenerated from list.bemhtml
block('list')(
    tag()('ul'),
    mod('bullets', 'decimal')(
        tag()('ol'),
        elem('item').attrs()(function() {
            return { 'data-position': this.position + '.' };
        })
    ),
    elem('item').tag()('li')
);

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-common/list/list.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/login-form/login-form.bemhtml.js */
block('login-form')(
    elem('form')(
        tag()('form'),
        attrs()(function() {
            return {
                method: 'POST',
                action: this.ctx.url
            };
        })
    ),
    elem('signup').def()(function() {
        return applyCtx({
            block: 'login-form',
            elem: 'signup-wrap',
            content: {
                block: 'link',
                mix: {
                    block: 'login-form',
                    elem: 'signup'
                },
                url: this.ctx.url,
                target: this.ctx.target,
                content: this.ctx.content
            }
        });
    }),
    elem('social').attrs()(function() {
        return {
            role: 'group',
            'aria-label': 'Войти при помощи социальной сети'
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/login-form/login-form.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-desktop/login-form/login-form.bemhtml.js */
block('login-form').def()(function() {
    return applyCtx({
        block: 'popup',
        js: {
            top: '50%'
        },
        mix: {
            block: 'login-form',
            js: this.ctx.js
        },
        mods: {
            type: 'modal',
            behaviour: 'scrollable',
            'has-close': 'yes'
        },
        attrs: {
            role: 'form',
            'aria-label': 'Авторизация'
        },
        underMods: {
            type: 'paranja'
        },
        content: {
            elem: 'content',
            content: this.ctx.content
        }
    });
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-desktop/login-form/login-form.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/input/_type/input_type_password.bemhtml.js */
block('input').mod('type', 'password').elem('control').attrs()(function() {
    return this.extend(applyNext(), {
        'type': 'password'
    });
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/input/_type/input_type_password.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/map/blocks-deskpad/map/map.bemhtml.js */
// autogenerated from map.bemhtml
block('map').elem('control-icon').tag()('i');

/* end: /Users/miripiruni/Documents/www/web4/contribs/map/blocks-deskpad/map/map.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/map/blocks-deskpad/i-geo-point/i-geo-point.bemhtml.js */
// autogenerated from i-geo-point.bemhtml
block('i-geo-point').attrs()(function() {
    return {
        title: this.ctx.title,
        onmousedown: this.ctx.counter
    };
});

block('i-geo-point').mod('pseudo', 'yes').attrs()(function() {
    var ctx = this.ctx,
        a = applyNext() || {};

    if (!a.style) {
        var style = '',
            pos = ctx.pos;

        pos && pos.left && pos.top && (style += 'left:' + Math.round(pos.left) + 'px;' +
            'top:' + Math.round(pos.top) + 'px;');

        ctx.zIndex && (style += 'z-index:' + ctx.zIndex + ';');

        a.style = style;
    }

    return a;
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/map/blocks-deskpad/i-geo-point/i-geo-point.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/map/blocks-deskpad/i-geo-point/_labeled/i-geo-point_labeled_yes.bemhtml.js */
// autogenerated from i-geo-point_labeled_yes.bemhtml
block('i-geo-point').mod('labeled', 'yes').content()(function() {
    return [{
        elem: 'icon'
    }, {
        elem: 'label',
        content: this.ctx.title
    }];
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/map/blocks-deskpad/i-geo-point/_labeled/i-geo-point_labeled_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/map/blocks-deskpad/map/_api/map_api_dynamic.bemhtml.js */
// autogenerated from map_api_dynamic.bemhtml
block('map').mod('api', 'dynamic')(
    attrs()(function() {
        return this.ctx.size && !this.ctx.hideStaticStub && {
            style: 'width:' + this.ctx.size[0] + 'px'
        };
    }),
    content()(function() {
        return [
            {
                elem: 'dynamic-map',
                attrs: this.ctx.size && {
                    style: 'width:' + this.ctx.size[0] + 'px;' + 'height:' + this.ctx.size[1] + 'px;'
                },
                mix: {
                    block: 'content-placeholder'
                }
            },
            this.ctx.content
        ];
    }),
    elem('goto-map-icon').tag()('i')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/map/blocks-deskpad/map/_api/map_api_dynamic.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/map/blocks-deskpad/map/_api/map_api_static.bemhtml.js */
// autogenerated from map_api_static.bemhtml
block('map').mod('api', 'static').content()(function() {
    var ctx = this.ctx,
        attrs;

    if (ctx.url && ctx.width && ctx.height) {
        attrs = {
            style: 'background-image: url("' + ctx.url + '");' +
                'width:' + ctx.width + 'px;' +
                'height:' + ctx.height + 'px;'
        };
    }

    return [
        {
            elem: 'static-image',
            mix: {
                block: 'content-placeholder'
            },
            attrs: attrs
        },
        this.ctx.content
    ];
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/map/blocks-deskpad/map/_api/map_api_static.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-booking/blocks-common/z-booking/z-booking.bemhtml.js */
// autogenerated from z-booking.bemhtml
block('z-booking')(
    tag()('span'),
    elem('hidden')(
        tag()('input'),
        attrs()(function() {
            return {
                type: 'hidden',
                name: this.ctx.name,
                value: this.ctx.value
            };
        })
    )
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-booking/blocks-common/z-booking/z-booking.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-booking/blocks-common/z-booking-form/z-booking-form.bemhtml.js */
// autogenerated from z-booking-form.bemhtml
block('z-booking-form').elem('hidden')(
    tag()('input'),
    attrs()(function() {
        return {
            type: 'hidden',
            name: this.ctx.name,
            value: this.ctx.value
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-booking/blocks-common/z-booking-form/z-booking-form.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-booking/blocks-common/z-booking-popup/z-booking-popup.bemhtml.js */
// autogenerated from z-booking-popup.bemhtml
block('z-booking-popup')(
    tag()('span'),
    elem('button').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-booking/blocks-common/z-booking-popup/z-booking-popup.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-common/map2/map2.bemhtml.js */
block('map2')(
    js()(true),

    attrs()(function() {
        return {
            style: [
                this.ctx.width && 'width:' + this.ctx.width + 'px',
                this.ctx.height && 'height:' + this.ctx.height + 'px'
            ].filter(Boolean).join(';')
        };
    }),

    elem('preloader-container').attrs()(function() {
        return {
            id: this.ctx.id
        };
    }),

    elem('preloader').content()(function() {
        return [{
            elem: 'preloader-data',
            content: this.ctx.data
        }];
    }),

    elem('preloader-data')(
        tag()('script'),
        attrs()({
            type: 'application/json+ld'
        })
    )

);

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-common/map2/map2.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-deskpad/map2/map2.bemhtml.js */
block('map2')(

    elem('location-popup').def()(function() {
        return applyCtx({
            block: 'popup2',
            mods: { target: 'anchor', theme: 'normal' },
            mix: {
                block: 'map2',
                elem: 'location-popup'
            },
            directions: [this.ctx.locationPopupDirection || 'left-center'],
            content: [
                {
                    elem: 'content',
                    content: 'Точное местоположение определить не удалось.'
                }
            ]
        });
    })

);

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-deskpad/map2/map2.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-common/map2/__static-image/map2__static-image.bemhtml.js */
// autogenerated from map2__static-image.bemhtml
block('map2').elem('static-image')(
    tag()('img'),
    attrs()(function() {
        return {
            alt: '',
            src: '//yastatic.net/lego/_/La6qi18Z8LwgnZdsAr1qy1GwCwo.gif',
            width: this.ctx.width,
            height: this.ctx.height
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-common/map2/__static-image/map2__static-image.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-common/map2/_type/map2_type_dynamic.bemhtml.js */
block('map2').mod('type', 'dynamic')(
    elem('overlay-pane').elemMod('progress', 'yes').content()(function() {
        return [
            this.ctx.content,
            {
                block: 'spin2',
                mix: {
                    block: 'map2',
                    elem: 'spin'
                },
                mods: {
                    size: 's',
                    progress: 'yes'
                }
            },
            {
                elem: 'loading',
                content:  'Карта загружается'
            }
        ];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-common/map2/_type/map2_type_dynamic.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/round-button/round-button.bemhtml.js */
block('round-button')(
    mix()({
        block: 'i-pressed-controller',
        js: true
    }),
    attrs()({
        role: 'button',
        type: 'button'
    }),

    content()(function() {
        return [
            { elem: 'inner' },
            { elem: 'icon', mix: this.ctx.icon },
            this.ctx.text ? { elem: 'text', content: this.ctx.text } : ''
        ];
    })
)

block('round-button').match(function() {
    return this.ctx.text;
}).mix()({ mods: { text: 'yes' } });

block('round-button').match(function() {
    return this.ctx.counter;
}).attrs()(function() {
    return this.extend(applyNext(), {
        onmousedown: this.ctx.counter
    });
})

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/round-button/round-button.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-common/metro2/metro2.bemhtml.js */
block('metro2')(
    elem('point')(
        attrs()(function() {
            return {
                'aria-hidden': true,
                role: 'presentation',
                style: this.ctx.color ? 'color: ' + this.ctx.color : ''
            };
        }),
        content()({
            tag: 'svg',
            elem: 'icon',
            attrs: {
                viewBox: '0 0 10 10'
            },
            content: {
                tag: 'circle',
                attrs: {
                    cx: 5,
                    cy: 5,
                    r: 4,
                    stroke: 'none',
                    fill: 'currentColor'
                }
            }
        })),

    elem('text').tag()('span'))

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-common/metro2/metro2.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-deskpad/mime/mime.bemhtml.js */
block('mime')(
    elem('icon')(
        tag()('img'),
        attrs()(function() {
            return {
                src: this.ctx.url,
                alt: this.ctx.alt
            };
        })
    ),
    elem('size')(
        tag()('span'),
        content()(function() {
            return this.ctx.size;
        })
    )
);

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-deskpad/mime/mime.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/misspell/misspell.bemhtml.js */
block('misspell')(
    def()(function() {
        return applyNext({
            _misspellId: this.generateId()
        });
    }),
    attrs()(function() {
        return {
            'aria-labelledby': this._misspellId
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/misspell/misspell.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/misspell/__link/misspell__link.bemhtml.js */
// autogenerated from misspell__link.bemhtml
block('misspell').elem('link').replace()(function() {
    return this.extend(this.ctx, {
        block: 'link',
        mods: {
            ajax: this.ctx.outer ? '' : 'yes'
        },
        elem: undefined,
        mix: [{
            block: 'misspell',
            elem: 'link'
        }].concat(this.ctx.mix)
    });
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/misspell/__link/misspell__link.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/misspell/__title/misspell__title.bemhtml.js */
// autogenerated from misspell__title.bemhtml
block('misspell').elem('title')(
    tag()('h2'),
    mix()({
        block: 'a11y-hidden'
    }),
    attrs()(function() {
        return {
            id: this._misspellId
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/misspell/__title/misspell__title.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-common/object-badge/object-badge.bemhtml.js */
// autogenerated from object-badge.bemhtml
block('object-badge').mix()({
    block: 'clearfix'
});

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-common/object-badge/object-badge.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-desktop/object-badge/object-badge.bemhtml.js */
// autogenerated from object-badge.bemhtml
block('object-badge').js()(true);

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-desktop/object-badge/object-badge.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-common/object-badge/__figures/object-badge__figures.bemhtml.js */
block('object-badge').elem('figures').match(function() {
    return this.ctx.map || this.ctx.thumb || this.ctx.gallery;
}).replace()(function() {
    var ctx = this.ctx,
        replacedCtx = this.extend(ctx, {
            elemMods: {
                type: ctx.map || ctx.gallery ? 'full-size' : 'pull-right'
            },
            content: [
                ctx.thumb,
                ctx.map,
                ctx.gallery,
                ctx.ugc,
                ctx['notice-stripe']
            ]
        });

    delete replacedCtx.map;
    delete replacedCtx.thumb;
    delete replacedCtx.gallery;

    return replacedCtx;
});

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-common/object-badge/__figures/object-badge__figures.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-common/organic/__passage/organic__passage.bemhtml.js */
/**
 * Разделитель-троеточие в тексте сниппета
 */
block('organic').elem('passage')(
    tag()('b'),
    content()('... ')
);

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-common/organic/__passage/organic__passage.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-common/path/path.bemhtml.js */
block('path')(
    elem('separator').tag()('span'),
    elem('item').replace()(function() {
        return this.extend(this.ctx, {
            block: 'link',
            elem: undefined,
            mods: { outer: 'yes' },
            attrs: {
                tabindex: -1
            },
            mix: [{
                block: this.block,
                elem: this.elem
            }].concat(this.ctx.mix)
        });
    })
);

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-common/path/path.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/people/blocks-deskpad/people/__avatar/people__avatar.bemhtml.js */
block('people').elem('avatar')(
    wrap()(function() {
        return this.extend(this.ctx, {
            block: 'link',
            elem: undefined,
            mix: {
                block: this.block,
                elem: 'avatar-link'
            },
            content: this.ctx
        });
    }),
    mix()({ block: 'content-placeholder' }),
    attrs()(function() {
        return this.ctx.src && {
            style: 'background-image:url(' + this.ctx.src + ')',
            title: this.ctx.title
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/people/blocks-deskpad/people/__avatar/people__avatar.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/people/blocks-deskpad/full-info/full-info.bemhtml.js */
block('full-info')(
    elem('table').tag()('table'),
    elem('cell').tag()('td'),
    elem('row')(
        tag()('tr'),
        content()(function() {
            return [
                {
                    elem: 'cell',
                    mods: { type: 'name' },
                    content: this.ctx.data.name
                },
                {
                    elem: 'cell',
                    mods: { type: 'description' },
                    content: this.ctx.data.description
                }
            ];
        })
    )
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/people/blocks-deskpad/full-info/full-info.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-common/price/price.bemhtml.js */
// autogenerated from price.bemhtml
block('price')(
    tag()('span'),
    elem('min-price-label').tag()('span'),
    elem('cent').tag()('span'),
    elem('separator').tag()('span'),
    elem('nowrap')(
        tag()('nobr'),
        bem()(false)
    )
);

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-common/price/price.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/components/pushbundle/blocks-common/pushbundle-test-view/pushbundle-test-view.bemhtml.js */
block('pushbundle-test-view').elem('header').tag()('h1');

/* end: /Users/miripiruni/Documents/www/web4/components/pushbundle/blocks-common/pushbundle-test-view/pushbundle-test-view.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/rating/rating.bemhtml.js */
block('rating').content()(function() {
    return [
        {
            elem: 'stars',
            elemMods: {
                fill: 'yes',
                width: this.ctx.value ? Math.ceil(this.ctx.value * 2) * 10 : 0
            }
        },
        this.ctx.content && {
            elem: 'text',
            content: this.ctx.content
        }
    ];
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/rating/rating.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-common/rating2/rating2.bemhtml.js */
// autogenerated from rating2.bemhtml
block('rating2')(
    tag()('span'),
    content()(function() {
        var base = this.ctx.base,
            val = Math.min(this.ctx.value, base);

        return {
            elem: 'stars',
            elemMods: {
                width: Math.round(val * 10 / base) * 10
            }
        };
    }),
    elem('delimiter')(
        tag()('span'),
        content()('/')
    ),
    elem('stars').tag()('span')
);

block('rating2').mod('type', 'extended').content()(function() {
    return [
        applyNext(),
        '&nbsp;',
        String(this.ctx.value).replace('.', ','), {
            elem: 'delimiter'
        },
        String(this.ctx.base).replace('.', ',')
    ];
});

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-common/rating2/rating2.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/serp-item/__preview-btn/serp-item__preview-btn.bemhtml.js */
// autogenerated from serp-item__preview-btn.bemhtml
block('serp-item').elem('preview-btn').replace()(function() {
    var ctx = this.ctx;

    return {
        block: ctx.type || 'check-button',
        mods: {
            theme: 'normal',
            size: this._size || 'xs'
        },
        mix: [{
            block: this.block,
            elem: this.elem,
            elemMods: ctx.elemMods
        }].concat(ctx.mix),
        tabindex: -1,
        attrs: {
            onmousedown: ctx.counter
        },
        content: ctx.content,
        target: ctx.target,
        url: ctx.url
    };
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/serp-item/__preview-btn/serp-item__preview-btn.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-common/serp-meta2/__item/serp-meta2__item.bemhtml.js */
block('serp-meta2')(
    elem('line').elemMod('wrap', 'yes').def()(function() {
        return applyNext({ _inWrapLine: true });
    }),
    elem('item').match(function() { return this._inWrapLine; }).content()(function() {
        var content = this.ctx.content,

            isString = function(x) {
                return typeof x === 'string'
            },
            nowrapSmallPrefix = function(s) {
                return s.replace('^([^\s]+)\s([^\s]+)$', function(asIs, prefix, rest) {
                    return prefix.length < 3 ? prefix + '&nbsp;' + rest : asIs;
                });
            };

        if (Array.isArray(content) && content.every(isString)) {
            content = content.join('');
        }
        return isString(content) ? nowrapSmallPrefix(content) : applyNext();
    })
);

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-common/serp-meta2/__item/serp-meta2__item.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/social-snippet2/__avatar/social-snippet2__avatar.bemhtml.js */
block('social-snippet2').elem('avatar')(
    wrap()(function() {
        return this.extend(this.ctx, {
            block: 'link',
            elem: undefined,
            attrs: { role: 'presentation' },
            mix: { block: this.block, elem: 'avatar-link' },
            content: this.ctx
        });
    }),
    mix()({ block: 'content-placeholder' }),
    attrs()(function() {
        var src = this.ctx.src;
        return src && {
            style: 'background-image: url(' +
                (src.match(/^[a-z0-9@._-]+$/i) ?
                    '//avatars.yandex.net/get-profile-avatar/' + src + '/normal' :
                    // ссылка может прийти как http:// https:// либо // либо avatars.yandex...
                    // приводим любой путь к виду //avatars.yandex.net
                    src.replace('^((https?:)?\/\/)', '//')) +
                ');',
            title: this.ctx.title
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/social-snippet2/__avatar/social-snippet2__avatar.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-common/sport-icon/sport-icon.bemhtml.js */
block('sport-icon')(
    tag()('span'),
    mod('type', 'country').attrs()(function() {
        return {
            style: ('background-position:-' + this.ctx.spriteOffset + 'px -2px')
        };
    }),
    mod('type', 'team').attrs()(function() {
        return {
            style: ('background-position:-' + this.ctx.spriteOffset + 'px 0')
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-common/sport-icon/sport-icon.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-common/sport-text-with-icon/sport-text-with-icon.bemhtml.js */
block('sport-text-with-icon')(
    tag()('span'),
    content()(function() {
        return [
            (this.ctx.iconPosition === 'left' && this.ctx.icon),
            this.ctx.text,
            (this.ctx.iconPosition === 'right' && this.ctx.icon)
        ];
    })
);

block('sport-text-with-icon').elem('text').tag()('span');

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-common/sport-text-with-icon/sport-text-with-icon.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-common/table/table.bemhtml.js */
// autogenerated from table.bemhtml
block('table')(
    tag()('table'),
    elem('head')(
        def()(function() {
            return applyNext({
                head: true
            });
        }),
        tag()(false),
        content()(function() {
            return {
                elem: 'row',
                content: this.ctx.content
            };
        })
    ),
    elem('body').tag()(false),
    elem('row')(
        tag()('tr'),
        bem()(false)
    ),
    elem('cell')(
        tag()(function() {
            return this.head ? 'th' : 'td';
        }),
        attrs()({
            scope: 'col'
        })
    )
);

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-common/table/table.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tabs-panes/tabs-panes.bemhtml.js */
block('tabs-panes')(
    def().match(function() {
        return this.ctx.id;
    }).match(function() {
        return this.ctx.id !== this._tabsPanesId;
    })(function() {
        return applyNext({
            _tabsPanesId: this.ctx.id
        });
    }),

    js()(function() {
        return {
            id: this._tabsPanesId
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tabs-panes/tabs-panes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tabs-panes/__pane/tabs-panes__pane.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/tabs-panes/__pane/tabs-panes__pane.bemhtml
block('tabs-panes').elem('pane').attrs()(function() {
    return {
        role: 'tabpanel',
        'aria-labelledby': this._tabsPanesId + '-tab-' + (this.position - 1),
        'aria-expanded': this.elemMods.active === 'yes'
    };
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tabs-panes/__pane/tabs-panes__pane.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tabs/tabs.bemhtml.js */
// autogenerated from ../../../../libs/islands-components/common.blocks/tabs/tabs.bemhtml
block('tabs')(
    def()(function() {
        return applyNext({
            _panesId: this.ctx.panes
        });
    }),

    js()(true),

    mix()(function() {
        return {
            block: 'tabs-panes',
            js: {
                id: this._panesId
            }
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tabs/tabs.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/tabs/_arrows/tabs_arrows_yes.bemhtml.js */
block('tabs-menu').mod('arrows', 'yes').def()(function() {
    return applyCtx([applyNext(), {
        block: 'tabs',
        elem: 'arrows',
        content: [{
            elem: 'arrow',
            elemMods: {
                hidden: 'yes',
                direction: 'right'
            }
        }, {
            elem: 'arrow',
            elemMods: {
                hidden: 'yes',
                direction: 'left'
            }
        }]
    }]);
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/tabs/_arrows/tabs_arrows_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tabs/_control/tabs_control_buttons.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/tabs/_control/tabs_control_buttons.bemhtml
block('tabs').mod('control', 'buttons').content()(function() {
    var ctx = this.ctx,
        activeValue,

        proxyMods = this.extend({}, ctx.mods),

        i = -1,
        radios = ctx.content.map(function(tab) {
            if (tab.elem === 'tab') {
                i++;
                var isSelected = Object(tab.elemMods).active === 'yes',
                    radio = this.extend(tab, {
                        block: 'radio-button',
                        elem: 'radio',
                        attrs: this.extend({
                            role: 'tab',
                            id: this._panesId + '-tab-' + i,
                            'aria-selected': isSelected
                        }, tab.attrs),
                        mix: [{
                            block: ctx.block,
                            elem: tab.elem
                        }].concat(tab.mix || []),
                        controlAttrs: this.extend({
                            value: i
                        }, tab.controlAttrs)
                    });

                if (isSelected) {
                    // Копируем, чтобы не удалить ничего лишнего, если используется один и тот же bemjson-объект
                    // для создания двух одинаковых блоков.
                    radio.elemMods = this.extend({}, radio.elemMods);

                    delete radio.elemMods.active;
                    activeValue = radio.controlAttrs.value;
                }

                return radio;
            } else {
                return tab;
            }
        }, this);

    this._tabsButtonIndex || (this._tabsButtonIndex = 0);

    delete proxyMods.control;

    return {
        block: 'radio-button',
        mix: {
            block: this.block,
            elem: 'control'
        },
        mods: proxyMods,
        value: activeValue,
        // Тут нельзя использовать рандомный this.generateId(), потому что тесты на шаблоны будут падать,
        // поэтому используем менее рандомный способ
        name: ctx.name || 'tabs-menu-buttons-' + (++this._tabsButtonIndex),
        attrs: {
            role: 'tablist'
        },
        content: radios
    };
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tabs/_control/tabs_control_buttons.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tabs/_control/tabs_control_menu.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/tabs/_control/tabs_control_menu.bemhtml
block('tabs').mod('control', 'menu').content()(function() {
    var ctx = this.ctx,
        proxyMods = this.extend({}, ctx.mods),

        i = -1,
        tabs = ctx.content.map(function(tab) {
            if (tab.elem === 'tab') {
                i++;
                return this.extend(tab, {
                    attrs: this.extend({
                        role: 'tab',
                        id: this._panesId + '-tab-' + i,
                        'aria-selected': Object(tab.elemMods).active === 'yes'
                    }, tab.attrs),
                    elemMods: this.extend({
                        interactive: 'yes'
                    }, tab.elemMods),
                    mix: [{
                        block: ctx.block,
                        elem: tab.elem
                    }].concat(tab.mix || []),
                    content: {
                        block: 'link',
                        content: tab.content
                    }
                });
            } else {
                return tab;
            }
        }, this);

    delete proxyMods.control;

    return {
        block: 'tabs-menu',
        mix: {
            block: this.block,
            elem: 'control'
        },
        attrs: {
            role: 'tablist'
        },
        mods: proxyMods,
        content: tabs
    };
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tabs/_control/tabs_control_menu.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tabs-menu/tabs-menu.bemhtml.js */
// autogenerated from ../../../../libs/islands-components/common.blocks/tabs-menu/tabs-menu.bemhtml
block('tabs-menu')(
    tag()('ul'),

    js()(true),

    attrs()({
        role: 'menu'
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tabs-menu/tabs-menu.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tabs-menu/__tab/tabs-menu__tab.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/tabs-menu/__tab/tabs-menu__tab.bemhtml
block('tabs-menu').elem('tab')(
    def().match(function() {
        return this.isFirst();
    })(function() {
        this.ctx.elemMods = this.extend({
            first: 'yes'
        }, this.ctx.elemMods);
        return applyNext();
    }),

    tag()('li'),

    elemMod('disabled', 'yes')(
        // Пробрасываем _disabled_yes в link
        def()(function() {
            return applyNext({
                _tabsMenuTabDisabled: true
            });
        }),

        // aria-disabled нужна только для интерактивных табиков
        match(function() {
            return this.elemMods.interactive === 'yes';
        }).attrs()(function() {
            return this.extend(applyNext(), {
                'aria-disabled': true
            });
        })
    ),

    elemMod('interactive', 'yes')(
        def()(function() {
            return applyNext({
                _tabsMenuTabInteractive: true
            });
        }),
        attrs()(function() {
            return this.extend(applyNext(), {
                role: 'menuitem'
            });
        })
    )
);

block('link')(
    match(function() {
        return this._tabsMenuTabDisabled;
    }).def()(function() {
        delete this._tabsMenuTabDisabled;

        this.mods.disabled = 'yes';
        this.ctx.mods = this.extend(this.ctx.mods, {
            disabled: 'yes'
        });

        return applyNext();
    }),

    match(function() {
        return this._tabsMenuTabInteractive;
    }).attrs()(function() {
        var attrs = applyNext();

        attrs.tabindex = undefined; // У нас получает фокус сам элемент tab-menu__tab, на ссылке фокус не нужен
        attrs.role = undefined; // Роль тоже не нужна, нужные роли уже стоят на tabs-menu__tab

        return attrs;
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/tabs-menu/__tab/tabs-menu__tab.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-desktop/tabs-menu/__tab/tabs-menu__tab.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/desktop.blocks/tabs-menu/__tab/tabs-menu__tab.bemhtml
// Если меню с js-поведением, то делаем tabs-menu__tab способным получать фокус
// Это делается специально только на десктопе, т.к. Android-планшеты имеют проблемы с
// с кликом по табику без tabindex, когда рядом с ним находится табик с tabindex=0
// См. https://st.yandex-team.ru/ISLCOMPONENTS-997
block('tabs-menu').elem('tab').elemMod('active', 'yes').match(function() {
    return !this._tabsMenuTabDisabled;
}).match(function() {
    return this._tabsMenuTabInteractive;
}).attrs()(function() {
    return this.extend(applyNext(), {
        tabindex: 0
    });
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-desktop/tabs-menu/__tab/tabs-menu__tab.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/tabs/_control/tabs_control_select.bemhtml.js */
// autogenerated from tabs_control_select.bemhtml
block('tabs').mod('control', 'select')(
    js()(true),
    content()(function() {
        var ctx = this.ctx,
            proxyMods = this.extend({}, ctx.mods);
        // Прокидываем в селект все модификаторы, кроме control,
        // т.к. control — это модификатор, говорящий, какую реализацию табов использовать
        delete proxyMods.control;

        return {
            block: 'select',
            mix: {
                block: this.block,
                elem: 'control'
            },
            mods: proxyMods,
            content: [{
                block: 'button',
                counter: ctx.counter,
                content: ctx.content[0].content
            }, {
                elem: 'control',
                content: ctx.content
            }]
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/tabs/_control/tabs_control_select.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/tabs/_limit/tabs_limit_yes.bemhtml.js */
block('tabs').mod('limit', 'yes').content()(function() {
    return [
        applyNext(),
        {
            block: 'select',
            mods: { size: this.mods.size || 'm', theme: 'normal' },
            mix: { block: 'tabs', elem: 'more' },
            js: { elemPopupMods: { tabs: 'limit' } },
            content: [
                { block: 'button', content: this.ctx.moreLabel || 'ещё' },
                {
                    elem: 'control',
                    content: {
                        elem: 'option',
                        content: this.ctx.moreLabel || 'ещё'
                    }
                }
            ]
        }
    ];
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/tabs/_limit/tabs_limit_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/block-cut/block-cut.bemhtml.js */
// autogenerated from block-cut.bemhtml
block('block-cut').content()(function() {
    return [
        this.ctx.beforeContent,
        {
            elem: 'inner',
            attrs: this.ctx.height && {
                style: 'height:' + this.ctx.height + 'px'
            },
            content: {
                elem: 'content-wrapper',
                content: this.ctx.content
            }
        },
        this.ctx.more && {
            elem: 'more',
            content: this.ctx.more
        }
    ];
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/block-cut/block-cut.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-desktop/thumb/thumb.bemhtml.js */
// autogenerated from thumb.bemhtml
block('thumb').content()(function() {
    return [this.ctx.content, {
        elem: 'handle'
    }];
});

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-desktop/thumb/thumb.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/trprices/trprices.bemhtml.js */
// autogenerated from trprices.bemhtml
block('trprices')(
    elem('price').tag()('span'),
    elem('cent').tag()('span'),
    elem('currency').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/trprices/trprices.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/components/ugc/blocks-common/ugc-emotions/ugc-emotions.bemhtml.js */
block('ugc-emotions').elem('emotions')(
    tag()('span'),
    content()(function() {
        var emotions = ['worst', 'bad', 'normal', 'good', 'perfect'].map(function(emotion) {
            return {
                elem: 'emotion',
                mods: {
                    type: emotion
                },
                attrs: {
                    'data-value': emotion
                }
            };
        });

        return [
            emotions,
            this.ctx.withTooltip && {
                block: 'tooltip',
                js: {
                    to: 'top',
                    offset: 5
                },
                mods: {
                    size: 'xs',
                    theme: 'normal'
                },
                mix: {
                    block: 'popup',
                    mods: {
                        type: 'ugc'
                    }
                }
            }
        ];
    }),

    elem('emotion').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/components/ugc/blocks-common/ugc-emotions/ugc-emotions.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/components/ugc/blocks-desktop/ugc-emotions/ugc-emotions.bemhtml.js */
block('ugc-emotions').elem('skip').tag()('button');

/* end: /Users/miripiruni/Documents/www/web4/components/ugc/blocks-desktop/ugc-emotions/ugc-emotions.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/components/ugc/blocks-common/ugc-rating/ugc-rating.bemhtml.js */
// autogenerated from rating2.bemhtml
block('ugc-rating').elem('stars')(
    tag()('span'),
    content()(function() {
        var base = this.ctx.base,
            value = Math.min(this.ctx.value, base),
            fullValue = Math.floor(value),
            stars = [],
            starValue;

        for (var i = 0; i < base; i++) {
            starValue = base - i;
            stars.push({
                elem: 'star',
                js: { value: starValue },
                mods: {
                    checked: starValue === fullValue ? 'yes' : ''
                }
            }, '\n'); // перенос нужен для того, чтобы элементы нормально растянуло при помощи text-align: justify
        }

        stars.pop(); // убираем последний перенос строки

        return [
            stars,
            this.ctx.withTooltip && {
                block: 'tooltip',
                js: {
                    to: 'top',
                    offset: 5
                },
                mods: {
                    size: 'xs',
                    theme: 'normal'
                },
                mix: {
                    block: 'popup',
                    mods: {
                        type: 'ugc'
                    }
                }
            }
        ];
    }),
    elem('star').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/components/ugc/blocks-common/ugc-rating/ugc-rating.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/user/user.bemhtml.js */
block('user')(
    def()(function() {
        var js = this.ctx.js || {},
            uid = js.uid || this.ctx.uid || this['i-global'].uid,
            login = this.ctx.login;

        return applyNext({_uid: uid, _login: login});
    }),

    tag()('a'),

    js()(function() {
        return this.extend({uid: this._uid, login: this._login || this['i-global'].login}, applyNext());
    }),

    attrs()(function() {
        var Glob = this['i-global'],
            login = this._login || Glob.login,
            social = login && /^uid-/.test(login),
            a = {
                href: social
                    ? Glob['social-host']
                    : Glob['passport-host'] + '/passport?mode=passport'
            },
            counter = this.ctx.counter || (this.ctx.counters || {}).user;

            counter && (a.onmousedown = counter);

        return a;
    }),

    content()(function() {
        // Если пользователь пришел через социальную авторизацию, то login возвращается пустым.
        // http://doc.yandex-team.ru/Passport/AuthDevGuide/concepts/DB_About.xml
        var hasDisplayName = this._login || this['i-global'].login || (this['i-global'].displayName || {}).name;
        return hasDisplayName
            ? [this.ctx.content]
            : {elem: 'enter'};
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/user/user.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-common/__string/i-common__string.bemhtml.js */
oninit(function(exports) {
    exports.BEMContext.prototype.cleverSubstring = function(str, maxLength, maxLengthRelative) {
        return (str.length > maxLength + maxLengthRelative)
            ? str.substring(0, (maxLength - 1)) + '…'
            : str;
    };
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/i-common/__string/i-common__string.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/user/__name/user__name.bemhtml.js */
block('user').elem('name')(

    tag()('span'),

    // Имя пользователя берется в порядке уменьшения приоритета из следующих источников:
    // ctx.content → ctx.login → global.displayName.name → global.login
    //
    // Если имя берется из global.login, то делается проверка, не выглядит ли логин как 'uid-*'.
    // Логин выглядит как 'uid-*', если пользователь пришел через социальную авторизацию.
    // У таких логинов обычно есть параметр 'displayName' с именем, которое нужно показывать вместо некрасивого логина.
    // Но нам его по какой-то причине не передали, поэтому в качестве значения выставляется пустая строка,
    // а в js-параметрах передается флаг isUglyUserName:true, чтобы попробовать разрулить ситуацию уже на клиенте.
    def()(function() {
        var ctx = this.ctx,
            global = this['i-global'],
            userName = ctx.content || ctx.login || this._login || (global.displayName || {}).name,
            isUglyUserName = false;

        if(!userName) {
            if(/^uid-/.test(global.login)) {
                userName = '';
                isUglyUserName = true;
            } else {
                userName = global.login;
            }
        }

        return applyNext({
            _maxLength: ctx.hasOwnProperty('maxLength') ? ctx.maxLength : 16,
            _maxLengthRelative: ctx.hasOwnProperty('maxLengthRelative') ? ctx.maxLengthRelative : 3,
            _userName: userName,
            // Недокументированный прием: Можно установить поле ctx.isUglyUserName, тогда соответствующий флаг будет
            // передан безусловно и имя пользователя перерисовывается по запросу с клиента.
            // Может быть удален в любой момент, использовать на свой страх и риск.
            _isUglyUserName: ctx.isUglyUserName || isUglyUserName
        });
    }),

    // Оборачивает первый символ в элемент `__first-letter`, например f@bar.foo
    // '<span class="user__first-letter">f</span>@bar.foo'.
    // Нельзя использовать :first-letter из-за https://st.yandex-team.ru/ISLUSER-343
    mode('pre-content')(function() {
        var c = this.ctx;
        return [{elem: 'first-letter', tag: 'span', content: c.charAt(0)}, c.slice(1)];
    }),

    content()(function() {
        return apply('pre-content', {
            ctx: this.xmlEscape(this.cleverSubstring(this._userName, this._maxLength, this._maxLengthRelative))
        });
    }),

    // JS-параметры передаются через контекст по историческим причинам.
    js()(function() {
        return {
            maxLength: this._maxLength,
            maxLengthRelative: this._maxLengthRelative,
            isUglyUserName: this._isUglyUserName
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/user/__name/user__name.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/user/__icon/user__icon.bemhtml.js */
block('user').elem('icon').match(function() { return this._uid; })(
    def()(function() {
        var icon = apply('icon');
        return applyNext({'ctx._icon': icon});
    }),

    tag()('span'),

    mode('host')('//avatars.yandex.net'),

    mode('icon')(function() {
        return [
            apply('host'),
            '/get-yapic/',
            this._uid,
            '/islands-',
            apply('iconSize'), // определяется на уровнях переопределения
            '?rnd=',
            (+new Date())
        ].join('');
    }),

    match(function() { return this.ctx._icon; })
        .attrs()(function() {
            return {
                style: 'background-image: url(' + this.ctx._icon + ');'
            };
        })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/user/__icon/user__icon.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-desktop/user/__icon/user__icon.bemhtml.js */
// autogenerated from ../../../../../libs/islands-user/desktop.blocks/user/__icon/user__icon.bemhtml
block('user').elem('icon').mode('iconSize')('middle');

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-desktop/user/__icon/user__icon.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/user/_menu/user_menu_yes.bemhtml.js */
block('user').mod('menu', 'yes')(
    attrs()(function() {
        var a = applyNext() || {};

        a.role = 'button';
        a.tabindex = 0;
        a['aria-haspopup'] = true;
        a['aria-expanded'] = false;

        return a;
    }),

    mode('exit-url')(function() {
        var Glob = this['i-global'],
            url = '/passport?mode=';

        url += 'logout&yu=' + (Glob.yandexuid || '');

        Glob.retpath && (url += '&retpath=' + encodeURIComponent(Glob.retpath));

        return Glob['passport-host'] + url;
    }),

    mode('user-menu')(function() {
        var exitUrl = apply('exit-url'),
            counters = this.ctx.counters || {};

        return [
            {
                elem: 'item',
                type: 'mail',
                content: {
                    block: 'link',
                    mods: counters.mail ? {counter: 'yes'} : {},
                    url: this['i-services'].serviceUrl('mail'),
                    counter: counters.mail,
                    content: [
                        {
                            block: 'image',
                            mods: {icon: 'mail'}
                        },
                        {
                            elem: 'text',
                            tag: 'span',
                            mix: [{block: 'user-menu-update', js: true}],
                            content: (function() {
                                var unread = (this.ctx.js && this.ctx.js.mail) || 0,
                                    unreadContent = unread ? unread + ' ' : '';
                                return unreadContent + unread
                            }).call(this)
                        }
                    ]
                }
            },
            {
                elem: 'item',
                type: 'mailCompose',
                content: {
                    block: 'link',
                    mods: counters.write ? {counter: 'yes'} : {},
                    content: 'letter_compose',
                    url: this['i-services'].serviceUrl('mail') + '/compose',
                    counter: counters.write
                }
            },
            {
                elem: 'item',
                type: 'disk',
                content: {
                    block: 'link',
                    url: this['i-services'].serviceUrl('disk') + '?source=main-loginmenu',
                    content: [
                        {
                            block: 'image',
                            mods: {icon: 'disk'}
                        },
                        {
                            elem: 'text',
                            tag: 'span',
                            content: 'upload_files'
                        }
                    ]
                }
            },
            {
                elem: 'item',
                mods: {separator: 'yes'}
            },
            {
                elem: 'item',
                type: 'tune',
                content: {
                    block: 'link',
                    mods: counters.settings ? {counter: 'yes'} : {},
                    content: 'tune',
                    url: this['i-services'].serviceUrl('tune'),
                    counter: counters.settings
                }
            },
            {
                elem: 'item',
                type: 'passport',
                content: {
                    block: 'link',
                    mods: counters.passport ? {counter: 'yes'} : {},
                    content: 'passport',
                    url: this['i-services'].serviceUrl('passport'),
                    counter: counters.passport
                }
            },
            {
                elem: 'item',
                type: 'logout',
                content: {
                    block: 'link',
                    mods: counters.logout ? {counter: 'yes'} : {},
                    mix: [
                        {block: 'user', js: {_uniqId: 'user__logout'}},
                        {block: 'user', elem: 'logout'}
                    ],
                    content: 'exit',
                    url: exitUrl,
                    counter: counters.logout
                }
            }
        ];
    }),

    match(function() { return this['i-global'].login; })
        .wrap()(function() {
            var userMenu = apply('user-menu');

            return {
                block: 'dropdown-menu',
                mods: {user: 'yes'},
                content: [
                    this.ctx,
                    {
                        elem: 'popup',
                        mods: {user: 'yes'},
                        mix: [{
                            block: 'popup',
                            mods: {'fade-out': 'no', 'watch-scroll': 'no'}
                        }],
                        js: {
                            directions: 'bottom-right'
                        },
                        content: userMenu
                    }
                ]
            };
        })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/user/_menu/user_menu_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/user-menu-update/user-menu-update.bemhtml.js */
// autogenerated from ../../../../libs/islands-user/common.blocks/user-menu-update/user-menu-update.bemhtml
block('user-menu-update').js()(true);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/user-menu-update/user-menu-update.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/multi-auth/blocks-deskpad/user/_multi-auth/user_multi-auth_yes.bemhtml.js */
// autogenerated from user_multi-auth_yes.bemhtml
block('user').mod('multi-auth', 'yes')(
    def()(function() {
        return applyNext({
            multiAuth: true,
            userCounters: this.ctx.counters,
            passportHost: this['i-global'].hasMda ?
                '//passport.yandex.' + this['i-global'].tld :
                this['i-services'].serviceUrl('passport')
        });
    }),
    mode('user-menu')(function() {
        var yu = this['i-global'].yandexuid,
            exitUrl = this.passportHost + '/passport?mode=logout' + (yu ? '&yu=' + yu : ''),
            counters = this.ctx.counters || {};

        return [{
            elem: 'item',
            type: 'mail',
            content: {
                block: 'link',
                url: this['i-services'].serviceUrl('mail'),
                counter: counters.mail,
                content: [{
                    elem: 'text',
                    tag: 'span',
                    mix: {
                        block: 'user-unread-letters',
                        js: {
                            unread: (this.ctx.js && this.ctx.js.mail) || 0
                        }
                    }
                }]
            }
        }, {
            elem: 'item',
            type: 'mailCompose',
            content: {
                block: 'link',
                content:  'letter_compose',
                url: this['i-services'].serviceUrl('mail') + '/compose',
                counter: counters.write
            }
        }, {
            elem: 'item',
            type: 'disk',
            content: {
                block: 'link',
                content: 'upload_files',
                url: this['i-services'].serviceUrl('disk') + '?source=main-loginmenu',
                counter: counters.disk
            }
        },
            {
                elem: 'item',
                mods: {
                    separator: 'yes'
                }
            }, {
                elem: 'item',
                type: 'tune',
                content: {
                    block: 'link',
                    content: 'tune',
                    url: this['i-services'].serviceUrl('tune'),
                    counter: counters.settings
                }
            }, {
                elem: 'item',
                type: 'passport',
                content: {
                    block: 'link',
                    content: 'passport',
                    url: this.passportHost,
                    counter: counters.passport
                }
            }, {
                elem: 'item',
                mods: {
                    separator: 'yes',
                    theme: 'hidden'
                }
            }, {
                elem: 'item',
                type: 'account',
                mods: {
                    theme: 'gray'
                },
                mix: {
                    block: 'multi-auth',
                    elem: 'account'
                },
                content: {
                    block: 'link',
                    mix: [{
                        block: 'multi-auth',
                        elem: 'account-link'
                    }, {
                        block: 'user',
                        mods: {
                            blank: 'yes',
                            account: 'yes'
                        },
                        js: false
                    }],
                    content: [{
                        block: 'user',
                        elem: 'icon'
                    }, {
                        block: 'user',
                        elem: 'name',
                        js: false
                    }]

                }
            }, {
                elem: 'item',
                type: 'add-account',
                mods: {
                    theme: 'gray'
                },
                content: {
                    block: 'link',
                    url: this.passportHost + '/auth?mode=add-user',
                    mix: [{
                        block: 'multi-auth',
                        elem: 'add'
                    }, {
                        block: 'multi-auth',
                        elem: 'account-link'
                    }, {
                        block: 'user',
                        mods: {
                            js: 'inited'
                        }
                    }],
                    content: [{
                        block: 'user',
                        elem: 'icon'
                    }, {
                        block: 'multi-auth',
                        elem: 'account-text',
                        content: 'Добавить пользователя',
                    }],
                    counter: counters.addUser
                }
            }, {
                elem: 'item',
                mods: {
                    separator: 'yes',
                    theme: 'gray'
                }
            }, {
                elem: 'item',
                mods: {
                    theme: 'gray'
                },
                type: 'edit',
                content: {
                    block: 'link',
                    mix: {
                        block: 'multi-auth',
                        elem: 'edit'
                    },
                    url: this.passportHost + '/auth?mode=edit',
                    content: [{
                        elem: 'text',
                        tag: 'span',
                        content: 'Редактировать список'
                    }],
                    counter: counters.multiedit
                }
            }, {
                block: 'multi-auth',
                elem: 'form',
                tag: 'form',
                attrs: {
                    action: this.passportHost + '/passport?mode=embeddedauth',
                    method: 'POST'
                },
                content: [{
                    tag: 'input',
                    attrs: {
                        type: 'hidden',
                        name: 'uid'
                    }
                }, {
                    tag: 'input',
                    attrs: {
                        type: 'hidden',
                        name: 'action',
                        value: 'change_default'
                    }
                }, {
                    tag: 'input',
                    attrs: {
                        type: 'hidden',
                        name: 'retpath'
                    }
                }, {
                    tag: 'input',
                    attrs: {
                        type: 'hidden',
                        name: 'yu'
                    }
                }]
            }, {
                elem: 'item',
                mods: {
                    theme: 'gray'
                },
                type: 'logout-multi-auth',
                content: {
                    block: 'link',
                    url: exitUrl,
                    mix: {
                        block: 'multi-auth',
                        elem: 'logout'
                    },
                    content: 'exit',
                    counter: counters.logout
                }
            }
        ]
    })
);

block('dropdown-menu').elem('popup').match(function() {
    return this.multiAuth;
}).def()(function() {
    this.ctx.mix = [{
        block: 'multi-auth',
        js: {
            switchUserCounterData: this.userCounters.switchUserCounterData
        }
    }].concat(this.ctx.mix);
    return applyNext();
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/multi-auth/blocks-deskpad/user/_multi-auth/user_multi-auth_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/user-unread-letters/user-unread-letters.bemhtml.js */
block('user-unread-letters').js()(true);

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/user-unread-letters/user-unread-letters.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/user/__ticker/user__ticker.bemhtml.js */
block('user').elem('ticker').def()(function() {
    return applyCtx({
        block: 'ticker',
        mix: {block: 'user', elem: 'ticker'},
        count: this.ctx.count,
        content: this.ctx.content
    });
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/user/__ticker/user__ticker.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/ticker/ticker.bemhtml.js */
// autogenerated from ../../../../libs/islands-user/common.blocks/ticker/ticker.bemhtml
block('ticker')(
    def()(function() {
        return applyNext({
            _count: this.ctx.count || 0,
            _maxCount: this.ctx.maxCount || 99,
            _url: this.ctx.url
        })
    }),

    tag()('span'),

    attrs()({
        role: 'alert',
        'aria-live': 'assertive',
        /* Для IE8 и старых версий JAWS. */
        'aria-atomic': true
    }),

    match(function() {
        return !this._count;
    }).mix()([{
        mods: {
            state: 'empty'
        }
    }]),

    js()(function() {
        return {
            count: this._count,
            maxCount: this._maxCount
        };
    }),

    content()(function() {
        return {
            elem: 'count',
            url: this.ctx.url,
            content: this.ctx.count
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/ticker/ticker.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/ticker/__count/ticker__count.bemhtml.js */
// autogenerated from ../../../../../libs/islands-user/common.blocks/ticker/__count/ticker__count.bemhtml
block('ticker').elem('count')(
    tag()('span'),

    match(function() {
        return !this.ctx.url;
    }).mix()([{
        elem: 'plain'
    }]),

    match(function() {
        return this.ctx.url;
    })(
        tag()('a'),

        attrs()(function() {
            return {
                href: this.ctx.url
            };
        })
    ),

    content()(function() {
        return [{
            elem: 'text'
        }, {
            elem: 'value',
            count: this.ctx.content
        }];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/ticker/__count/ticker__count.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/ticker/__text/ticker__text.bemhtml.js */
// autogenerated from ../../../../../libs/islands-user/common.blocks/ticker/__text/ticker__text.bemhtml
block('ticker').elem('text')(
    tag()('span'),

    mix()([{
        block: 'a11y-hidden'
    }]),

    content()(function() {
        return 'notifications';
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/ticker/__text/ticker__text.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/ticker/__value/ticker__value.bemhtml.js */
// autogenerated from ../../../../../libs/islands-user/common.blocks/ticker/__value/ticker__value.bemhtml
block('ticker').elem('value')(
    tag()('span'),

    mode('format-value')(function() {
        return this._count > this._maxCount ? this._maxCount + '+' : this._count;
    }),

    attrs()(function() {
        return {
            title: this._count
        };
    }),

    content()(function() {
        return apply('format-value');
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/ticker/__value/ticker__value.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/serp-user/_menu/serp-user_menu_yes.bemhtml.js */
// autogenerated from user_menu_yes.bemhtml
block('user').mod('menu', 'yes').mode('user-menu')(function() {
    var userMenu = applyNext();

    this.ctx.js.i18n.nah && userMenu.splice(3, 0, {
        elem: 'item',
        type: 'nah',
        content: {
            block: 'link',
            content: this.ctx.js.i18n.nah,
            url: this['i-services'].serviceUrl('nahodki'),
            counter: this.ctx.counters.nahodki
        }
    })

    return userMenu;
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/serp-user/_menu/serp-user_menu_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/serp-user/__icon/serp-user__icon.bemhtml.js */
// autogenerated from user__icon.bemhtml
block('user').elem('icon').match(function() {
    return this._uid;
})(
    def()(function() {
        return applyNext({
            _avatarId: this.ctx.avatarId
        });
    }),
    js()(function() {
        return { avatarId: this._avatarId };
    }),
    mode('host')('//avatars.mds.yandex.net'),
    mode('icon')(function() {
        return [
            apply('host'),
            '/get-yapic/',
            this._avatarId,
            '/islands-',
            apply('iconSize')
        ].join('');
    })
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/serp-user/__icon/serp-user__icon.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/notice/notice.bemhtml.js */
// autogenerated from ../../../../libs/islands-user/common.blocks/notice/notice.bemhtml
block('notice')(
    tag()('span'),

    attrs()({
        role: 'alert',
        'aria-live': 'assertive',
        /* Для IE8 и старых версий JAWS. */
        'aria-atomic': true
    }),

    /* Проверка на undefined нужна для случая { count: 0 }. */
    match(function() {
        return typeof this.ctx.count != 'undefined';
    })(
        /* Сохраняем начальное значение. */
        js()(function() {
            return {
                count: this.ctx.count
            };
        }),

        content()(function() {
            return {
                elem: 'count',
                url: this.ctx.url,
                maxCount: this.ctx.maxCount,
                content: this.ctx.count
            };
        })
    )
)

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/notice/notice.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/notice/notice.bemhtml.js */
// autogenerated from notice.bemhtml
block('notice').js()(true);

block('notice').mod('more', 'no').elem('count').content()(function() {
    var count = parseInt(this.ctx.count, 10);

    return Math.min(count, this.ctx.maxCount || 99);
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/notice/notice.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/notice/__count/notice__count.bemhtml.js */
// autogenerated from ../../../../../libs/islands-user/common.blocks/notice/__count/notice__count.bemhtml
block('notice').elem('count')(
    tag()('span'),

    match(function() { return !this.ctx.url; }).mix()([{
        elem: 'plain'
    }]),

    match(function() { return this.ctx.url; })(
        tag()('a'),

        attrs()(function() {
            return {
                href: this.ctx.url
            };
        })
    ),

    content()(function() {
        return [
            {
                elem: 'text'
            },
            {
                elem: 'value',
                maxCount: this.ctx.maxCount,
                count: this.ctx.content
            }
        ];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/notice/__count/notice__count.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/notice/__text/notice__text.bemhtml.js */
// autogenerated from ../../../../../libs/islands-user/common.blocks/notice/__text/notice__text.bemhtml
block('notice').elem('text')(
    tag()('span'),

    mix()([{
        block: 'a11y-hidden'
    }]),

    content()(function() {
        return 'notifications';
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/notice/__text/notice__text.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/notice/__value/notice__value.bemhtml.js */
// autogenerated from ../../../../../libs/islands-user/common.blocks/notice/__value/notice__value.bemhtml
block('notice').elem('value')(
    tag()('span'),

    mode('format-value')(function() {
        var count,
            ctx = this.ctx,
            maxCount;

        count = parseInt(ctx.count, 10);
        maxCount = ctx.maxCount ? ctx.maxCount : 99;
        return count > maxCount ? maxCount + '+' : count;
    }),

    content()(function() {
        return apply('format-value');
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/notice/__value/notice__value.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/video/blocks-deskpad/video-player/video-player.bemhtml.js */
// autogenerated from video-player.bemhtml
block('video-player')(
    js()(true),
    content()(function() {
        return [
            {
                block: 'spin2',
                mods: {
                    size: 'm'
                },
                mix: {
                    block: 'video-player',
                    elem: 'spin'
                }
            },
            this.ctx.content, {
                elem: 'error-container',
                content: [{
                    elem: 'player-error',
                    content: [
                        this.ctx.errorMsg[0],
                        '<br>',
                        this.ctx.errorMsg[1]
                    ]
                }]
            }
        ];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/video/blocks-deskpad/video-player/video-player.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/libs/fiji-contribs/video-player/blocks-common/player/player.bemhtml.js */
block('player').js()(true);

/* end: /Users/miripiruni/Documents/www/web4/libs/fiji-contribs/video-player/blocks-common/player/player.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/player/player.bemhtml.js */
// autogenerated from ../../../../libs/video-player/blocks-common/player/player.bemhtml
block('player').js()(true)

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/player/player.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/libs/fiji-contribs/video-player/blocks-common/player/_remote/player_remote_client.bemhtml.js */
block('player').mod('remote', 'client').content()({
    elem: 'iframe',
    tag: 'iframe',
    attrs: {
        width: '100%',
        height: '100%',
        scrolling: 'no',
        frameborder: '0',
        allowfullscreen: true
    }
});

/* end: /Users/miripiruni/Documents/www/web4/libs/fiji-contribs/video-player/blocks-common/player/_remote/player_remote_client.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/player/_remote/player_remote_client.bemhtml.js */
// autogenerated from ../../../../../libs/video-player/blocks-common/player/_remote/player_remote_client.bemhtml
block('player').mod('remote', 'client').content()(({
    elem: 'iframe',
    tag: 'iframe',
    attrs: {
        width: '100%',
        height: '100%',
        scrolling: 'no',
        frameborder: '0',
        allowfullscreen: true
    }
}))

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/player/_remote/player_remote_client.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/video-thumb/video-thumb.bemhtml.js */
block('video-thumb')(
    content()(function() {
        return [
            {
                elem: 'bg',
                attrs: !this.ctx.lazy && {
                    style: 'background-image: url(' + this.ctx.bgImg + ')'
                },
                mix: this.ctx.lazy && {
                    block: 'lazy-image',
                    elem: 'item',
                    js: { src: this.ctx.bgImg, type: 'bg' }
                }
            },
            this.ctx.content,
            this.mods.hover === 'yes' && {
                elem: 'hover',
                content: this.ctx.hoverText
            },
            {
                elem: 'play',
                mods: {
                    external: this.ctx.isExternalButton ? 'yes' : ''
                }
            },
            {
                elem: 'duration',
                tag: 'span',
                content: [
                    this.ctx.duration,
                    this.ctx.quality && {
                        elem: 'quality',
                        content: this.ctx.quality
                    }
                ]
            },
            this.mods.recent === 'yes' ? {
                elem: 'recent',
                tag: 'span',
                content: this.ctx.recentText
            } : ''
        ];
    }),

    elem('quality').tag()('span'),
    elem('play').tag()('i')
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/video-thumb/video-thumb.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/video-thumb/_empty/video-thumb_empty_yes.bemhtml.js */
// autogenerated from video-thumb_empty_yes.bemhtml
block('video-thumb').mod('empty', 'yes').content()([{
    elem: 'bg'
}, {
    elem: 'play',
    mods: {
        external: 'yes'
    }
}]);

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/video-thumb/_empty/video-thumb_empty_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-desktop/input/_voice-search/input_voice-search_yes.bemhtml.js */
block('input').mod('voice-search', 'yes')(
    elem('box').content()(function() {
        return [applyNext(), {
            elem: 'voice-search'
        }];
    }),
    elem('voice-search')(
        tag()('span'),
        attrs()({
            unselectable: 'on',
            role: 'button'
        })
    )
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-desktop/input/_voice-search/input_voice-search_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/construct/blocks-common/warning/warning.bemhtml.js */
// autogenerated from warning.bemhtml
block('warning')(
    tag()('span'),
    elem('item').tag()('span'),
    elem('padding-left').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/construct/blocks-common/warning/warning.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-tv/blocks-deskpad/z-tv/z-tv.bemhtml.js */
block('z-tv')(
    elem('timeboard')(
        tag()('table'),
        attrs()({
            cellpadding: '0',
            cellspacing: '0'
        }),
        content()(function() {
            return {
                elem: 'timeboard-row',
                content: this.ctx.content
            };
        })
    ),
    elem('timeboard-row').tag()('tr'),
    elem('timeboard-cell').tag()('td'),

    elem('timetable')(
        tag()('table'),
        attrs()({
            cellpadding: '0',
            cellspacing: '0'
        })
    ),
    elem('timetable-row').tag()('tr'),
    elem('timetable-time').tag()('td'),
    elem('timetable-text').tag()('td')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-tv/blocks-deskpad/z-tv/z-tv.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-tv/blocks-deskpad/z-tv/_type/z-tv_type_program.bemhtml.js */
// autogenerated from z-tv_type_program.bemhtml
block('z-tv')(
    elem('series').tag()('span'),
    elem('emphasis').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-tv/blocks-deskpad/z-tv/_type/z-tv_type_program.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-auto/blocks-deskpad/z-auto/__photos/z-auto__photos.bemhtml.js */
// autogenerated from z-auto__photos.bemhtml
block('z-auto').elem('photos').tag()('ul');

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-auto/blocks-deskpad/z-auto/__photos/z-auto__photos.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-auto/blocks-common/z-auto/__photo/z-auto__photo.bemhtml.js */
// autogenerated from z-auto__photo.bemhtml
block('z-auto').elem('photo').tag()('li');

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-auto/blocks-common/z-auto/__photo/z-auto__photo.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-auto/blocks-deskpad/z-auto/__photo/z-auto__photo.bemhtml.js */
// autogenerated from z-auto__photo.bemhtml
block('z-auto').elem('photo').tag()('li');

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-auto/blocks-deskpad/z-auto/__photo/z-auto__photo.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-converter/blocks-common/z-converter/z-converter.bemhtml.js */
// autogenerated from z-converter.bemhtml
block('z-converter').elem('equal').tag()('span');

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-converter/blocks-common/z-converter/z-converter.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-default-search/blocks-deskpad/z-default-search/_sharer/z-default-search_sharer_yes.bemhtml.js */
// autogenerated from z-default-search_sharer_yes.bemhtml
block('z-default-search').mod('sharer', 'yes')(
    js()(function() {
        return this.extend(this.ctx.js, {
            sharerWindowName: 'z-default-search_sharer_yes'
        });
    }),
    // @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open#Best_practices
    elem('sharer-link').mode('target')('z-default-search_sharer_yes')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-default-search/blocks-deskpad/z-default-search/_sharer/z-default-search_sharer_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-news/blocks-common/z-news/z-news.bemhtml.js */
block('z-news')(
    elem('image')(
        tag()('img'),
        mix()({ block: 'content-placeholder' }),
        attrs()(function() {
            var ctx = this.ctx,
                a = {
                    src: ctx.url || '//yastatic.net/lego/_/La6qi18Z8LwgnZdsAr1qy1GwCwo.gif',
                    alt: ctx.alt || ''
                };

            ctx.width && (a.width = ctx.width);
            ctx.height && (a.height = ctx.height);

            return a;
        })
    ),
    elem('count').tag()('span'),
    elem('timeago').tag()('span'),
    elem('greenurl').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-news/blocks-common/z-news/z-news.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-news/blocks-deskpad/z-news/_type/z-news_type_3docs-big.bemhtml.js */
// autogenerated from z-news_type_3docs-big.bemhtml
block('z-news').mod('type', '3docs-big').elem('thumb').match(function() {
    return this.ctx.content;
}).content()(function() {
    return [{
        elem: 'thumb-image',
        attrs: {
            style: 'background-image:url(' + this.ctx.backgroundImage + ');' + this.ctx.backgroundImageIe
        }
    }, {
        elem: 'thumb-content',
        content: this.ctx.content
    }];
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-news/blocks-deskpad/z-news/_type/z-news_type_3docs-big.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-news/blocks-common/z-news-rubrics/z-news-rubrics.bemhtml.js */
block('z-news-rubrics').elem('image')(
    tag()('img'),
    mix()({ block: 'content-placeholder' }),
    attrs()(function() {
        var ctx = this.ctx,
            a = {
                src: ctx.url || '//yastatic.net/lego/_/La6qi18Z8LwgnZdsAr1qy1GwCwo.gif',
                alt: ctx.alt || ''
            };

        ctx.width && (a.width = ctx.width);
        ctx.height && (a.height = ctx.height);

        return a;
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-news/blocks-common/z-news-rubrics/z-news-rubrics.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-desktop/z-panorama/z-panorama.bemhtml.js */
// autogenerated from ../../../../libs/z-panorama/blocks-desktop/z-panorama/z-panorama.bemhtml
block('z-panorama').elem('pane').mix()({
    block: 'content-placeholder'
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-desktop/z-panorama/z-panorama.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-time/blocks-common/z-time/z-time.bemhtml.js */
// autogenerated from z-time.bemhtml
block('z-time')(
    elem('value').tag()('span'),
    elem('difference').tag()('span'),
    elem('day').tag()('span'),
    elem('city').tag()('span'),
    elem('zone-value').tag()('span'),
    elem('date').tag()('span'),
    elem('hour').tag()('span'),
    elem('divider').tag()('span'),
    elem('min').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-time/blocks-common/z-time/z-time.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-yaca-games/blocks-common/z-yaca-games/z-yaca-games.bemhtml.js */
// autogenerated from z-yaca-games.bemhtml
block('z-yaca-games')(
    elem('items')(
        tag()('table'),
        content()(function() {
            return {
                tag: 'tr',
                content: (this.ctx.items || []).map(function(item) {
                    return {
                        elem: 'item',
                        item: item,
                        tag: 'td'
                    }
                })
            };
        })
    ),
    elem('item').content()(function() {
        return [{
            elem: 'thumb',
            content: [{
                elem: 'thumb-wrap',
                mix: {
                    block: 'content-placeholder'
                },
                url: this.ctx.item.game_url,
                thumb_counter: this.ctx.item.thumb_counter,
                img_url: this.ctx.item.screenshot
            }, {
                block: 'button',
                mods: {
                    size: 's',
                    counter: 'yes'
                },
                url: this.ctx.item.game_url,
                target: '_blank',
                content: this.ctx.item.button_title,
                counter: this.ctx.item.btn_counter,
                'show-counter': 100
            }]
        }, {
            elem: 'descr',
            content: [{
                block: 'link',
                mix: {
                    block: 'z-yaca-games',
                    elem: 'game-link'
                },
                mods: {
                    counter: 'yes'
                },
                url: this.ctx.item.green_url,
                target: '_blank',
                counter: this.ctx.item.link_counter,
                content: this.ctx.item.title
            }, {
                elem: 'clamp',
                content: this.ctx.item.descr
            }]
        }];
    }),
    elem('thumb-wrap')(
        tag()('a'),
        attrs()(function() {
            return {
                href: this.ctx.url,
                onmousedown: this.ctx.thumb_counter,
                target: '_blank'
            };
        }),
        content()(function() {
            return {
                elem: 'thumb-img',
                src: this.ctx.img_url
            };
        })
    ),
    elem('thumb-img')(
        tag()('img'),
        attrs()(function() {
            return {
                // TODO: убрать, когда сделают WIZARD-6871
                src: this.ctx.src.replace('http:', '')
            };
        })
    )
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-yaca-games/blocks-common/z-yaca-games/z-yaca-games.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/link/_counter/link_counter_yes.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/link/_counter/link_counter_yes.bemhtml
block('link').mod('counter', 'yes').match(function() {
    return this.ctx.counter;
}).js()(function() {
    var ctx = this.ctx,
        jsParams = {
            counter: ctx.counter
        };

    if (ctx['show-counter']) {
        jsParams['show-counter'] = ctx['show-counter'];
    }

    return jsParams;
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/link/_counter/link_counter_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/button/_counter/button_counter_yes.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/button/_counter/button_counter_yes.bemhtml
block('button').mod('counter', 'yes').match(function() { return this.ctx.counter; })(
    js()(function() {
        var ctx = this.ctx,
            jsParams = {
                counter: ctx.counter
            };

        if (ctx['show-counter']) {
            jsParams['show-counter'] = ctx['show-counter'];
        }

        return jsParams;
    }),

    attrs()(function() {
        return this.extend(applyNext(), {
            onmousedown: this.ctx.counter
        });
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/button/_counter/button_counter_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-address/blocks-desktop/z-address-ymaps/_type/z-address-ymaps_type_offline.bemhtml.js */
// autogenerated from z-address-ymaps_type_offline.bemhtml
block('z-address-ymaps').mod('type', 'offline').elem('title').tag()('h3');

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-address/blocks-desktop/z-address-ymaps/_type/z-address-ymaps_type_offline.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-deskpad/accordion/accordion.bemhtml.js */
// autogenerated from accordion.bemhtml
block('accordion')(
    js()(true),
    content()(function() {
        return [{
            elem: 'head',
            content: this.ctx.head
        }, {
            elem: 'content-body',
            content: {
                elem: 'content',
                content: this.ctx.content
            }
        }];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-deskpad/accordion/accordion.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/button/_round/button_round_yes.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/button/_round/button_round_yes.bemhtml
block('button').mod('round', 'yes')(
    content()(function() {
        return {
            block: 'image',
            alt: this.ctx.alt,
            mix: {
                block: 'button',
                elem: 'icon'
            }
        };
    }),

    def()(function() {
        this.ctx.mods = this.extend({
            'only-icon': 'yes'
        }, this.ctx.mods);

        return applyNext();
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/button/_round/button_round_yes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-desktop/popup/_type/popup_type_modal-smooth.bemhtml.js */
// autogenerated from popup_type_modal-smooth.bemhtml
block('popup').mod('type', 'modal-smooth').def()(function() {
    var underMods = this.ctx.underMods;
    underMods['popup-type'] || (underMods['popup-type'] = 'modal-smooth');
    return applyNext();
});

/* end: /Users/miripiruni/Documents/www/web4/blocks-desktop/popup/_type/popup_type_modal-smooth.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-afisha/blocks-common/z-afisha/__poster/z-afisha__poster.bemhtml.js */
// autogenerated from z-afisha__poster.bemhtml
block('z-afisha').elem('poster').content()(
    match(function() {
        return true;
    })(function() {
        return {
            elem: 'poster-img',
            tag: 'img',
            attrs: {
                src: this.ctx.url,
                alt: this.ctx.alt
            }
        };
    }),
    mod('placeholder', 'yes')('')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-afisha/blocks-common/z-afisha/__poster/z-afisha__poster.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-afisha/blocks-common/z-afisha/__staff/z-afisha__staff.bemhtml.js */
// autogenerated from z-afisha__staff.bemhtml
block('z-afisha').elem('label')(
    tag()('b'),
    content()(function() {
        return this.ctx.content + ':';
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-afisha/blocks-common/z-afisha/__staff/z-afisha__staff.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-afisha/blocks-deskpad/z-afisha/__layout/z-afisha__layout.bemhtml.js */
// autogenerated from z-afisha__layout.bemhtml
block('z-afisha')(
    elem('layout').tag()('table'),
    elem('layout-row').tag()('tr'),
    elem('layout-cell').tag()('td')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-afisha/blocks-deskpad/z-afisha/__layout/z-afisha__layout.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-afisha/blocks-deskpad/z-afisha/__events/z-afisha__events.bemhtml.js */
// autogenerated from z-afisha__events.bemhtml
block('z-afisha')(
    elem('events')(
        tag()('table'),
        mix()({
            elem: 'layout'
        })
    ),
    elem('events-day').tag()('tbody'),
    elem('events-row')(
        tag()('tr'),
        mix()({
            elem: 'layout-row'
        })
    ),
    elem('events-cell')(
        tag()('td'),
        mix()({
            elem: 'layout-cell'
        })
    ),
    elem('events-time').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-afisha/blocks-deskpad/z-afisha/__events/z-afisha__events.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-afisha/blocks-deskpad/z-afisha/__places/z-afisha__places.bemhtml.js */
// autogenerated from z-afisha__places.bemhtml
block('z-afisha')(
    elem('places')(
        tag()('table'),
        mix()({
            elem: 'layout'
        })
    ),
    elem('places-row')(
        tag()('tr'),
        mix()({
            elem: 'layout-row'
        })
    ),
    elem('places-cell')(
        tag()('td'),
        mix()({
            elem: 'layout-cell'
        })
    ),
    elem('places-time-text').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-afisha/blocks-deskpad/z-afisha/__places/z-afisha__places.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-afisha/blocks-deskpad/z-afisha/__premiere/z-afisha__premiere.bemhtml.js */
// autogenerated from z-afisha__premiere.bemhtml
block('z-afisha').elem('premiere-date').tag()('span');

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-afisha/blocks-deskpad/z-afisha/__premiere/z-afisha__premiere.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-audio/blocks-common/audio-track/__artist/audio-track__artist.bemhtml.js */
// autogenerated from audio-track__artist.bemhtml
block('audio-track').elem('artist')(
    tag()('span'),
    content()(function() {
        return ' &mdash; ' + this.ctx.content;
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-audio/blocks-common/audio-track/__artist/audio-track__artist.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/slider/slider.bemhtml.js */
block('slider')(
    def()(function() {
        var id = this.generateId();
        return applyNext({
            _inSlider: true,
            _titleId: 'title' + id
        })
    }),

    content()(function() {
        return [
            this.ctx.content, {
                elem: 'body',
                content: {
                    elem: 'click'
                }
            }
        ];
    }),

    elem('runner')(
        match(function() {
            return !this._done;
        }).def()(function() {
            return applyNext({
                _value: this.ctx.value,
                _done: true
            });
        }),

        tag()('a'),
        attrs()(function() {
            return {
                hideFocus: 'true',
                id: this.ctx.id,
                role: 'slider',
                'aria-valuenow': this._value,
                'aria-valuemin': this.ctx.min,
                'aria-valuemax': this.ctx.max,
                'aria-disabled': (this.ctx.mods || {}).disabled === 'yes',
                'aria-labelledby': this.ctx.labelledby,
                'aria-controls': this.ctx.inputId
            };
        }),
        content()({
            elem: 'text'
        })
    ),

    elem('text')(
        tag()('span'),
        content()(function() {
            return this._value;
        })
    )
);

// elem click {
//        this.mods['off-switcher'], content: { elem: 'off-switcher' }
//    }
block('input').match(function() { return this._inSlider; }).mix()([{
    block: 'slider',
    elem: 'input'
}]);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/slider/slider.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/slider/__mark/slider__mark.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/slider/__mark/slider__mark.bemhtml
block('slider').elem('mark').attrs()({
    'aria-hidden': true
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/slider/__mark/slider__mark.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/slider/_orientation/slider_orientation.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/slider/_orientation/slider_orientation.bemhtml
block('slider').match(function() {
    return this.mods.orientation;
}).elem('body').mix().match(function() {
    return !this.ctx._wOrigin;
})(function() {
    var m = applyNext({
        'ctx._wOrigin': true
    }) || [];
    
    m.push({
        elemMods: {
            origin: this.mods.orientation === 'vert' ? 'y' : 'x'
        }
    });

    return m;
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/slider/_orientation/slider_orientation.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/slider/_type/slider_type.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/slider/_type/slider_type.bemhtml
block('slider').match(function() {
    return this.mods.type;
}).elem('body').mix().match(function() {
    return !this.ctx._wType;
})(function() {
    var m = applyNext({
        'ctx._wType': true
    }) || [];
    
    m.push({
        elemMods: {
            type: this.mods.type
        }
    });

    return m;
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/slider/_type/slider_type.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-auto-regions/blocks-deskpad/z-auto-regions/z-auto-regions.bemhtml.js */
// autogenerated from z-auto-regions.bemhtml
block('z-auto-regions')(
    elem('sign').content()(function() {
        return {
            elem: 'sign-i',
            content: this.ctx.content
        };
    }),
    elem('country').content()(function() {
        return [
            this.ctx.country, {
                elem: 'country-flag',
                tag: 'i',
                mods: {
                    country: this.ctx.country.toLowerCase()
                }
            }
        ];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-auto-regions/blocks-deskpad/z-auto-regions/z-auto-regions.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/input/__message/input__message.bemhtml.js */
// autogenerated from ../../../../../libs/islands-components/common.blocks/input/__message/input__message.bemhtml
block('input').elem('message')(
    tag()('span'),

    attrs()({
        'aria-hidden': 'true'
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/input/__message/input__message.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/input/__message/_type/input__message_type_error.bemhtml.js */
// autogenerated from ../../../../../../libs/islands-components/common.blocks/input/__message/_type/input__message_type_error.bemhtml
block('input').elem('message').elemMod('type', 'error').attrs()({
    role: 'alert'
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/input/__message/_type/input__message_type_error.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/input/__message/_visibility/input__message_visibility_visible.bemhtml.js */
// autogenerated from ../../../../../../libs/islands-components/common.blocks/input/__message/_visibility/input__message_visibility_visible.bemhtml
block('input').elem('message').elemMod('visibility', 'visible').attrs()(function() {
    return this.extend(applyNext(), {
        'aria-hidden': 'false'
    });
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/input/__message/_visibility/input__message_visibility_visible.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-calculator/blocks-deskpad/z-calculator/z-calculator.bemhtml.js */
block('z-calculator').elem('sup').tag()('span');

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-calculator/blocks-deskpad/z-calculator/z-calculator.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-calculator/blocks-deskpad/z-calculator-display/z-calculator-display.bemhtml.js */
block('z-calculator-display')(
    elem('input-string').tag()('span'),
    elem('equal').tag()('span'),
    elem('result').tag()('span'),
    elem('sup').tag()('sup'),
    elem('infinity')(
        tag()('span'),
        content()('∞')
    )
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-calculator/blocks-deskpad/z-calculator-display/z-calculator-display.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-colors/blocks-deskpad/z-colors/z-colors.bemhtml.js */
block('z-colors')(
    def()(function() {
        var js = this.ctx.js;

        return applyNext({
            _cellHeight: js.cellHeight,
            _prevCount: js.prevCount,
            _nextCount: js.nextCount
        });
    }),
    attrs()(function() {
        return {
            // 2 - Высота текущей ячейки
            style: 'height:' + this._cellHeight * (2 + this._prevCount + this._nextCount) + 'px;'
        };
    }),
    elem('table-cell').attrs()(function() {
        return {
            style: 'background-color:#' + this.ctx.hexValue + ';' +
                'color:#' + this.ctx.js.contrastValue + ';'
        };
    }),
    elem('table-cell').mod('selected', 'yes').attrs()(function() {
        return {
            style: 'background-color:#' + this.ctx.hexValue + ';' +
                'color:#' + this.ctx.js.contrastValue + ';' +
                'border-color:#' + this.ctx.js.contrastValue + ';'
        };
    }),
    elem('table-cell').mod('first', 'yes').content()(function() {
        return {
            elem: 'spinner-wrapper',
            attrs: {
                style: 'height:' + (this._cellHeight - 2) + 'px;'
            },
            content: this.ctx.content
        };
    }),
    elem('color-name').mod('selected', 'yes').wrap()(function() {
        return {
            elem: 'color-name-wrapper-outer',
            content: {
                elem: 'color-name-wrapper-inner',
                content: this.ctx
            }
        };
    })
);

block('z-colors-error').replace()(function() {
    return {
        block: 'popup',
        js: {
            directions: [{
                to: 'bottom'
            }]
        },
        mix: {
            block: 'z-colors-error'
        },
        content: [{
            elem: 'tail'
        }, {
            block: 'popup',
            elem: 'content',
            mix: {
                block: 'z-colors-error',
                elem: 'popup-content'
            },
            content: this.ctx.content
        }]
    };
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-colors/blocks-deskpad/z-colors/z-colors.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-colors/blocks-deskpad/z-colors-input/z-colors-input.bemhtml.js */
block('z-colors-input').mix()({ block: 'clearfix' });

block('z-colors-input').elem('input').match(function() {
    return !this.ctx.tag;
}).replace()(function() {
    var ctx = this.ctx;
    return [
        {
            block: ctx.block,
            elem: ctx.elem,
            tag: 'input',
            attrs: {
                autocomplete: 'off',
                value: ctx.value,
                type: ctx.type || 'text',
                maxlength: ctx.maxlength,
                min: ctx.min,
                max: ctx.max,
                step: ctx.step,
                style: 'background-color:#' + ctx.color.hexValue + ';' +
                    'color:#' + ctx.color.contrastValue + ';' +
                    'border-color:#' + ctx.color.contrastValue + ';'
            }
        },
        {
            block: 'popup',
            js: {
                directions: [{
                    to: 'bottom',
                    offset: { top: 5 }
                }]
            },
            mix: {
                block: 'z-colors-input',
                elem: 'popup'
            },
            content: [
                { elem: 'tail' },
                {
                    block: 'z-colors-input',
                    elem: 'popup-content',
                    min: ctx.min,
                    max: ctx.max,
                    isHEX: ctx.isHEX
                }
            ]
        }
    ];
});

block('z-colors-input').elem('popup-content').replace()(function() {
    var ctx = this.ctx,
        isHEX = ctx.isHEX,
        errorMsgStart = ['Проверьте формат ввода.', (isHEX ? 'Допустимы ' : 'Допустимые значения: ')].join('<br>');

    return {
        block: 'popup',
        elem: 'content',
        mix: {
            block: ctx.block,
            elem: ctx.elem
        },
        content: errorMsgStart + (isHEX ?
            ['цифры (0', '9) и латинские буквы (A', 'F)'] :
            [ctx.min, ctx.max]
        ).join('&ndash;')
    };
});

block('z-colors-input').elem('triplet-inputs').content()(function() {
    return this.ctx.max.map(function(item, index) {
        return {
            elem: 'color-component',
            mix: 'clearfix',
            content: [
                {
                    elem: 'color-component-label',
                    tag: 'span',
                    content: this.ctx.label[index]
                },
                {
                    elem: 'input',
                    maxlength: 3,
                    value: this.ctx.value[index],
                    min: 0,
                    max: item,
                    step: 1,
                    color: this.ctx.color
                }
            ]
        };
    }, this);
});

block('z-colors-input').mod('type', 'hex').content()(function() {
    return {
        elem: 'input',
        value: this.ctx.color.hexValue,
        maxlength: 6,
        color: this.ctx.color,
        max: 'FFFFFF',
        min: '000000',
        isHEX: true
    };
});

block('z-colors-input').mod('type', 'rgb').content()(function() {
    return {
        elem: 'triplet-inputs',
        value: this.ctx.color.rgbValue,
        max: [255, 255, 255],
        color: this.ctx.color,
        label: this.ctx.label
    };
});

block('z-colors-input').mod('type', 'hsv').content()(function() {
    return {
        elem: 'triplet-inputs',
        value: this.ctx.color.hsvValue,
        max: [360, 100, 100],
        color: this.ctx.color,
        label: this.ctx.label
    };
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-colors/blocks-deskpad/z-colors-input/z-colors-input.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/map/blocks-common/metro/metro.bemhtml.js */
// autogenerated from metro.bemhtml
block('metro')(
    elem('label').tag()('span'),
    elem('stations').tag()('ul'),
    elem('item').tag()('li'),
    elem('station')(
        tag()('li'),
        content()(function() {
            return [{
                    elem: 'bullet',
                    tag: 'i',
                    attrs: {
                        style: 'color:#' + this.ctx.color,
                        'aria-hidden': true,
                        role: 'presentation'
                    },
                    content: '●'
                },
                this.ctx.content
            ];
        })
    )
    /* было:
    /* !this._mode === 'dynamic', content: {
    /* этот код не только никогда не вызывался (условия всегда ложно)
    /* но и тормозил шаблоны. Совсем его отрывать, наверное, не правильно.
    /* jabs@ сказал, что сейчас статическое метро не используется, но потом может.
    /* */
    /*
    , content()(function() {
        var cnt = (this.ctx.content || []),
            label, items = [];

        cnt.forEach(function(item) {
            if (item.elem === 'label')
                label = item;
            else
                items.push(item);
        });

        return [
            label, {
                elem: 'stations',
                content: items
            }
        ];
    })
    */
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/map/blocks-common/metro/metro.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-contest/blocks-deskpad/z-contest/z-contest.bemhtml.js */
block('z-contest')(
    elem('image').content()(function() {
        return {
            tag: 'img',
            attrs: {
                src: this.ctx.url
            }
        };
    }),
    elem('*').match(function() {
        return this.elem === 'pilot' || this.elem === 'team';
    }).match(function() {
        return this.ctx.url;
    }).content()(function() {
        return {
            block: 'link',
            url: this.ctx.url,
            target: this.ctx.target,
            counter: this.ctx.counter,
            content: {
                block: 'z-contest',
                content: this.ctx.content
            }
        };
    }),
    elem('sportcar').attrs()(function() {
        return {
            style: 'background-image: url(' + this.ctx.image_url + ')'
        };
    }),
    elem('shift').content()(function() {
        if (this.ctx.value == 0) return;
        return [{
                elem: 'arrow',
                elemMods: {
                    direction: this.ctx.value < 0 ? 'down' : 'up'
                },
                content: this.ctx.value < 0 ? '↓' : '↑'
            },
            Math.abs(this.ctx.value)
        ];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-contest/blocks-deskpad/z-contest/z-contest.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-contest/blocks-deskpad/z-contest-table/z-contest-table.bemhtml.js */
// autogenerated from z-contest-table.bemhtml
block('z-contest-table')(
    elem('table').tag()('table'),
    elem('row').tag()('tr'),
    // Добавляем к первой ячейке контейнер для позиционарования трёх точек
    elem('row').elemMod('dots', 'yes').content()(function() {
        var content = this.ctx.content;
        content[0].content = [{
            elem: 'dots-wrapper'
        }, content[0].content];
        return content;
    }),
    elem('cell')(
        tag()('td'),
        attrs()(function() {
            return {
                colspan: this.ctx.span
            };
        })
    ),
    elem('cell').elemMod('head', 'yes').tag()('th'),
    elem('cell-text').def()(function() {
        return applyCtx(this.ctx.content);
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-contest/blocks-deskpad/z-contest-table/z-contest-table.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-entity-search/blocks-common/z-entity-image/z-entity-image.bemhtml.js */
// autogenerated from z-entity-image.bemhtml
block('z-entity-image').content()(function() {
    var style = '';

    if (this.ctx.size &&
        this.ctx.size.width &&
        this.ctx.size.height &&
        this.ctx.isGallery) {
        style = 'width: ' + this.ctx.size.width + 'px; height: ' + this.ctx.size.height + 'px';
    }

    return {
        block: 'image',
        mix: {
            block: 'z-entity-image',
            elem: 'image'
        },
        url: this.ctx.url,
        title: this.ctx.title,
        attrs: {
            style: style,
            onload: 'this.loaded = 1',
            'data-entity-id': this.ctx.entityId,
            onerror: 'window[\'z-entity-image__failed\'] = (window[\'z-entity-image__failed\'] || 0) + 1;' +
                'this.error = 1; this.style.display = \'none\''
        }
    }
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-entity-search/blocks-common/z-entity-image/z-entity-image.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-entity-search/blocks-deskpad/z-entity-clips/__items/z-entity-clips__items.bemhtml.js */
// autogenerated from z-entity-clips__items.bemhtml
block('z-entity-clips').elem('items').tag()('ul');

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-entity-search/blocks-deskpad/z-entity-clips/__items/z-entity-clips__items.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-entity-search/blocks-deskpad/z-entity-clips/__item/z-entity-clips__item.bemhtml.js */
// autogenerated from z-entity-clips__item.bemhtml
block('z-entity-clips').elem('item').tag()('li');

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-entity-search/blocks-deskpad/z-entity-clips/__item/z-entity-clips__item.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-entity-search/blocks-common/z-entity-collection/__breadcrumbs/z-entity-collection__breadcrumbs.bemhtml.js */
// autogenerated from z-entity-collection__breadcrumbs.bemhtml
block('z-entity-collection').elem('breadcrumb-item').tag()('span');

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-entity-search/blocks-common/z-entity-collection/__breadcrumbs/z-entity-collection__breadcrumbs.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-entity-search/blocks-common/z-entity-price/z-entity-price.bemhtml.js */
// autogenerated from z-entity-price.bemhtml
block('z-entity-price')(
    tag()('span'),
    elem('text-price-value').tag()('span'),
    elem('text-price-cents').tag()('span'),
    elem('text-price-currency').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-entity-search/blocks-common/z-entity-price/z-entity-price.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/events-list/events-list.bemhtml.js */
// autogenerated from events-list.bemhtml
block('events-list')(
    elem('list').tag()('table'),
    elem('item').tag()('tr'),
    elem('item-entry')(
        tag()('td'),
        match(function() {
            return this.ctx.colspan;
        }).attrs()(function() {
            return {
                colspan: this.ctx.colspan
            };
        })
    )
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/events-list/events-list.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-entity-search/blocks-deskpad/z-entity-navigator/_type/z-entity-navigator_type_seasons.bemhtml.js */
// autogenerated from z-entity-navigator_type_seasons.bemhtml
block('z-entity-navigator').mod('type', 'seasons').elem('buttons').content()(function() {
    return {
        block: 'select',
        mods: {
            size: this.ctx.size,
            theme: 'normal',
            layout: 'fixed'
        },
        mix: {
            block: 'z-entity-navigator',
            elem: 'select'
        },
        content: [{
            block: 'button',
            mods: {
                size: this.ctx.size,
                arrow: 'down'
            },
            counter: this.ctx.counter,
            content: this.ctx.text // название сезона
        }, {
            elem: 'control',
            content: this.ctx.controls
        }]
    };
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-entity-search/blocks-deskpad/z-entity-navigator/_type/z-entity-navigator_type_seasons.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-entity-search/blocks-common/z-entity-sport/z-entity-sport.bemhtml.js */
// autogenerated from z-entity-sport.bemhtml
block('z-entity-sport')(
    elem('table').tag()('table'),
    elem('event-match').tag()('tr'),
    elem('event-match-date').tag()('td'),
    elem('event-match-content').tag()('td'),
    elem('event-match-stats').tag()('td'),
    elem('event-match-date-time').tag()('span'),
    elem('event-caption')(
        tag()('tr'),

        content()(function() {
            return {
                elem: 'event-caption-text',
                attrs: {
                    colspan: '3'
                },
                content: this.ctx.content
            };
        })
    ),
    elem('event-caption-text').tag()('td'),
    elem('event-match-team').tag()('span'),
    elem('event-match-score').tag()('span'),
    elem('rank-table-tr').tag()('tr'),
    elem('rank-table-th').tag()('th'),
    elem('rank-table-td').tag()('td'),
    elem('rank-table-header').tag()('tr'),
    elem('rank-table-content').tag()('tbody')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-entity-search/blocks-common/z-entity-sport/z-entity-sport.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-fines/blocks-deskpad/z-fines/z-fines.bemhtml.js */
// autogenerated from z-fines.bemhtml
block('z-fines')(
    elem('iframe')(
        tag()('iframe'),
        attrs()({
            frameborder: 0
        })
    ),
    elem('form')(
        tag()('form'),
        attrs()(function() {
            return {
                method: 'get',
                action: this.ctx.action,
                target: this.ctx.target
            };
        }),
        content()(function() {
            return [
                this.ctx.content, {
                    tag: 'input',
                    attrs: {
                        name: 'action',
                        value: '1',
                        type: 'hidden'
                    }
                }, {
                    tag: 'input',
                    attrs: {
                        name: '_openstat',
                        value: 'yandex;gibddkoldun;button',
                        type: 'hidden'
                    }
                }
            ];
        })
    )
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-fines/blocks-deskpad/z-fines/z-fines.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-how-to/blocks-desktop/z-how-to/z-how-to.bemhtml.js */
// autogenerated from z-how-to.bemhtml
block('z-how-to')(
    elem('list').tag()('ol'),
    elem('list-item').tag()('li')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-how-to/blocks-desktop/z-how-to/z-how-to.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-images/blocks-common/z-images/__paranja/z-images__paranja.bemhtml.js */
block('z-images').elem('paranja').content()(function() {
    return {
        block: 'z-images',
        elem: 'paranja-button-wrapper',
        content: {
            block: 'button',
            mods: {
                size: 'm',
                theme: 'normal'
            },
            mix: {
                block: 'z-images',
                elem: 'paranja-button'
            },
            content: 'Посмотреть картинки'
        }
    };
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-images/blocks-common/z-images/__paranja/z-images__paranja.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-images/blocks-deskpad/z-images/z-images.bemhtml.js */
// autogenerated from z-images.bemhtml
block('z-images')(
    elem('thumbs').tag()('ul'),
    elem('thumb')(
        tag()('li'),
        mix()({
            block: 'content-placeholder'
        }),
        attrs()(function() {
            return {
                style: this.ctx.style
            };
        })
    ),
    elem('link')(
        tag()('a'),
        mix()({
            block: 'link'
        }),
        attrs()(function() {
            var a = {
                href: this.ctx.url
            };
            this.ctx.counter && (a.onmousedown = this.ctx.counter);
            this.ctx.target && this.ctx.target !== '_self' && (a.target = this.ctx.target);

            return a;
        })
    ),
    elem('image')(
        tag()('img'),
        attrs()(function() {
            return {
                src: this.ctx.url,
                style: this.ctx.style
            };
        })
    ),
    elem('fresh').tag()('span'),
    elem('label').tag()('span'),
    elem('resolution').tag()('span'),
    elem('resolution-text').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-images/blocks-deskpad/z-images/z-images.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-images/blocks-deskpad/z-images-related/z-images-related.bemhtml.js */
// autogenerated from z-images-related.bemhtml
block('z-images-related').elem('items').mod('type', 'thumbs')(
    attrs()(function() {
        return {
            style: 'margin-right: ' + (this.ctx.isLast ? 0 : this.ctx.margin) + 'px;' +
                'width: ' + this.ctx.itemWidth + 'px;'
        };
    }),
    content()(function() {
        return {
            elem: 'item-wrap',
            content: {
                block: 'z-images',
                elem: 'link',
                url: this.ctx.url,
                target: this.ctx.target,
                counter: this.ctx.counter,
                content: [{
                    block: 'z-images-related',
                    elem: 'thumb',
                    tag: 'img',
                    attrs: {
                        src: this.ctx.thumbSrc,
                        alt: ''
                    }
                }, {
                    block: 'z-images-related',
                    elem: 'item',
                    content: this.ctx.content
                }]
            }
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-images/blocks-deskpad/z-images-related/z-images-related.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-images/blocks-deskpad/z-images/__title/z-images__title.bemhtml.js */
// autogenerated from z-images__title.bemhtml
block('z-images')(
    elem('title').def()(function() {
        return applyCtx([{
            elem: 'title-wrapper',
            content: [{
                elem: 'gradient'
            }, {
                elem: 'text',
                content: [
                    this.ctx.text, {
                        elem: 'title',
                        content: this.ctx.title
                    }
                ]
            }]
        }, {
            elem: 'arrow'
        }]);
    }),
    elem('daily-title').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-images/blocks-deskpad/z-images/__title/z-images__title.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-indexes/blocks-common/z-indexes/z-indexes.bemhtml.js */
// autogenerated from z-indexes.bemhtml
block('z-indexes')(
    elem('title').tag()('h3'),
    elem('source').mix()({
        block: 'i-bem'
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-indexes/blocks-common/z-indexes/z-indexes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-indexes/blocks-common/digits/digits.bemhtml.js */
// autogenerated from digits.bemhtml
block('digits')(
    js()(true),
    content()(function() {
        return [
            this.ctx.content, {
                elem: 'shade'
            }, {
                elem: 'input',
                size: this.ctx.type
            }
        ];
    }),
    elem('big')(
        tag()('span'),
        mix()(function() {
            return {
                elemMods: {
                    digit: this.ctx.content
                }
            };
        })
    ),
    elem('small')(
        tag()('span'),
        mix()(function() {
            return {
                elemMods: {
                    digit: this.ctx.content
                }
            };
        })
    ),
    elem('input')(
        tag()('input'),
        mix()(function() {
            return {
                elemMods: {
                    hidden: 'yes',
                    size: this.ctx.size
                }
            };
        })
    ),
    elem('shade').mix()({
        elemMods: {
            hidden: 'yes'
        }
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-indexes/blocks-common/digits/digits.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-indexes/blocks-common/search-indexes/search-indexes.bemhtml.js */
// autogenerated from search-indexes.bemhtml
block('search-indexes').tag()('form');

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-indexes/blocks-common/search-indexes/search-indexes.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-lottery/blocks-common/lottery/__awards/lottery__awards.bemhtml.js */
// autogenerated from lottery.bemhtml
block('lottery')(
    elem('awards').tag()('table'),
    elem('awards-row').tag()('tr'),
    elem('awards-cell').tag()('td')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-lottery/blocks-common/lottery/__awards/lottery__awards.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/blocks-common/input/_type/input_type_place.bemhtml.js */
// autogenerated from input_type_place.bemhtml
block('input').mod('type', 'place')(
    def()(function() {
        return applyNext({
            _inputValue: this.ctx.value,
            _noLocationMessage: this.ctx.noLocationMessage
        });
    }),

    match(function() {
        return this._noLocationMessage;
    }).content()(function() {
        return [
            applyNext(),
            {
                block: 'popup2',
                mods: {
                    autoclosable: 'yes',
                    target: 'anchor',
                    theme: 'normal',
                    type: this.ctx.typePopup || 'input-place-no-location'
                },
                directions: this.ctx.directions || ['top-center'],
                content: {
                    elem: 'content',
                    content: this.ctx.noLocationMessage
                }
            }
        ];
    }),

    elem('box').content()(function() {
        return [
            applyNext(),
            {
                elem: 'locator',
                elemMods: this._inputValue ? {
                    hidden: 'yes'
                } : {},
                content: [{
                    elem: 'icon'
                }, {
                    block: 'spin2',
                    mods: {
                        size: 'xxs'
                    }
                }]
            }
        ];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/blocks-common/input/_type/input_type_place.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-desktop/b-icon/b-icon.bemhtml.js */
// autogenerated from ../../../../libs/bem-bl/blocks-desktop/b-icon/b-icon.bemhtml
block('b-icon')(
    tag()('img'),
    attrs()(function() {
        var ctx = this.ctx,
            a = {
                src: '//yastatic.net/lego/_/La6qi18Z8LwgnZdsAr1qy1GwCwo.gif',
                alt: ''
            },
            props = ['alt', 'width', 'height'],
            p;

        ctx.url && (a.src = ctx.url);
        while (p = props.shift()) ctx[p] && (a[p] = ctx[p]);

        return a;
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-desktop/b-icon/b-icon.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-maps/blocks-common/z-maps/z-maps.bemhtml.js */
// autogenerated from z-maps.bemhtml
block('z-maps')(
    elem('photo-image')(
        tag()('img'),
        attrs()(function() {
            return {
                src: this.ctx.url
            };
        })
    ),
    elem('org-list').tag()('ul'),
    elem('org-item')(
        tag()('li'),
        content()(function() {
            return [
                applyNext(),
                this.isLast() || ','
            ];
        })
    )
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-maps/blocks-common/z-maps/z-maps.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-maps/blocks-deskpad/z-maps/__route/z-maps__route.bemhtml.js */
// autogenerated from z-maps__route.bemhtml
block('z-maps')(
    elem('route').tag()('form'),
    elem('inputs')(
        tag()('table'),
        content()(function() {
            return {
                tag: 'tr',
                content: this.ctx.content
            };
        })
    ),
    elem('gap').tag()('td'),
    elem('place').tag()('td'),
    elem('hidden')(
        tag()('input'),
        mix()(function() {
            return {
                elem: this.ctx.name
            };
        }),
        attrs()(function() {
            return {
                type: 'hidden',
                name: this.ctx.name,
                value: this.ctx.value
            };
        })
    )
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-maps/blocks-deskpad/z-maps/__route/z-maps__route.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-market/blocks-common/z-market/z-market.bemhtml.js */
block('z-market')(
    elem('opinion-type').tag()('span'),
    elem('addresses').tag()('i'),
    elem('count').tag()('span'),
    elem('image').match(function() {
        return !this.ctx.tag;
    }).replace()(function() {
        return {
            block: 'link',
            url: this.ctx.url,
            target: this.ctx.target,
            counter: this.ctx.counter,
            content: [
                {
                    block: 'z-market',
                    elem: 'image',
                    tag: 'img',
                    mods: !this.ctx.src && {
                        display: 'none'
                    },
                    attrs: this.ctx.width && this.ctx.height ? {
                        src: this.ctx.src,
                        width: this.ctx.width,
                        height: this.ctx.height,
                        alt: ''
                    } : {
                        src: this.ctx.src,
                        alt: ''
                    }
                }, !this.ctx.src && {
                    block: 'z-market',
                    mods: {
                        cover: 'yes'
                    }
                },
                this.ctx.content || ''
            ]
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-market/blocks-common/z-market/z-market.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-market/blocks-common/z-market/__text-link/z-market__text-link.bemhtml.js */
// autogenerated from z-market__text-link.bemhtml
block('z-market').elem('text-link').attrs()(function() {
    return {
        onmousedown: this.ctx.counter
    };
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-market/blocks-common/z-market/__text-link/z-market__text-link.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-market/blocks-common/z-market-thumbs/z-market-thumbs.bemhtml.js */
// autogenerated from z-market-thumbs.bemhtml
block('z-market-thumbs')(
    tag()('table'),
    elem('thumbs-row').tag()('tr'),
    elem('image').tag()('td'),
    elem('description').tag()('td')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-market/blocks-common/z-market-thumbs/z-market-thumbs.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-market/blocks-common/z-market-rating/z-market-rating.bemhtml.js */
// autogenerated from z-market-rating.bemhtml
block('z-market-rating')(
    tag()('span'),
    content()(function() {
        return [{
            elem: 'stars'
        }, {
            elem: 'stars',
            // this.ctx.value может быть float, но для css классов нужно без .0
            elemMods: {
                type: 'show-value',
                value: parseInt(this.ctx.value * 10, 10)
            }
        }];
    }),
    elem('stars').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-market/blocks-common/z-market-rating/z-market-rating.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-market/blocks-common/z-market-table/z-market-table.bemhtml.js */
// autogenerated from z-market-table.bemhtml
block('z-market-table')(
    elem('price-content').tag()('span'),
    elem('price-content-int').tag()('span'),
    elem('price-content-rat').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-market/blocks-common/z-market-table/z-market-table.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-market/blocks-common/z-market-tile/z-market-tile.bemhtml.js */
// autogenerated from z-market-tile.bemhtml
block('z-market-tile')(
    elem('notice').tag()('span'),
    elem('grid').tag()('table'),
    elem('row').tag()('tr'),
    elem('item').tag()('td'),
    elem('image').tag()('span'),
    elem('warning').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-market/blocks-common/z-market-tile/z-market-tile.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-math/blocks-deskpad/z-math/z-math.bemhtml.js */
// autogenerated from z-math.bemhtml
block('z-math').elem('layout-left').mix()({
    block: 'content-placeholder'
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-math/blocks-deskpad/z-math/z-math.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-metro/blocks-deskpad/z-metro/z-metro.bemhtml.js */
// autogenerated from z-metro.bemhtml
block('z-metro')(
    elem('map-box').content()(function() {
        return [
            this.ctx.content, {
                elem: 'map-shadow',
                elemMods: {
                    pos: 'top'
                }
            }, {
                elem: 'map-shadow',
                elemMods: {
                    pos: 'bottom'
                }
            }
        ];
    }),
    elem('legend').tag()('ul'),
    elem('legend-item').tag()('li'),
    elem('legend-text').tag()('span'),
    elem('tip').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-metro/blocks-deskpad/z-metro/z-metro.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-desktop/b-form/b-form.bemhtml.js */
block('b-form')(
    tag()('form'),
    js()(true),

    attrs()(function() {
        var ctx = this.ctx,
            attrs = applyNext() || {},
            defaults = {};

        (ctx.attrs || {}).action != null && (defaults.method = 'post');

        return this.extend(defaults, attrs);
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-desktop/b-form/b-form.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/appsearch/blocks-deskpad/z-mobile-apps/__filters/z-mobile-apps__filters.bemhtml.js */
// autogenerated from z-mobile-apps__filters.bemhtml
block('z-mobile-apps')(
    elem('hidden').tag()('input'),
    elem('filters').mix()({
        block: 'i-bem'
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/appsearch/blocks-deskpad/z-mobile-apps/__filters/z-mobile-apps__filters.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-money-tel/blocks-deskpad/z-money-tel/z-money-tel.bemhtml.js */
// autogenerated from z-money-tel.bemhtml
block('z-money-tel')(
    js()(true),
    elem('iframe')(
        tag()('iframe'),
        attrs()({
            frameborder: 0
        })
    ),
    elem('form')(
        tag()('form'),
        content()(function() {
            var hiddenInputs = [{
                elem: 'code',
                name: 'phone-prefix'
            }, {
                elem: 'number',
                name: 'phone-number'
            }, {
                name: 'try-payment',
                val: 'true'
            }, {
                name: 'src',
                val: 'ya'
            }, {
                name: 'quickpay_form',
                val: 'koldun'
            }, {
                name: '_openstat',
                val: 'yandex;mphonekoldun;button'
            }];
            return [
                this.ctx.content,
                hiddenInputs.map(function(item) {
                    return {
                        elem: item.elem || '',
                        tag: 'input',
                        attrs: {
                            name: item.name,
                            value: item.val || '',
                            type: 'hidden'
                        }
                    };
                })
            ];
        })
    )
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-money-tel/blocks-deskpad/z-money-tel/z-money-tel.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-parallels/blocks-deskpad/z-parallels/__title/z-parallels__title.bemhtml.js */
// autogenerated from z-parallels__title.bemhtml
block('z-parallels').elem('title').content()(function() {
    return [{
        elem: 'title-icon'
    }, {
        elem: 'title-text',
        content: this.ctx.content
    }];
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-parallels/blocks-deskpad/z-parallels/__title/z-parallels__title.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-parallels/blocks-deskpad/z-parallels/__items/z-parallels__items.bemhtml.js */
// autogenerated from z-parallels__items.bemhtml
block('z-parallels').elem('items').tag()('ul');

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-parallels/blocks-deskpad/z-parallels/__items/z-parallels__items.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-parallels/blocks-deskpad/z-parallels/__item/z-parallels__item.bemhtml.js */
// autogenerated from z-parallels__item.bemhtml
block('z-parallels').elem('item').tag()('li');

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-parallels/blocks-deskpad/z-parallels/__item/z-parallels__item.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-parallels/blocks-deskpad/z-parallels/__image/z-parallels__image.bemhtml.js */
// autogenerated from z-parallels__image.bemhtml
block('z-parallels').elem('image').attrs()(function() {
    return {
        style: 'background-image: url(' + this.ctx.url + ');'
    };
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-parallels/blocks-deskpad/z-parallels/__image/z-parallels__image.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-poetry/blocks-common/z-poetry/z-poetry.bemhtml.js */
// autogenerated from z-poetry.bemhtml
block('z-poetry')(
    elem('columns').tag()('table'),
    elem('row')(
        tag()('tr'),
        bem()(false)
    ),
    elem('cell-pic')(
        tag()('td'),
        mix()({
            elem: 'cell'
        }),
        content()(function() {
            return {
                tag: 'img',
                elem: 'pic',
                attrs: {
                    src: this.ctx.src,
                    alt: this.ctx.alt
                }
            };
        })
    ),
    elem('cell').tag()('td'),
    elem('down')(
        tag()('td'),
        content()({
            elem: 'arrow',
            mix: {
                elem: 'arrow-down'
            }
        })
    ),
    elem('layout').tag()('table'),
    elem('up')(
        tag()('td'),
        content()({
            elem: 'arrow',
            mix: {
                elem: 'arrow-up'
            }
        })
    ),
    elem('text')(
        tag()('td'),
        attrs()({
            rowspan: '2'
        })
    ),
    elem('title').tag()('h3'),
    elem('list-item-toggle')(
        tag()('a'),
        attrs()({
            href: '#toggle'
        })
    ),
    elem('list-item-toggle-arrow')(
        tag()('span'),
        content()('&#9660;')
    ),
    elem('list-item-link')(
        tag()('a'),
        attrs()(function() {
            return {
                href: this.ctx.url
            };
        })
    ),
    elem('list-item-link-url').tag()('span'),
    elem('list-item-link-desc').tag()('span'),
    elem('author').content()(function() {
        return [{
                tag: 'b',
                content: this.ctx.source
            },
            ' ',
            this.ctx.author
        ];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-poetry/blocks-common/z-poetry/z-poetry.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-rasp/blocks-common/z-rasp/z-rasp.bemhtml.js */
// autogenerated from z-rasp.bemhtml
block('z-rasp')(
    elem('data-layout')(
        tag()('table'),
        attrs()({
            cellspacing: 0
        })
    ),
    elem('row').tag()('tr'),
    elem('col').tag()('td'),
    elem('col').elemMod('type', 'head').tag()('th'),
    elem('dayname').tag()('span'),
    elem('date').tag()('span'),
    elem('overflow').content()(function() {
        return [{
            elem: 'overflow-i',
            content: this.ctx.content
        }, {
            elem: 'overflow-fade'
        }];
    }),
    elem('layout')(
        tag()('table'),
        attrs()({
            cellspacing: 0
        }),
        content()(function() {
            return {
                elem: 'tr',
                tag: 'tr',
                content: this.ctx.content
            };
        })
    ),
    elem('column').tag()('td'),
    elem('gap')(
        tag()('td'),
        content()({
            elem: 'gap-i'
        })
    ),
    elem('arrow').tag()('span'),
    elem('time').tag()('span'),
    elem('terminal').tag()('span'),
    elem('company').tag()('span'),
    elem('flight').tag()('span'),
    elem('number').tag()('span'),
    elem('platform').tag()('span'),
    elem('form')(
        tag()('form'),
        attrs()(function() {
            return {
                action: this.ctx.action,
                method: 'GET'
            };
        })
    ),
    elem('hidden')(
        tag()('input'),
        attrs()(function() {
            return {
                name: this.ctx.name,
                type: 'hidden'
            };
        })
    )
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-rasp/blocks-common/z-rasp/z-rasp.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-rlsfacts/blocks-common/z-rlsfacts/z-rlsfacts.bemhtml.js */
// autogenerated from z-rlsfacts.bemhtml
block('z-rlsfacts')(
    elem('sitelinks').tag()('table'),
    elem('sitelinks-row').tag()('tr'),
    elem('sitelinks-cell').tag()('td')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-rlsfacts/blocks-common/z-rlsfacts/z-rlsfacts.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-search/blocks-common/z-search/__title/z-search__title.bemhtml.js */
// autogenerated from z-search__title.bemhtml
block('z-search').elem('title').tag()('h3');

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-search/blocks-common/z-search/__title/z-search__title.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-search/blocks-common/z-search/__form/z-search__form.bemhtml.js */
// autogenerated from z-search__form.bemhtml
block('z-search')(
    elem('form').tag()('form'),
    elem('spin')(
        attrs()({
            style: 'display: none'
        }),
        content()(function() {
            return [{
                    block: 'spin2',
                    mods: {
                        size: 'm',
                        progress: 'yes'
                    }
                }, {
                    tag: 'strong',
                    content: this.ctx.loadingMsg
                },
                this.ctx.loadingText
            ];
        })
    )
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-search/blocks-common/z-search/__form/z-search__form.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-search/blocks-common/z-search-result/z-search-result.bemhtml.js */
// autogenerated from z-search-result.bemhtml
block('z-search-result').elem('address')(
    tag()('a'),
    attrs()(function() {
        return {
            href: this.ctx.url,
            target: '_blank',
            title: this.ctx.content
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-search/blocks-common/z-search-result/z-search-result.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-service-pay/blocks-common/z-service-pay/z-service-pay.bemhtml.js */
// autogenerated from z-service-pay.bemhtml
block('z-service-pay').elem('iframe')(
    tag()('iframe'),
    attrs()({
        frameborder: 0
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-service-pay/blocks-common/z-service-pay/z-service-pay.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/b-autocomplete-item/b-autocomplete-item.bemhtml.js */
block('b-autocomplete-item')(
    tag()('li'),

    match(function() {
        return this.ctx.search_cgi;
    }).match(function() {
        return Array.isArray(this.ctx.search_cgi);
    }).js()(function() {
        return {
            cgi: this.ctx.search_cgi
        };
    }),

    js()(true),

    mix()(function() {
        return [{
            mods: {
                pers: this.ctx.pers ? 'yes' : ''
            }
        }];
    }),

    content()(function() {
        var data = this.ctx.data,
            text = Array.isArray(data) ? data[1] : data;

        return text;
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-common/b-autocomplete-item/b-autocomplete-item.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-desktop/b-autocomplete-item/_type/b-autocomplete-item_type_nav.bemhtml.js */
block('b-autocomplete-item').mod('type', 'nav')(
    def()(function() {
        var data = this.ctx.data,
            urlData = data[4],
            url = (urlData.match(/^\w[\w-]*:\/\//g) ? '' : 'http://') + urlData,
            linkUrlContent = data[3],
            linkInfoConten = '&nbsp;&mdash;&nbsp;' + data[2];

        return applyNext({
            _linkUrlContent: linkUrlContent,
            _linkInfoConten: linkInfoConten,
            _url: url
        });
    }),

    js()(function() {
        return {
            val: this._url
        };
    }),

    content()(function() {
        return {
            elem: 'link',
            tag: 'a',
            attrs: {
                href: this._url,
                target: '_blank'
            },
            content: [{
                elem: 'link-url',
                tag: 'span',
                content: this._linkUrlContent
            }, {
                elem: 'link-info',
                tag: 'span',
                content: this._linkInfoConten
            }]
        };
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-desktop/b-autocomplete-item/_type/b-autocomplete-item_type_nav.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-desktop/b-autocomplete-item/_type/b-autocomplete-item_type_foot.bemhtml.js */
block('b-autocomplete-item').mod('type', 'foot')(
    mix()([{
        mods: {
            enterable: 'no'
        }
    }]),

    content()(function() {
        return (this.ctx.data.slice(1).map(function(chunk) {
            return Array.isArray(chunk) ? {
                    tag: 'span',
                    elem: 'foot',
                    content: chunk[0]
                } :
                chunk;
        }, this));
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-desktop/b-autocomplete-item/_type/b-autocomplete-item_type_foot.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-desktop/b-autocomplete-item/_type/b-autocomplete-item_type_lingvo.bemhtml.js */
// autogenerated from ../../../../../libs/islands-romochka/desktop.blocks/b-autocomplete-item/_type/b-autocomplete-item_type_lingvo.bemhtml
block('b-autocomplete-item').mod('type', 'lingvo').content()(function() {
    var data = this.ctx.data[1];

    return [{
        tag: 'span',
        elem: 'text',
        content: data.text
    }, {
        tag: 'span',
        elem: 'translation',
        content: [' — ', data.translation]
    }];
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/common/blocks-desktop/b-autocomplete-item/_type/b-autocomplete-item_type_lingvo.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-sport/blocks-common/z-sport/z-sport.bemhtml.js */
// autogenerated from z-sport.bemhtml
block('z-sport')(
    elem('scorer').tag()('span'),
    elem('minute').tag()('span'),
    elem('goal-icon').tag()('i'),
    elem('team-icon')(
        tag()('img'),
        attrs()(function() {
            return {
                src: this.ctx.src,
                alt: ''
            };
        })
    ),
    elem('result').content()(function() {
        return this.ctx.first +
            (this.ctx.scoreSeparator || '&thinsp;–&thinsp;') +
            this.ctx.second +
            (this.ctx.extra ? '&thinsp;' + this.ctx.extra : '');
    }),
    elem('additional-result').content()(function() {
        return [
            this.ctx.content, {
                elem: 'additional-result-score',
                content: this.ctx.first + (this.ctx.scoreSeparator || '&thinsp;–&thinsp;') + this.ctx.second
            }
        ];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-sport/blocks-common/z-sport/z-sport.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-sport/blocks-deskpad/z-sport/z-sport.bemhtml.js */
// autogenerated from z-sport_type_new.bemhtml
block('z-sport').elem('team').content()(function() {
    return {
        block: 'link',
        counter: this.ctx.counter,
        url: this.ctx.url,
        mix: {
            block: 'z-sport',
            elem: 'team-wrap'
        },
        content: this.ctx.content
    };
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-sport/blocks-deskpad/z-sport/z-sport.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-sport/blocks-common/z-sport-live/z-sport-live.bemhtml.js */
// autogenerated from z-sport-live.bemhtml
block('z-sport-live')(
    elem('header').tag()('h4'),
    elem('time').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-sport/blocks-common/z-sport-live/z-sport-live.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-sport/blocks-common/z-sport-live/__video/z-sport-live__video.bemhtml.js */
// autogenerated from z-sport-live__video.bemhtml
block('z-sport-live').elem('video-item').content()(function() {
    return {
        block: 'link',
        url: this.ctx.url,
        counter: this.ctx.counter,
        target: this.ctx.target,
        content: {
            block: 'z-sport-live',
            elem: 'link',
            content: this.ctx.content
        }
    };
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-sport/blocks-common/z-sport-live/__video/z-sport-live__video.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-sport/blocks-deskpad/z-sport-live/__video/z-sport-live__video.bemhtml.js */
block('z-sport-live').mod('view', 'vertical').elem('video-item').content()(function() {
    if (!this.ctx.content) return;

    return this.ctx.content.map(function(item) {
        if (!item) return;

        return {
            block: 'z-sport-live',
            elem: item.elem,
            content: {
                block: 'link',
                url: item.url || this.ctx.url,
                counter: item.counter || this.ctx.counter,
                target: this.ctx.target,
                mix: item.linkMix,
                content: item.content
            }
        };
    }, this);
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-sport/blocks-deskpad/z-sport-live/__video/z-sport-live__video.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-taxi/blocks-deskpad/z-taxi/z-taxi.bemhtml.js */
// autogenerated from z-taxi.bemhtml
block('z-taxi')(
    js()(true),
    elem('button-area').content()(function() {
        var content;

        content = {
            block: 'button',
            mix: {
                block: 'z-taxi',
                elem: 'button'
            },
            mods: {
                type: 'submit',
                theme: 'action',
                size: 's'
            },
            counter: this.ctx.counter,
            content: 'Заказать такси'
        };

        return content;
    }),

    elem('under').content()({
        elem: 'spinner',
        content: [{
            block: 'spin2',
            mods: {
                progress: 'yes',
                size: 'l'
            }
        }, {
            elem: 'text',
            content: 'Загрузка...'
        }]
    }),
    elem('iframe')(
        tag()('iframe'),
        attrs()(function() {
            return {
                src: this.ctx.url,
                frameborder: 0
            };
        })
    )
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-taxi/blocks-deskpad/z-taxi/z-taxi.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-taxi/blocks-deskpad/z-taxi/_type/z-taxi_type_full.bemhtml.js */
// autogenerated from z-taxi_type_full.bemhtml
block('z-taxi').elem('sitelinks-item').tag()('span');

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-taxi/blocks-deskpad/z-taxi/_type/z-taxi_type_full.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-taxi/blocks-deskpad/z-taxi-form/z-taxi-form.bemhtml.js */
// autogenerated from z-taxi-form.bemhtml
block('z-taxi-form')(
    tag()('form'),
    attrs()(function() {
        return {
            method: 'get',
            action: this.ctx.url,
            target: this.ctx.target
        };
    }),
    content()(function() {
        return [
            this.ctx.content, {
                tag: 'input',
                attrs: {
                    type: 'hidden',
                    name: 'fromWizard',
                    value: 'yes'
                }
            }, {
                tag: 'input',
                attrs: {
                    type: 'hidden',
                    name: 'city',
                    value: this.ctx.city
                }
            }, {
                tag: 'input',
                elem: 'form-hidden-time',
                attrs: {
                    type: 'hidden',
                    name: 'time',
                    value: '0'
                }
            }
        ];
    })
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-taxi/blocks-deskpad/z-taxi-form/z-taxi-form.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-taxi/blocks-deskpad/z-taxi-tariff/z-taxi-tariff.bemhtml.js */
// autogenerated from z-taxi-tariff.bemhtml
block('z-taxi-tariff')(
    tag()('form'),
    attrs()(function() {
        return {
            method: 'get',
            action: this.ctx.url,
            target: this.ctx.target
        };
    }),
    content()(function() {
        return [
            this.ctx.content, {
                tag: 'input',
                attrs: {
                    type: 'hidden',
                    name: 'fromWizard',
                    value: 'yes'
                }
            }, {
                tag: 'input',
                attrs: {
                    type: 'hidden',
                    name: 'city',
                    value: this.ctx.city
                }
            }
        ];
    }),
    elem('text').tag()('span'),
    elem('dash').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-taxi/blocks-deskpad/z-taxi-tariff/z-taxi-tariff.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-ticket/blocks-common/z-ticket/z-ticket.bemhtml.js */
// autogenerated from z-ticket.bemhtml
block('z-ticket')(
    elem('content')(
        tag()('form'),
        attrs()(function() {
            return {
                method: 'get',
                action: '//' + this.ctx.serviceUrl + '/variants/',
                target: this.ctx.target
            };
        }),
        content()(function() {
            return [
                this.ctx.content, {
                    tag: 'input',
                    attrs: {
                        type: 'hidden',
                        name: 'from',
                        value: 'waviablank'
                    }
                }
            ];
        })
    ),
    elem('hidden')(
        tag()('input'),
        attrs()(function() {
            return {
                type: 'hidden',
                name: this.ctx.name,
                value: this.ctx.value
            };
        })
    )
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-ticket/blocks-common/z-ticket/z-ticket.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-tournament/blocks-common/z-tournament-table/z-tournament-table.bemhtml.js */
block('z-tournament-table')(
    attrs()({ role: 'grid' }),
    elem('head')(
        attrs()({ role: 'rowgroup' }),
        def()(function() {
            return applyNext({ _inHead: true })
        })
    ),
    elem('body').attrs()({ role: 'rowgroup' }),
    elem('footer').attrs()({ role: 'rowgroup' }),
    elem('row').attrs()({ role: 'row' }),
    elem('cell').attrs()(function() { return { role: this._inHead ? 'columnheader' : 'gridcell' }})
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-tournament/blocks-common/z-tournament-table/z-tournament-table.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-tournament/blocks-common/z-tournament-expand/z-tournament-expand.bemhtml.js */
// autogenerated from z-tournament-expand.bemhtml
block('z-tournament-expand').content()(function() {
    return [{
        block: this.block,
        elem: 'wrapper',
        content: applyNext()
    }, {
        block: 'button',
        mix: [{
            block: this.block,
            elem: 'button'
        }],
        mods: {
            size: this.ctx.mods.size,
            pseudo: 'yes'
        },
        content: this.ctx.js.i18n[this.ctx.mods.expanded]
    }];
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-tournament/blocks-common/z-tournament-expand/z-tournament-expand.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-traffic/blocks-common/z-traffic/z-traffic.bemhtml.js */
// autogenerated from z-traffic.bemhtml
block('z-traffic')(
    elem('icon').tag()('i'),
    elem('status').tag()('span')
);

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-traffic/blocks-common/z-traffic/z-traffic.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/video/blocks-common/z-video/z-video.bemhtml.js */
// autogenerated from z-video.bemhtml
block('z-video').elem('serial-title').tag()('span');

/* end: /Users/miripiruni/Documents/www/web4/contribs/video/blocks-common/z-video/z-video.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/video/blocks-desktop/z-video/z-video.bemhtml.js */
block('z-video').elem('thumb-favicon').attrs()(function() {
    var faviconUrl = this.ctx.bg;

    return faviconUrl ? {
        style: 'background-image: ' + faviconUrl
    } : '';
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/video/blocks-desktop/z-video/z-video.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-weather/blocks-deskpad/z-weather/__day/z-weather__day.bemhtml.js */
// autogenerated from z-weather__day.bemhtml
block('z-weather').elem('day').attrs()(function() {
    return {
        style: 'background: #' + this.ctx.bgColor
    };
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-weather/blocks-deskpad/z-weather/__day/z-weather__day.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-weather/blocks-deskpad/z-weather/__night/z-weather__night.bemhtml.js */
// autogenerated from z-weather__night.bemhtml
block('z-weather').elem('night').attrs()(function() {
    return {
        style: 'background: #' + this.ctx.bgColor
    };
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-weather/blocks-deskpad/z-weather/__night/z-weather__night.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-weather/blocks-deskpad/z-weather-redesign/__current/z-weather-redesign__current.bemhtml.js */
block('z-weather-redesign').elem('current-link').def()(function() {
    return applyCtx({
        block: 'link',
        mix: {
            block: 'z-weather-redesign',
            elem: 'current-link'
        },
        url: this.ctx.url,
        counter: this.ctx.counter,
        target: this.ctx.target,
        content: [{
            block: 'z-weather-redesign',
            elem: 'current-temp',
            content: [this.ctx.temperature, {
                block: 'z-weather-redesign',
                elem: 'current-temp-grad',
                tag: 'span',
                content: '°'
            }]
        }, this.ctx.icon]
    });
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-weather/blocks-deskpad/z-weather-redesign/__current/z-weather-redesign__current.bemhtml.js */
/* begin: /Users/miripiruni/Documents/www/web4/contribs/z-weather/blocks-deskpad/z-weather-redesign/__tile/z-weather-redesign__tile.bemhtml.js */
block('z-weather-redesign').elem('tile').def()(function() {
    return applyCtx({
        block: 'link',
        mix: {
            block: 'z-weather-redesign',
            elem: 'tile'
        },
        attrs: {
            style: ('background-color:#' + this.ctx.bgColor)
        },
        url: this.ctx.url,
        counter: this.ctx.counter,
        target: this.ctx.target,
        content: [{
            content: this.ctx.title
        }, {
            block: 'z-weather-redesign',
            elem: 'tile-day',
            content: this.ctx.day
        }, this.ctx.icon, {
            block: 'z-weather-redesign',
            elem: 'tile-night',
            content: this.ctx.night
        }]
    });
});

/* end: /Users/miripiruni/Documents/www/web4/contribs/z-weather/blocks-deskpad/z-weather-redesign/__tile/z-weather-redesign__tile.bemhtml.js */
oninit(function(exports, context) {
    var BEMContext = exports.BEMContext || context.BEMContext;
    // Provides third-party libraries from different modular systems
    BEMContext.prototype.require = function(lib) {
       return __bem_xjst_libs__[lib];
    };
});
